
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.34 (git sha1 4a1b5599258, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend: /openlane/designs/alphasoc_mem/src/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

2. Executing Verilog-2005 frontend: /openlane/designs/alphasoc_mem/src/alphasoc_mem.v
Parsing SystemVerilog input from `/openlane/designs/alphasoc_mem/src/alphasoc_mem.v' to AST representation.
Generating RTLIL representation for module `\alphasoc_mem'.
Successfully finished Verilog frontend.

3. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/alphasoc_mem/runs/RUN_2023.12.03_14.26.22/tmp/synthesis/hierarchy.dot'.
Dumping module alphasoc_mem to page 1.

4. Executing HIERARCHY pass (managing design hierarchy).

4.1. Analyzing design hierarchy..
Top module:  \alphasoc_mem

4.2. Analyzing design hierarchy..
Top module:  \alphasoc_mem
Removed 0 unused modules.
Renaming module alphasoc_mem to alphasoc_mem.

5. Executing TRIBUF pass.

6. Executing HIERARCHY pass (managing design hierarchy).

6.1. Analyzing design hierarchy..
Top module:  \alphasoc_mem

6.2. Analyzing design hierarchy..
Top module:  \alphasoc_mem
Removed 0 unused modules.

7. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 4 switch rules as full_case in process $proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5 in module alphasoc_mem.
Removed a total of 0 dead cases.

9. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 13 assignments to connections.

10. Executing PROC_INIT pass (extract init attributes).

11. Executing PROC_ARST pass (detect async resets in processes).

12. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~4 debug messages>

13. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
     1/12: $1$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_EN[31:0]$30
     2/12: $1$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_DATA[31:0]$29
     3/12: $1$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_ADDR[21:0]$28
     4/12: $1$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_EN[31:0]$27
     5/12: $1$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_DATA[31:0]$26
     6/12: $1$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_ADDR[21:0]$25
     7/12: $1$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_EN[31:0]$24
     8/12: $1$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_DATA[31:0]$23
     9/12: $1$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_ADDR[21:0]$22
    10/12: $1$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_EN[31:0]$21
    11/12: $1$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_DATA[31:0]$20
    12/12: $1$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_ADDR[21:0]$19

14. Executing PROC_DLATCH pass (convert process syncs to latches).

15. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\alphasoc_mem.\rdata' using process `\alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
  created $dff cell `$procdff$67' with positive edge clock.
Creating register for signal `\alphasoc_mem.$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_ADDR' using process `\alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
  created $dff cell `$procdff$68' with positive edge clock.
Creating register for signal `\alphasoc_mem.$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_DATA' using process `\alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
  created $dff cell `$procdff$69' with positive edge clock.
Creating register for signal `\alphasoc_mem.$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_EN' using process `\alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
  created $dff cell `$procdff$70' with positive edge clock.
Creating register for signal `\alphasoc_mem.$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_ADDR' using process `\alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
  created $dff cell `$procdff$71' with positive edge clock.
Creating register for signal `\alphasoc_mem.$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_DATA' using process `\alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
  created $dff cell `$procdff$72' with positive edge clock.
Creating register for signal `\alphasoc_mem.$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_EN' using process `\alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
  created $dff cell `$procdff$73' with positive edge clock.
Creating register for signal `\alphasoc_mem.$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_ADDR' using process `\alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
  created $dff cell `$procdff$74' with positive edge clock.
Creating register for signal `\alphasoc_mem.$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_DATA' using process `\alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
  created $dff cell `$procdff$75' with positive edge clock.
Creating register for signal `\alphasoc_mem.$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_EN' using process `\alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
  created $dff cell `$procdff$76' with positive edge clock.
Creating register for signal `\alphasoc_mem.$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_ADDR' using process `\alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
  created $dff cell `$procdff$77' with positive edge clock.
Creating register for signal `\alphasoc_mem.$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_DATA' using process `\alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
  created $dff cell `$procdff$78' with positive edge clock.
Creating register for signal `\alphasoc_mem.$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_EN' using process `\alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
  created $dff cell `$procdff$79' with positive edge clock.

16. Executing PROC_MEMWR pass (convert process memory writes to cells).

17. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 4 empty switches in `\alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
Removing empty process `alphasoc_mem.$proc$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:12$5'.
Cleaned up 4 empty switches.

18. Executing CHECK pass (checking for obvious problems).
Checking module alphasoc_mem...
Found and reported 0 problems.

19. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.

20. Executing FLATTEN pass (flatten design).

21. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.

22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..
Removed 12 unused cells and 49 unused wires.
<suppressed ~13 debug messages>

23. Executing OPT pass (performing simple optimizations).

23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.

23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphasoc_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphasoc_mem.
    Consolidated identical input bits for $mux cell $procmux$32:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_EN[31:0]$17
      New ports: A=1'0, B=1'1, Y=$0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_EN[31:0]$17 [24]
      New connections: { $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_EN[31:0]$17 [31:25] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_EN[31:0]$17 [23:0] } = { $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_EN[31:0]$17 [24] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_EN[31:0]$17 [24] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_EN[31:0]$17 [24] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_EN[31:0]$17 [24] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_EN[31:0]$17 [24] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_EN[31:0]$17 [24] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_EN[31:0]$17 [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $procmux$41:
      Old ports: A=0, B=16711680, Y=$0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_EN[31:0]$14
      New ports: A=1'0, B=1'1, Y=$0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_EN[31:0]$14 [16]
      New connections: { $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_EN[31:0]$14 [31:17] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_EN[31:0]$14 [15:0] } = { 8'00000000 $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_EN[31:0]$14 [16] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_EN[31:0]$14 [16] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_EN[31:0]$14 [16] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_EN[31:0]$14 [16] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_EN[31:0]$14 [16] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_EN[31:0]$14 [16] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_EN[31:0]$14 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $procmux$50:
      Old ports: A=0, B=65280, Y=$0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_EN[31:0]$11
      New ports: A=1'0, B=1'1, Y=$0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_EN[31:0]$11 [8]
      New connections: { $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_EN[31:0]$11 [31:9] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_EN[31:0]$11 [7:0] } = { 16'0000000000000000 $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_EN[31:0]$11 [8] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_EN[31:0]$11 [8] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_EN[31:0]$11 [8] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_EN[31:0]$11 [8] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_EN[31:0]$11 [8] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_EN[31:0]$11 [8] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_EN[31:0]$11 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $procmux$59:
      Old ports: A=0, B=255, Y=$0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_EN[31:0]$8
      New ports: A=1'0, B=1'1, Y=$0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_EN[31:0]$8 [0]
      New connections: $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_EN[31:0]$8 [31:1] = { 24'000000000000000000000000 $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_EN[31:0]$8 [0] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_EN[31:0]$8 [0] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_EN[31:0]$8 [0] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_EN[31:0]$8 [0] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_EN[31:0]$8 [0] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_EN[31:0]$8 [0] $0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_EN[31:0]$8 [0] }
  Optimizing cells in module \alphasoc_mem.
Performed a total of 4 changes.

23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

23.6. Executing OPT_DFF pass (perform DFF optimizations).

23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..

23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.

23.9. Rerunning OPT passes. (Maybe there is more to do..)

23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphasoc_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphasoc_mem.
Performed a total of 0 changes.

23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

23.13. Executing OPT_DFF pass (perform DFF optimizations).

23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..

23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.

23.16. Finished OPT passes. (There is nothing left to do.)

24. Executing FSM pass (extract and optimize FSM).

24.1. Executing FSM_DETECT pass (finding FSMs in design).

24.2. Executing FSM_EXTRACT pass (extracting FSM from design).

24.3. Executing FSM_OPT pass (simple optimizations of FSMs).

24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..

24.5. Executing FSM_OPT pass (simple optimizations of FSMs).

24.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

24.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

24.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

25. Executing OPT pass (performing simple optimizations).

25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.

25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphasoc_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphasoc_mem.
Performed a total of 0 changes.

25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

25.6. Executing OPT_DFF pass (perform DFF optimizations).

25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..

25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.

25.9. Finished OPT passes. (There is nothing left to do.)

26. Executing WREDUCE pass (reducing word size of cells).
Removed top 14 address bits (of 22) from memory init port alphasoc_mem.$auto$proc_memwr.cc:45:proc_memwr$80 (mem).
Removed top 14 address bits (of 22) from memory init port alphasoc_mem.$auto$proc_memwr.cc:45:proc_memwr$81 (mem).
Removed top 14 address bits (of 22) from memory init port alphasoc_mem.$auto$proc_memwr.cc:45:proc_memwr$82 (mem).
Removed top 14 address bits (of 22) from memory init port alphasoc_mem.$auto$proc_memwr.cc:45:proc_memwr$83 (mem).
Removed top 14 address bits (of 22) from memory read port alphasoc_mem.$memrd$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:13$18 (mem).
Removed top 14 bits (of 22) from mux cell alphasoc_mem.$procmux$38 ($mux).
Removed top 14 bits (of 22) from mux cell alphasoc_mem.$procmux$47 ($mux).
Removed top 14 bits (of 22) from mux cell alphasoc_mem.$procmux$56 ($mux).
Removed top 14 bits (of 22) from mux cell alphasoc_mem.$procmux$65 ($mux).
Removed top 14 bits (of 22) from wire alphasoc_mem.$0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_ADDR[21:0]$6.
Removed top 24 bits (of 32) from wire alphasoc_mem.$0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:14$1_EN[31:0]$8.
Removed top 14 bits (of 22) from wire alphasoc_mem.$0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_ADDR[21:0]$9.
Removed top 16 bits (of 32) from wire alphasoc_mem.$0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:15$2_EN[31:0]$11.
Removed top 14 bits (of 22) from wire alphasoc_mem.$0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_ADDR[21:0]$12.
Removed top 8 bits (of 32) from wire alphasoc_mem.$0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:16$3_EN[31:0]$14.
Removed top 14 bits (of 22) from wire alphasoc_mem.$0$memwr$\mem$/openlane/designs/alphasoc_mem/src/alphasoc_mem.v:17$4_ADDR[21:0]$15.

27. Executing PEEPOPT pass (run peephole optimizers).

28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

29. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module alphasoc_mem:
  created 0 $alu and 0 $macc cells.

30. Executing SHARE pass (SAT-based resource sharing).

31. Executing OPT pass (performing simple optimizations).

31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.

31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphasoc_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphasoc_mem.
Performed a total of 0 changes.

31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

31.6. Executing OPT_DFF pass (perform DFF optimizations).

31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..

31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.

31.9. Finished OPT passes. (There is nothing left to do.)

32. Executing MEMORY pass.

32.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 96 transformations.

32.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 6 transformations.

32.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing alphasoc_mem.mem write port 0.
  Analyzing alphasoc_mem.mem write port 1.
  Analyzing alphasoc_mem.mem write port 2.
  Analyzing alphasoc_mem.mem write port 3.

32.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

32.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\mem'[0] in module `\alphasoc_mem': merging output FF to cell.
    Write port 0: non-transparent.
    Write port 1: non-transparent.
    Write port 2: non-transparent.
    Write port 3: non-transparent.

32.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..
Removed 1 unused cells and 33 unused wires.
<suppressed ~2 debug messages>

32.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory alphasoc_mem.mem by address:
  Merging ports 0, 1 (address \addr [7:0]).
  Merging ports 0, 2 (address \addr [7:0]).
  Merging ports 0, 3 (address \addr [7:0]).

32.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

32.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

32.10. Executing MEMORY_COLLECT pass (generating $mem cells).

33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..

34. Executing OPT pass (performing simple optimizations).

34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.
<suppressed ~8 debug messages>

34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

34.3. Executing OPT_DFF pass (perform DFF optimizations).

34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

34.5. Finished fast OPT passes.

35. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \mem in module \alphasoc_mem:
  created 256 $dff cells and 0 static cells of width 32.
Extracted data FF from read port 0 of alphasoc_mem.mem: $\mem$rdreg[0]
  read interface: 1 $dff and 255 $mux cells.
  write interface: 1024 write mux blocks.

36. Executing OPT pass (performing simple optimizations).

36.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.
<suppressed ~16 debug messages>

36.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

36.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphasoc_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1025 debug messages>

36.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphasoc_mem.
Performed a total of 0 changes.

36.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

36.6. Executing OPT_SHARE pass.

36.7. Executing OPT_DFF pass (perform DFF optimizations).

36.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..
Removed 0 unused cells and 520 unused wires.
<suppressed ~1 debug messages>

36.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.

36.10. Rerunning OPT passes. (Maybe there is more to do..)

36.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphasoc_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1025 debug messages>

36.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphasoc_mem.
Performed a total of 0 changes.

36.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

36.14. Executing OPT_SHARE pass.

36.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\mem[9]$142 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[9] [7:0]).
Adding EN signal on $memory\mem[9]$142 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[9] [15:8]).
Adding EN signal on $memory\mem[9]$142 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[9] [23:16]).
Adding EN signal on $memory\mem[9]$142 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[9] [31:24]).
Adding EN signal on $memory\mem[99]$322 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[99] [7:0]).
Adding EN signal on $memory\mem[99]$322 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[99] [15:8]).
Adding EN signal on $memory\mem[99]$322 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[99] [23:16]).
Adding EN signal on $memory\mem[99]$322 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[99] [31:24]).
Adding EN signal on $memory\mem[98]$320 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[98] [7:0]).
Adding EN signal on $memory\mem[98]$320 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[98] [15:8]).
Adding EN signal on $memory\mem[98]$320 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[98] [23:16]).
Adding EN signal on $memory\mem[98]$320 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[98] [31:24]).
Adding EN signal on $memory\mem[97]$318 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[97] [7:0]).
Adding EN signal on $memory\mem[97]$318 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[97] [15:8]).
Adding EN signal on $memory\mem[97]$318 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[97] [23:16]).
Adding EN signal on $memory\mem[97]$318 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[97] [31:24]).
Adding EN signal on $memory\mem[96]$316 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[96] [7:0]).
Adding EN signal on $memory\mem[96]$316 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[96] [15:8]).
Adding EN signal on $memory\mem[96]$316 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[96] [23:16]).
Adding EN signal on $memory\mem[96]$316 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[96] [31:24]).
Adding EN signal on $memory\mem[95]$314 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[95] [7:0]).
Adding EN signal on $memory\mem[95]$314 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[95] [15:8]).
Adding EN signal on $memory\mem[95]$314 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[95] [23:16]).
Adding EN signal on $memory\mem[95]$314 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[95] [31:24]).
Adding EN signal on $memory\mem[94]$312 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[94] [7:0]).
Adding EN signal on $memory\mem[94]$312 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[94] [15:8]).
Adding EN signal on $memory\mem[94]$312 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[94] [23:16]).
Adding EN signal on $memory\mem[94]$312 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[94] [31:24]).
Adding EN signal on $memory\mem[93]$310 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[93] [7:0]).
Adding EN signal on $memory\mem[93]$310 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[93] [15:8]).
Adding EN signal on $memory\mem[93]$310 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[93] [23:16]).
Adding EN signal on $memory\mem[93]$310 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[93] [31:24]).
Adding EN signal on $memory\mem[92]$308 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[92] [7:0]).
Adding EN signal on $memory\mem[92]$308 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[92] [15:8]).
Adding EN signal on $memory\mem[92]$308 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[92] [23:16]).
Adding EN signal on $memory\mem[92]$308 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[92] [31:24]).
Adding EN signal on $memory\mem[91]$306 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[91] [7:0]).
Adding EN signal on $memory\mem[91]$306 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[91] [15:8]).
Adding EN signal on $memory\mem[91]$306 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[91] [23:16]).
Adding EN signal on $memory\mem[91]$306 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[91] [31:24]).
Adding EN signal on $memory\mem[90]$304 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[90] [7:0]).
Adding EN signal on $memory\mem[90]$304 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[90] [15:8]).
Adding EN signal on $memory\mem[90]$304 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[90] [23:16]).
Adding EN signal on $memory\mem[90]$304 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[90] [31:24]).
Adding EN signal on $memory\mem[8]$140 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[8] [7:0]).
Adding EN signal on $memory\mem[8]$140 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[8] [15:8]).
Adding EN signal on $memory\mem[8]$140 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[8] [23:16]).
Adding EN signal on $memory\mem[8]$140 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[8] [31:24]).
Adding EN signal on $memory\mem[89]$302 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[89] [7:0]).
Adding EN signal on $memory\mem[89]$302 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[89] [15:8]).
Adding EN signal on $memory\mem[89]$302 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[89] [23:16]).
Adding EN signal on $memory\mem[89]$302 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[89] [31:24]).
Adding EN signal on $memory\mem[88]$300 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[88] [7:0]).
Adding EN signal on $memory\mem[88]$300 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[88] [15:8]).
Adding EN signal on $memory\mem[88]$300 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[88] [23:16]).
Adding EN signal on $memory\mem[88]$300 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[88] [31:24]).
Adding EN signal on $memory\mem[87]$298 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[87] [7:0]).
Adding EN signal on $memory\mem[87]$298 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[87] [15:8]).
Adding EN signal on $memory\mem[87]$298 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[87] [23:16]).
Adding EN signal on $memory\mem[87]$298 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[87] [31:24]).
Adding EN signal on $memory\mem[86]$296 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[86] [7:0]).
Adding EN signal on $memory\mem[86]$296 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[86] [15:8]).
Adding EN signal on $memory\mem[86]$296 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[86] [23:16]).
Adding EN signal on $memory\mem[86]$296 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[86] [31:24]).
Adding EN signal on $memory\mem[85]$294 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[85] [7:0]).
Adding EN signal on $memory\mem[85]$294 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[85] [15:8]).
Adding EN signal on $memory\mem[85]$294 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[85] [23:16]).
Adding EN signal on $memory\mem[85]$294 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[85] [31:24]).
Adding EN signal on $memory\mem[84]$292 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[84] [7:0]).
Adding EN signal on $memory\mem[84]$292 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[84] [15:8]).
Adding EN signal on $memory\mem[84]$292 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[84] [23:16]).
Adding EN signal on $memory\mem[84]$292 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[84] [31:24]).
Adding EN signal on $memory\mem[83]$290 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[83] [7:0]).
Adding EN signal on $memory\mem[83]$290 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[83] [15:8]).
Adding EN signal on $memory\mem[83]$290 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[83] [23:16]).
Adding EN signal on $memory\mem[83]$290 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[83] [31:24]).
Adding EN signal on $memory\mem[82]$288 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[82] [7:0]).
Adding EN signal on $memory\mem[82]$288 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[82] [15:8]).
Adding EN signal on $memory\mem[82]$288 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[82] [23:16]).
Adding EN signal on $memory\mem[82]$288 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[82] [31:24]).
Adding EN signal on $memory\mem[81]$286 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[81] [7:0]).
Adding EN signal on $memory\mem[81]$286 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[81] [15:8]).
Adding EN signal on $memory\mem[81]$286 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[81] [23:16]).
Adding EN signal on $memory\mem[81]$286 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[81] [31:24]).
Adding EN signal on $memory\mem[80]$284 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[80] [7:0]).
Adding EN signal on $memory\mem[80]$284 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[80] [15:8]).
Adding EN signal on $memory\mem[80]$284 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[80] [23:16]).
Adding EN signal on $memory\mem[80]$284 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[80] [31:24]).
Adding EN signal on $memory\mem[7]$138 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[7] [7:0]).
Adding EN signal on $memory\mem[7]$138 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[7] [15:8]).
Adding EN signal on $memory\mem[7]$138 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[7] [23:16]).
Adding EN signal on $memory\mem[7]$138 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[7] [31:24]).
Adding EN signal on $memory\mem[79]$282 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[79] [7:0]).
Adding EN signal on $memory\mem[79]$282 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[79] [15:8]).
Adding EN signal on $memory\mem[79]$282 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[79] [23:16]).
Adding EN signal on $memory\mem[79]$282 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[79] [31:24]).
Adding EN signal on $memory\mem[78]$280 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[78] [7:0]).
Adding EN signal on $memory\mem[78]$280 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[78] [15:8]).
Adding EN signal on $memory\mem[78]$280 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[78] [23:16]).
Adding EN signal on $memory\mem[78]$280 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[78] [31:24]).
Adding EN signal on $memory\mem[77]$278 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[77] [7:0]).
Adding EN signal on $memory\mem[77]$278 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[77] [15:8]).
Adding EN signal on $memory\mem[77]$278 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[77] [23:16]).
Adding EN signal on $memory\mem[77]$278 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[77] [31:24]).
Adding EN signal on $memory\mem[76]$276 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[76] [7:0]).
Adding EN signal on $memory\mem[76]$276 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[76] [15:8]).
Adding EN signal on $memory\mem[76]$276 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[76] [23:16]).
Adding EN signal on $memory\mem[76]$276 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[76] [31:24]).
Adding EN signal on $memory\mem[75]$274 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[75] [7:0]).
Adding EN signal on $memory\mem[75]$274 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[75] [15:8]).
Adding EN signal on $memory\mem[75]$274 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[75] [23:16]).
Adding EN signal on $memory\mem[75]$274 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[75] [31:24]).
Adding EN signal on $memory\mem[74]$272 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[74] [7:0]).
Adding EN signal on $memory\mem[74]$272 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[74] [15:8]).
Adding EN signal on $memory\mem[74]$272 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[74] [23:16]).
Adding EN signal on $memory\mem[74]$272 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[74] [31:24]).
Adding EN signal on $memory\mem[73]$270 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[73] [7:0]).
Adding EN signal on $memory\mem[73]$270 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[73] [15:8]).
Adding EN signal on $memory\mem[73]$270 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[73] [23:16]).
Adding EN signal on $memory\mem[73]$270 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[73] [31:24]).
Adding EN signal on $memory\mem[72]$268 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[72] [7:0]).
Adding EN signal on $memory\mem[72]$268 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[72] [15:8]).
Adding EN signal on $memory\mem[72]$268 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[72] [23:16]).
Adding EN signal on $memory\mem[72]$268 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[72] [31:24]).
Adding EN signal on $memory\mem[71]$266 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[71] [7:0]).
Adding EN signal on $memory\mem[71]$266 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[71] [15:8]).
Adding EN signal on $memory\mem[71]$266 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[71] [23:16]).
Adding EN signal on $memory\mem[71]$266 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[71] [31:24]).
Adding EN signal on $memory\mem[70]$264 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[70] [7:0]).
Adding EN signal on $memory\mem[70]$264 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[70] [15:8]).
Adding EN signal on $memory\mem[70]$264 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[70] [23:16]).
Adding EN signal on $memory\mem[70]$264 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[70] [31:24]).
Adding EN signal on $memory\mem[6]$136 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[6] [7:0]).
Adding EN signal on $memory\mem[6]$136 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[6] [15:8]).
Adding EN signal on $memory\mem[6]$136 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[6] [23:16]).
Adding EN signal on $memory\mem[6]$136 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[6] [31:24]).
Adding EN signal on $memory\mem[69]$262 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[69] [7:0]).
Adding EN signal on $memory\mem[69]$262 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[69] [15:8]).
Adding EN signal on $memory\mem[69]$262 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[69] [23:16]).
Adding EN signal on $memory\mem[69]$262 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[69] [31:24]).
Adding EN signal on $memory\mem[68]$260 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[68] [7:0]).
Adding EN signal on $memory\mem[68]$260 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[68] [15:8]).
Adding EN signal on $memory\mem[68]$260 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[68] [23:16]).
Adding EN signal on $memory\mem[68]$260 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[68] [31:24]).
Adding EN signal on $memory\mem[67]$258 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[67] [7:0]).
Adding EN signal on $memory\mem[67]$258 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[67] [15:8]).
Adding EN signal on $memory\mem[67]$258 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[67] [23:16]).
Adding EN signal on $memory\mem[67]$258 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[67] [31:24]).
Adding EN signal on $memory\mem[66]$256 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[66] [7:0]).
Adding EN signal on $memory\mem[66]$256 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[66] [15:8]).
Adding EN signal on $memory\mem[66]$256 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[66] [23:16]).
Adding EN signal on $memory\mem[66]$256 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[66] [31:24]).
Adding EN signal on $memory\mem[65]$254 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[65] [7:0]).
Adding EN signal on $memory\mem[65]$254 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[65] [15:8]).
Adding EN signal on $memory\mem[65]$254 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[65] [23:16]).
Adding EN signal on $memory\mem[65]$254 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[65] [31:24]).
Adding EN signal on $memory\mem[64]$252 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[64] [7:0]).
Adding EN signal on $memory\mem[64]$252 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[64] [15:8]).
Adding EN signal on $memory\mem[64]$252 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[64] [23:16]).
Adding EN signal on $memory\mem[64]$252 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[64] [31:24]).
Adding EN signal on $memory\mem[63]$250 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[63] [7:0]).
Adding EN signal on $memory\mem[63]$250 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[63] [15:8]).
Adding EN signal on $memory\mem[63]$250 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[63] [23:16]).
Adding EN signal on $memory\mem[63]$250 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[63] [31:24]).
Adding EN signal on $memory\mem[62]$248 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[62] [7:0]).
Adding EN signal on $memory\mem[62]$248 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[62] [15:8]).
Adding EN signal on $memory\mem[62]$248 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[62] [23:16]).
Adding EN signal on $memory\mem[62]$248 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[62] [31:24]).
Adding EN signal on $memory\mem[61]$246 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[61] [7:0]).
Adding EN signal on $memory\mem[61]$246 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[61] [15:8]).
Adding EN signal on $memory\mem[61]$246 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[61] [23:16]).
Adding EN signal on $memory\mem[61]$246 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[61] [31:24]).
Adding EN signal on $memory\mem[60]$244 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[60] [7:0]).
Adding EN signal on $memory\mem[60]$244 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[60] [15:8]).
Adding EN signal on $memory\mem[60]$244 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[60] [23:16]).
Adding EN signal on $memory\mem[60]$244 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[60] [31:24]).
Adding EN signal on $memory\mem[5]$134 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[5] [7:0]).
Adding EN signal on $memory\mem[5]$134 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[5] [15:8]).
Adding EN signal on $memory\mem[5]$134 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[5] [23:16]).
Adding EN signal on $memory\mem[5]$134 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[5] [31:24]).
Adding EN signal on $memory\mem[59]$242 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[59] [7:0]).
Adding EN signal on $memory\mem[59]$242 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[59] [15:8]).
Adding EN signal on $memory\mem[59]$242 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[59] [23:16]).
Adding EN signal on $memory\mem[59]$242 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[59] [31:24]).
Adding EN signal on $memory\mem[58]$240 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[58] [7:0]).
Adding EN signal on $memory\mem[58]$240 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[58] [15:8]).
Adding EN signal on $memory\mem[58]$240 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[58] [23:16]).
Adding EN signal on $memory\mem[58]$240 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[58] [31:24]).
Adding EN signal on $memory\mem[57]$238 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[57] [7:0]).
Adding EN signal on $memory\mem[57]$238 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[57] [15:8]).
Adding EN signal on $memory\mem[57]$238 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[57] [23:16]).
Adding EN signal on $memory\mem[57]$238 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[57] [31:24]).
Adding EN signal on $memory\mem[56]$236 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[56] [7:0]).
Adding EN signal on $memory\mem[56]$236 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[56] [15:8]).
Adding EN signal on $memory\mem[56]$236 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[56] [23:16]).
Adding EN signal on $memory\mem[56]$236 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[56] [31:24]).
Adding EN signal on $memory\mem[55]$234 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[55] [7:0]).
Adding EN signal on $memory\mem[55]$234 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[55] [15:8]).
Adding EN signal on $memory\mem[55]$234 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[55] [23:16]).
Adding EN signal on $memory\mem[55]$234 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[55] [31:24]).
Adding EN signal on $memory\mem[54]$232 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[54] [7:0]).
Adding EN signal on $memory\mem[54]$232 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[54] [15:8]).
Adding EN signal on $memory\mem[54]$232 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[54] [23:16]).
Adding EN signal on $memory\mem[54]$232 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[54] [31:24]).
Adding EN signal on $memory\mem[53]$230 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[53] [7:0]).
Adding EN signal on $memory\mem[53]$230 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[53] [15:8]).
Adding EN signal on $memory\mem[53]$230 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[53] [23:16]).
Adding EN signal on $memory\mem[53]$230 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[53] [31:24]).
Adding EN signal on $memory\mem[52]$228 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[52] [7:0]).
Adding EN signal on $memory\mem[52]$228 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[52] [15:8]).
Adding EN signal on $memory\mem[52]$228 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[52] [23:16]).
Adding EN signal on $memory\mem[52]$228 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[52] [31:24]).
Adding EN signal on $memory\mem[51]$226 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[51] [7:0]).
Adding EN signal on $memory\mem[51]$226 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[51] [15:8]).
Adding EN signal on $memory\mem[51]$226 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[51] [23:16]).
Adding EN signal on $memory\mem[51]$226 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[51] [31:24]).
Adding EN signal on $memory\mem[50]$224 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[50] [7:0]).
Adding EN signal on $memory\mem[50]$224 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[50] [15:8]).
Adding EN signal on $memory\mem[50]$224 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[50] [23:16]).
Adding EN signal on $memory\mem[50]$224 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[50] [31:24]).
Adding EN signal on $memory\mem[4]$132 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[4] [7:0]).
Adding EN signal on $memory\mem[4]$132 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[4] [15:8]).
Adding EN signal on $memory\mem[4]$132 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[4] [23:16]).
Adding EN signal on $memory\mem[4]$132 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[4] [31:24]).
Adding EN signal on $memory\mem[49]$222 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[49] [7:0]).
Adding EN signal on $memory\mem[49]$222 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[49] [15:8]).
Adding EN signal on $memory\mem[49]$222 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[49] [23:16]).
Adding EN signal on $memory\mem[49]$222 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[49] [31:24]).
Adding EN signal on $memory\mem[48]$220 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[48] [7:0]).
Adding EN signal on $memory\mem[48]$220 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[48] [15:8]).
Adding EN signal on $memory\mem[48]$220 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[48] [23:16]).
Adding EN signal on $memory\mem[48]$220 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[48] [31:24]).
Adding EN signal on $memory\mem[47]$218 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[47] [7:0]).
Adding EN signal on $memory\mem[47]$218 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[47] [15:8]).
Adding EN signal on $memory\mem[47]$218 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[47] [23:16]).
Adding EN signal on $memory\mem[47]$218 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[47] [31:24]).
Adding EN signal on $memory\mem[46]$216 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[46] [7:0]).
Adding EN signal on $memory\mem[46]$216 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[46] [15:8]).
Adding EN signal on $memory\mem[46]$216 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[46] [23:16]).
Adding EN signal on $memory\mem[46]$216 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[46] [31:24]).
Adding EN signal on $memory\mem[45]$214 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[45] [7:0]).
Adding EN signal on $memory\mem[45]$214 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[45] [15:8]).
Adding EN signal on $memory\mem[45]$214 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[45] [23:16]).
Adding EN signal on $memory\mem[45]$214 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[45] [31:24]).
Adding EN signal on $memory\mem[44]$212 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[44] [7:0]).
Adding EN signal on $memory\mem[44]$212 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[44] [15:8]).
Adding EN signal on $memory\mem[44]$212 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[44] [23:16]).
Adding EN signal on $memory\mem[44]$212 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[44] [31:24]).
Adding EN signal on $memory\mem[43]$210 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[43] [7:0]).
Adding EN signal on $memory\mem[43]$210 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[43] [15:8]).
Adding EN signal on $memory\mem[43]$210 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[43] [23:16]).
Adding EN signal on $memory\mem[43]$210 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[43] [31:24]).
Adding EN signal on $memory\mem[42]$208 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[42] [7:0]).
Adding EN signal on $memory\mem[42]$208 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[42] [15:8]).
Adding EN signal on $memory\mem[42]$208 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[42] [23:16]).
Adding EN signal on $memory\mem[42]$208 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[42] [31:24]).
Adding EN signal on $memory\mem[41]$206 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[41] [7:0]).
Adding EN signal on $memory\mem[41]$206 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[41] [15:8]).
Adding EN signal on $memory\mem[41]$206 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[41] [23:16]).
Adding EN signal on $memory\mem[41]$206 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[41] [31:24]).
Adding EN signal on $memory\mem[40]$204 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[40] [7:0]).
Adding EN signal on $memory\mem[40]$204 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[40] [15:8]).
Adding EN signal on $memory\mem[40]$204 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[40] [23:16]).
Adding EN signal on $memory\mem[40]$204 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[40] [31:24]).
Adding EN signal on $memory\mem[3]$130 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[3] [7:0]).
Adding EN signal on $memory\mem[3]$130 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[3] [15:8]).
Adding EN signal on $memory\mem[3]$130 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[3] [23:16]).
Adding EN signal on $memory\mem[3]$130 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[3] [31:24]).
Adding EN signal on $memory\mem[39]$202 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[39] [7:0]).
Adding EN signal on $memory\mem[39]$202 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[39] [15:8]).
Adding EN signal on $memory\mem[39]$202 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[39] [23:16]).
Adding EN signal on $memory\mem[39]$202 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[39] [31:24]).
Adding EN signal on $memory\mem[38]$200 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[38] [7:0]).
Adding EN signal on $memory\mem[38]$200 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[38] [15:8]).
Adding EN signal on $memory\mem[38]$200 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[38] [23:16]).
Adding EN signal on $memory\mem[38]$200 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[38] [31:24]).
Adding EN signal on $memory\mem[37]$198 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[37] [7:0]).
Adding EN signal on $memory\mem[37]$198 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[37] [15:8]).
Adding EN signal on $memory\mem[37]$198 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[37] [23:16]).
Adding EN signal on $memory\mem[37]$198 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[37] [31:24]).
Adding EN signal on $memory\mem[36]$196 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[36] [7:0]).
Adding EN signal on $memory\mem[36]$196 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[36] [15:8]).
Adding EN signal on $memory\mem[36]$196 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[36] [23:16]).
Adding EN signal on $memory\mem[36]$196 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[36] [31:24]).
Adding EN signal on $memory\mem[35]$194 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[35] [7:0]).
Adding EN signal on $memory\mem[35]$194 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[35] [15:8]).
Adding EN signal on $memory\mem[35]$194 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[35] [23:16]).
Adding EN signal on $memory\mem[35]$194 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[35] [31:24]).
Adding EN signal on $memory\mem[34]$192 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[34] [7:0]).
Adding EN signal on $memory\mem[34]$192 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[34] [15:8]).
Adding EN signal on $memory\mem[34]$192 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[34] [23:16]).
Adding EN signal on $memory\mem[34]$192 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[34] [31:24]).
Adding EN signal on $memory\mem[33]$190 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[33] [7:0]).
Adding EN signal on $memory\mem[33]$190 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[33] [15:8]).
Adding EN signal on $memory\mem[33]$190 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[33] [23:16]).
Adding EN signal on $memory\mem[33]$190 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[33] [31:24]).
Adding EN signal on $memory\mem[32]$188 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[32] [7:0]).
Adding EN signal on $memory\mem[32]$188 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[32] [15:8]).
Adding EN signal on $memory\mem[32]$188 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[32] [23:16]).
Adding EN signal on $memory\mem[32]$188 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[32] [31:24]).
Adding EN signal on $memory\mem[31]$186 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[31] [7:0]).
Adding EN signal on $memory\mem[31]$186 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[31] [15:8]).
Adding EN signal on $memory\mem[31]$186 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[31] [23:16]).
Adding EN signal on $memory\mem[31]$186 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[31] [31:24]).
Adding EN signal on $memory\mem[30]$184 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[30] [7:0]).
Adding EN signal on $memory\mem[30]$184 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[30] [15:8]).
Adding EN signal on $memory\mem[30]$184 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[30] [23:16]).
Adding EN signal on $memory\mem[30]$184 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[30] [31:24]).
Adding EN signal on $memory\mem[2]$128 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[2] [7:0]).
Adding EN signal on $memory\mem[2]$128 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[2] [15:8]).
Adding EN signal on $memory\mem[2]$128 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[2] [23:16]).
Adding EN signal on $memory\mem[2]$128 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[2] [31:24]).
Adding EN signal on $memory\mem[29]$182 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[29] [7:0]).
Adding EN signal on $memory\mem[29]$182 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[29] [15:8]).
Adding EN signal on $memory\mem[29]$182 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[29] [23:16]).
Adding EN signal on $memory\mem[29]$182 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[29] [31:24]).
Adding EN signal on $memory\mem[28]$180 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[28] [7:0]).
Adding EN signal on $memory\mem[28]$180 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[28] [15:8]).
Adding EN signal on $memory\mem[28]$180 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[28] [23:16]).
Adding EN signal on $memory\mem[28]$180 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[28] [31:24]).
Adding EN signal on $memory\mem[27]$178 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[27] [7:0]).
Adding EN signal on $memory\mem[27]$178 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[27] [15:8]).
Adding EN signal on $memory\mem[27]$178 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[27] [23:16]).
Adding EN signal on $memory\mem[27]$178 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[27] [31:24]).
Adding EN signal on $memory\mem[26]$176 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[26] [7:0]).
Adding EN signal on $memory\mem[26]$176 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[26] [15:8]).
Adding EN signal on $memory\mem[26]$176 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[26] [23:16]).
Adding EN signal on $memory\mem[26]$176 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[26] [31:24]).
Adding EN signal on $memory\mem[25]$174 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[25] [7:0]).
Adding EN signal on $memory\mem[25]$174 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[25] [15:8]).
Adding EN signal on $memory\mem[25]$174 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[25] [23:16]).
Adding EN signal on $memory\mem[25]$174 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[25] [31:24]).
Adding EN signal on $memory\mem[255]$634 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[255] [7:0]).
Adding EN signal on $memory\mem[255]$634 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[255] [15:8]).
Adding EN signal on $memory\mem[255]$634 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[255] [23:16]).
Adding EN signal on $memory\mem[255]$634 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[255] [31:24]).
Adding EN signal on $memory\mem[254]$632 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[254] [7:0]).
Adding EN signal on $memory\mem[254]$632 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[254] [15:8]).
Adding EN signal on $memory\mem[254]$632 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[254] [23:16]).
Adding EN signal on $memory\mem[254]$632 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[254] [31:24]).
Adding EN signal on $memory\mem[253]$630 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[253] [7:0]).
Adding EN signal on $memory\mem[253]$630 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[253] [15:8]).
Adding EN signal on $memory\mem[253]$630 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[253] [23:16]).
Adding EN signal on $memory\mem[253]$630 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[253] [31:24]).
Adding EN signal on $memory\mem[252]$628 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[252] [7:0]).
Adding EN signal on $memory\mem[252]$628 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[252] [15:8]).
Adding EN signal on $memory\mem[252]$628 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[252] [23:16]).
Adding EN signal on $memory\mem[252]$628 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[252] [31:24]).
Adding EN signal on $memory\mem[251]$626 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[251] [7:0]).
Adding EN signal on $memory\mem[251]$626 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[251] [15:8]).
Adding EN signal on $memory\mem[251]$626 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[251] [23:16]).
Adding EN signal on $memory\mem[251]$626 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[251] [31:24]).
Adding EN signal on $memory\mem[250]$624 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[250] [7:0]).
Adding EN signal on $memory\mem[250]$624 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[250] [15:8]).
Adding EN signal on $memory\mem[250]$624 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[250] [23:16]).
Adding EN signal on $memory\mem[250]$624 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[250] [31:24]).
Adding EN signal on $memory\mem[24]$172 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[24] [7:0]).
Adding EN signal on $memory\mem[24]$172 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[24] [15:8]).
Adding EN signal on $memory\mem[24]$172 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[24] [23:16]).
Adding EN signal on $memory\mem[24]$172 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[24] [31:24]).
Adding EN signal on $memory\mem[249]$622 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[249] [7:0]).
Adding EN signal on $memory\mem[249]$622 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[249] [15:8]).
Adding EN signal on $memory\mem[249]$622 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[249] [23:16]).
Adding EN signal on $memory\mem[249]$622 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[249] [31:24]).
Adding EN signal on $memory\mem[248]$620 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[248] [7:0]).
Adding EN signal on $memory\mem[248]$620 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[248] [15:8]).
Adding EN signal on $memory\mem[248]$620 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[248] [23:16]).
Adding EN signal on $memory\mem[248]$620 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[248] [31:24]).
Adding EN signal on $memory\mem[247]$618 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[247] [7:0]).
Adding EN signal on $memory\mem[247]$618 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[247] [15:8]).
Adding EN signal on $memory\mem[247]$618 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[247] [23:16]).
Adding EN signal on $memory\mem[247]$618 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[247] [31:24]).
Adding EN signal on $memory\mem[246]$616 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[246] [7:0]).
Adding EN signal on $memory\mem[246]$616 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[246] [15:8]).
Adding EN signal on $memory\mem[246]$616 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[246] [23:16]).
Adding EN signal on $memory\mem[246]$616 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[246] [31:24]).
Adding EN signal on $memory\mem[245]$614 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[245] [7:0]).
Adding EN signal on $memory\mem[245]$614 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[245] [15:8]).
Adding EN signal on $memory\mem[245]$614 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[245] [23:16]).
Adding EN signal on $memory\mem[245]$614 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[245] [31:24]).
Adding EN signal on $memory\mem[244]$612 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[244] [7:0]).
Adding EN signal on $memory\mem[244]$612 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[244] [15:8]).
Adding EN signal on $memory\mem[244]$612 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[244] [23:16]).
Adding EN signal on $memory\mem[244]$612 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[244] [31:24]).
Adding EN signal on $memory\mem[243]$610 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[243] [7:0]).
Adding EN signal on $memory\mem[243]$610 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[243] [15:8]).
Adding EN signal on $memory\mem[243]$610 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[243] [23:16]).
Adding EN signal on $memory\mem[243]$610 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[243] [31:24]).
Adding EN signal on $memory\mem[242]$608 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[242] [7:0]).
Adding EN signal on $memory\mem[242]$608 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[242] [15:8]).
Adding EN signal on $memory\mem[242]$608 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[242] [23:16]).
Adding EN signal on $memory\mem[242]$608 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[242] [31:24]).
Adding EN signal on $memory\mem[241]$606 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[241] [7:0]).
Adding EN signal on $memory\mem[241]$606 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[241] [15:8]).
Adding EN signal on $memory\mem[241]$606 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[241] [23:16]).
Adding EN signal on $memory\mem[241]$606 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[241] [31:24]).
Adding EN signal on $memory\mem[240]$604 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[240] [7:0]).
Adding EN signal on $memory\mem[240]$604 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[240] [15:8]).
Adding EN signal on $memory\mem[240]$604 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[240] [23:16]).
Adding EN signal on $memory\mem[240]$604 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[240] [31:24]).
Adding EN signal on $memory\mem[23]$170 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[23] [7:0]).
Adding EN signal on $memory\mem[23]$170 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[23] [15:8]).
Adding EN signal on $memory\mem[23]$170 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[23] [23:16]).
Adding EN signal on $memory\mem[23]$170 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[23] [31:24]).
Adding EN signal on $memory\mem[239]$602 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[239] [7:0]).
Adding EN signal on $memory\mem[239]$602 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[239] [15:8]).
Adding EN signal on $memory\mem[239]$602 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[239] [23:16]).
Adding EN signal on $memory\mem[239]$602 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[239] [31:24]).
Adding EN signal on $memory\mem[238]$600 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[238] [7:0]).
Adding EN signal on $memory\mem[238]$600 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[238] [15:8]).
Adding EN signal on $memory\mem[238]$600 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[238] [23:16]).
Adding EN signal on $memory\mem[238]$600 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[238] [31:24]).
Adding EN signal on $memory\mem[237]$598 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[237] [7:0]).
Adding EN signal on $memory\mem[237]$598 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[237] [15:8]).
Adding EN signal on $memory\mem[237]$598 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[237] [23:16]).
Adding EN signal on $memory\mem[237]$598 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[237] [31:24]).
Adding EN signal on $memory\mem[236]$596 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[236] [7:0]).
Adding EN signal on $memory\mem[236]$596 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[236] [15:8]).
Adding EN signal on $memory\mem[236]$596 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[236] [23:16]).
Adding EN signal on $memory\mem[236]$596 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[236] [31:24]).
Adding EN signal on $memory\mem[235]$594 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[235] [7:0]).
Adding EN signal on $memory\mem[235]$594 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[235] [15:8]).
Adding EN signal on $memory\mem[235]$594 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[235] [23:16]).
Adding EN signal on $memory\mem[235]$594 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[235] [31:24]).
Adding EN signal on $memory\mem[234]$592 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[234] [7:0]).
Adding EN signal on $memory\mem[234]$592 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[234] [15:8]).
Adding EN signal on $memory\mem[234]$592 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[234] [23:16]).
Adding EN signal on $memory\mem[234]$592 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[234] [31:24]).
Adding EN signal on $memory\mem[233]$590 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[233] [7:0]).
Adding EN signal on $memory\mem[233]$590 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[233] [15:8]).
Adding EN signal on $memory\mem[233]$590 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[233] [23:16]).
Adding EN signal on $memory\mem[233]$590 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[233] [31:24]).
Adding EN signal on $memory\mem[232]$588 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[232] [7:0]).
Adding EN signal on $memory\mem[232]$588 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[232] [15:8]).
Adding EN signal on $memory\mem[232]$588 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[232] [23:16]).
Adding EN signal on $memory\mem[232]$588 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[232] [31:24]).
Adding EN signal on $memory\mem[231]$586 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[231] [7:0]).
Adding EN signal on $memory\mem[231]$586 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[231] [15:8]).
Adding EN signal on $memory\mem[231]$586 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[231] [23:16]).
Adding EN signal on $memory\mem[231]$586 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[231] [31:24]).
Adding EN signal on $memory\mem[230]$584 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[230] [7:0]).
Adding EN signal on $memory\mem[230]$584 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[230] [15:8]).
Adding EN signal on $memory\mem[230]$584 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[230] [23:16]).
Adding EN signal on $memory\mem[230]$584 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[230] [31:24]).
Adding EN signal on $memory\mem[22]$168 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[22] [7:0]).
Adding EN signal on $memory\mem[22]$168 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[22] [15:8]).
Adding EN signal on $memory\mem[22]$168 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[22] [23:16]).
Adding EN signal on $memory\mem[22]$168 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[22] [31:24]).
Adding EN signal on $memory\mem[229]$582 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[229] [7:0]).
Adding EN signal on $memory\mem[229]$582 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[229] [15:8]).
Adding EN signal on $memory\mem[229]$582 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[229] [23:16]).
Adding EN signal on $memory\mem[229]$582 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[229] [31:24]).
Adding EN signal on $memory\mem[228]$580 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[228] [7:0]).
Adding EN signal on $memory\mem[228]$580 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[228] [15:8]).
Adding EN signal on $memory\mem[228]$580 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[228] [23:16]).
Adding EN signal on $memory\mem[228]$580 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[228] [31:24]).
Adding EN signal on $memory\mem[227]$578 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[227] [7:0]).
Adding EN signal on $memory\mem[227]$578 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[227] [15:8]).
Adding EN signal on $memory\mem[227]$578 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[227] [23:16]).
Adding EN signal on $memory\mem[227]$578 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[227] [31:24]).
Adding EN signal on $memory\mem[226]$576 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[226] [7:0]).
Adding EN signal on $memory\mem[226]$576 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[226] [15:8]).
Adding EN signal on $memory\mem[226]$576 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[226] [23:16]).
Adding EN signal on $memory\mem[226]$576 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[226] [31:24]).
Adding EN signal on $memory\mem[225]$574 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[225] [7:0]).
Adding EN signal on $memory\mem[225]$574 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[225] [15:8]).
Adding EN signal on $memory\mem[225]$574 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[225] [23:16]).
Adding EN signal on $memory\mem[225]$574 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[225] [31:24]).
Adding EN signal on $memory\mem[224]$572 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[224] [7:0]).
Adding EN signal on $memory\mem[224]$572 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[224] [15:8]).
Adding EN signal on $memory\mem[224]$572 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[224] [23:16]).
Adding EN signal on $memory\mem[224]$572 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[224] [31:24]).
Adding EN signal on $memory\mem[223]$570 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[223] [7:0]).
Adding EN signal on $memory\mem[223]$570 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[223] [15:8]).
Adding EN signal on $memory\mem[223]$570 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[223] [23:16]).
Adding EN signal on $memory\mem[223]$570 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[223] [31:24]).
Adding EN signal on $memory\mem[222]$568 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[222] [7:0]).
Adding EN signal on $memory\mem[222]$568 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[222] [15:8]).
Adding EN signal on $memory\mem[222]$568 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[222] [23:16]).
Adding EN signal on $memory\mem[222]$568 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[222] [31:24]).
Adding EN signal on $memory\mem[221]$566 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[221] [7:0]).
Adding EN signal on $memory\mem[221]$566 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[221] [15:8]).
Adding EN signal on $memory\mem[221]$566 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[221] [23:16]).
Adding EN signal on $memory\mem[221]$566 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[221] [31:24]).
Adding EN signal on $memory\mem[220]$564 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[220] [7:0]).
Adding EN signal on $memory\mem[220]$564 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[220] [15:8]).
Adding EN signal on $memory\mem[220]$564 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[220] [23:16]).
Adding EN signal on $memory\mem[220]$564 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[220] [31:24]).
Adding EN signal on $memory\mem[21]$166 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[21] [7:0]).
Adding EN signal on $memory\mem[21]$166 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[21] [15:8]).
Adding EN signal on $memory\mem[21]$166 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[21] [23:16]).
Adding EN signal on $memory\mem[21]$166 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[21] [31:24]).
Adding EN signal on $memory\mem[219]$562 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[219] [7:0]).
Adding EN signal on $memory\mem[219]$562 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[219] [15:8]).
Adding EN signal on $memory\mem[219]$562 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[219] [23:16]).
Adding EN signal on $memory\mem[219]$562 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[219] [31:24]).
Adding EN signal on $memory\mem[218]$560 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[218] [7:0]).
Adding EN signal on $memory\mem[218]$560 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[218] [15:8]).
Adding EN signal on $memory\mem[218]$560 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[218] [23:16]).
Adding EN signal on $memory\mem[218]$560 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[218] [31:24]).
Adding EN signal on $memory\mem[217]$558 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[217] [7:0]).
Adding EN signal on $memory\mem[217]$558 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[217] [15:8]).
Adding EN signal on $memory\mem[217]$558 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[217] [23:16]).
Adding EN signal on $memory\mem[217]$558 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[217] [31:24]).
Adding EN signal on $memory\mem[216]$556 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[216] [7:0]).
Adding EN signal on $memory\mem[216]$556 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[216] [15:8]).
Adding EN signal on $memory\mem[216]$556 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[216] [23:16]).
Adding EN signal on $memory\mem[216]$556 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[216] [31:24]).
Adding EN signal on $memory\mem[215]$554 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[215] [7:0]).
Adding EN signal on $memory\mem[215]$554 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[215] [15:8]).
Adding EN signal on $memory\mem[215]$554 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[215] [23:16]).
Adding EN signal on $memory\mem[215]$554 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[215] [31:24]).
Adding EN signal on $memory\mem[214]$552 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[214] [7:0]).
Adding EN signal on $memory\mem[214]$552 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[214] [15:8]).
Adding EN signal on $memory\mem[214]$552 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[214] [23:16]).
Adding EN signal on $memory\mem[214]$552 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[214] [31:24]).
Adding EN signal on $memory\mem[213]$550 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[213] [7:0]).
Adding EN signal on $memory\mem[213]$550 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[213] [15:8]).
Adding EN signal on $memory\mem[213]$550 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[213] [23:16]).
Adding EN signal on $memory\mem[213]$550 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[213] [31:24]).
Adding EN signal on $memory\mem[212]$548 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[212] [7:0]).
Adding EN signal on $memory\mem[212]$548 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[212] [15:8]).
Adding EN signal on $memory\mem[212]$548 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[212] [23:16]).
Adding EN signal on $memory\mem[212]$548 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[212] [31:24]).
Adding EN signal on $memory\mem[211]$546 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[211] [7:0]).
Adding EN signal on $memory\mem[211]$546 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[211] [15:8]).
Adding EN signal on $memory\mem[211]$546 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[211] [23:16]).
Adding EN signal on $memory\mem[211]$546 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[211] [31:24]).
Adding EN signal on $memory\mem[210]$544 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[210] [7:0]).
Adding EN signal on $memory\mem[210]$544 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[210] [15:8]).
Adding EN signal on $memory\mem[210]$544 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[210] [23:16]).
Adding EN signal on $memory\mem[210]$544 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[210] [31:24]).
Adding EN signal on $memory\mem[20]$164 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[20] [7:0]).
Adding EN signal on $memory\mem[20]$164 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[20] [15:8]).
Adding EN signal on $memory\mem[20]$164 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[20] [23:16]).
Adding EN signal on $memory\mem[20]$164 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[20] [31:24]).
Adding EN signal on $memory\mem[209]$542 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[209] [7:0]).
Adding EN signal on $memory\mem[209]$542 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[209] [15:8]).
Adding EN signal on $memory\mem[209]$542 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[209] [23:16]).
Adding EN signal on $memory\mem[209]$542 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[209] [31:24]).
Adding EN signal on $memory\mem[208]$540 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[208] [7:0]).
Adding EN signal on $memory\mem[208]$540 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[208] [15:8]).
Adding EN signal on $memory\mem[208]$540 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[208] [23:16]).
Adding EN signal on $memory\mem[208]$540 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[208] [31:24]).
Adding EN signal on $memory\mem[207]$538 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[207] [7:0]).
Adding EN signal on $memory\mem[207]$538 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[207] [15:8]).
Adding EN signal on $memory\mem[207]$538 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[207] [23:16]).
Adding EN signal on $memory\mem[207]$538 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[207] [31:24]).
Adding EN signal on $memory\mem[206]$536 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[206] [7:0]).
Adding EN signal on $memory\mem[206]$536 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[206] [15:8]).
Adding EN signal on $memory\mem[206]$536 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[206] [23:16]).
Adding EN signal on $memory\mem[206]$536 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[206] [31:24]).
Adding EN signal on $memory\mem[205]$534 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[205] [7:0]).
Adding EN signal on $memory\mem[205]$534 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[205] [15:8]).
Adding EN signal on $memory\mem[205]$534 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[205] [23:16]).
Adding EN signal on $memory\mem[205]$534 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[205] [31:24]).
Adding EN signal on $memory\mem[204]$532 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[204] [7:0]).
Adding EN signal on $memory\mem[204]$532 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[204] [15:8]).
Adding EN signal on $memory\mem[204]$532 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[204] [23:16]).
Adding EN signal on $memory\mem[204]$532 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[204] [31:24]).
Adding EN signal on $memory\mem[203]$530 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[203] [7:0]).
Adding EN signal on $memory\mem[203]$530 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[203] [15:8]).
Adding EN signal on $memory\mem[203]$530 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[203] [23:16]).
Adding EN signal on $memory\mem[203]$530 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[203] [31:24]).
Adding EN signal on $memory\mem[202]$528 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[202] [7:0]).
Adding EN signal on $memory\mem[202]$528 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[202] [15:8]).
Adding EN signal on $memory\mem[202]$528 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[202] [23:16]).
Adding EN signal on $memory\mem[202]$528 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[202] [31:24]).
Adding EN signal on $memory\mem[201]$526 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[201] [7:0]).
Adding EN signal on $memory\mem[201]$526 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[201] [15:8]).
Adding EN signal on $memory\mem[201]$526 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[201] [23:16]).
Adding EN signal on $memory\mem[201]$526 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[201] [31:24]).
Adding EN signal on $memory\mem[200]$524 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[200] [7:0]).
Adding EN signal on $memory\mem[200]$524 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[200] [15:8]).
Adding EN signal on $memory\mem[200]$524 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[200] [23:16]).
Adding EN signal on $memory\mem[200]$524 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[200] [31:24]).
Adding EN signal on $memory\mem[1]$126 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[1] [7:0]).
Adding EN signal on $memory\mem[1]$126 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[1] [15:8]).
Adding EN signal on $memory\mem[1]$126 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[1] [23:16]).
Adding EN signal on $memory\mem[1]$126 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[1] [31:24]).
Adding EN signal on $memory\mem[19]$162 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[19] [7:0]).
Adding EN signal on $memory\mem[19]$162 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[19] [15:8]).
Adding EN signal on $memory\mem[19]$162 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[19] [23:16]).
Adding EN signal on $memory\mem[19]$162 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[19] [31:24]).
Adding EN signal on $memory\mem[199]$522 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[199] [7:0]).
Adding EN signal on $memory\mem[199]$522 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[199] [15:8]).
Adding EN signal on $memory\mem[199]$522 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[199] [23:16]).
Adding EN signal on $memory\mem[199]$522 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[199] [31:24]).
Adding EN signal on $memory\mem[198]$520 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[198] [7:0]).
Adding EN signal on $memory\mem[198]$520 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[198] [15:8]).
Adding EN signal on $memory\mem[198]$520 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[198] [23:16]).
Adding EN signal on $memory\mem[198]$520 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[198] [31:24]).
Adding EN signal on $memory\mem[197]$518 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[197] [7:0]).
Adding EN signal on $memory\mem[197]$518 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[197] [15:8]).
Adding EN signal on $memory\mem[197]$518 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[197] [23:16]).
Adding EN signal on $memory\mem[197]$518 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[197] [31:24]).
Adding EN signal on $memory\mem[196]$516 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[196] [7:0]).
Adding EN signal on $memory\mem[196]$516 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[196] [15:8]).
Adding EN signal on $memory\mem[196]$516 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[196] [23:16]).
Adding EN signal on $memory\mem[196]$516 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[196] [31:24]).
Adding EN signal on $memory\mem[195]$514 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[195] [7:0]).
Adding EN signal on $memory\mem[195]$514 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[195] [15:8]).
Adding EN signal on $memory\mem[195]$514 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[195] [23:16]).
Adding EN signal on $memory\mem[195]$514 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[195] [31:24]).
Adding EN signal on $memory\mem[194]$512 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[194] [7:0]).
Adding EN signal on $memory\mem[194]$512 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[194] [15:8]).
Adding EN signal on $memory\mem[194]$512 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[194] [23:16]).
Adding EN signal on $memory\mem[194]$512 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[194] [31:24]).
Adding EN signal on $memory\mem[193]$510 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[193] [7:0]).
Adding EN signal on $memory\mem[193]$510 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[193] [15:8]).
Adding EN signal on $memory\mem[193]$510 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[193] [23:16]).
Adding EN signal on $memory\mem[193]$510 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[193] [31:24]).
Adding EN signal on $memory\mem[192]$508 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[192] [7:0]).
Adding EN signal on $memory\mem[192]$508 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[192] [15:8]).
Adding EN signal on $memory\mem[192]$508 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[192] [23:16]).
Adding EN signal on $memory\mem[192]$508 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[192] [31:24]).
Adding EN signal on $memory\mem[191]$506 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[191] [7:0]).
Adding EN signal on $memory\mem[191]$506 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[191] [15:8]).
Adding EN signal on $memory\mem[191]$506 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[191] [23:16]).
Adding EN signal on $memory\mem[191]$506 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[191] [31:24]).
Adding EN signal on $memory\mem[190]$504 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[190] [7:0]).
Adding EN signal on $memory\mem[190]$504 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[190] [15:8]).
Adding EN signal on $memory\mem[190]$504 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[190] [23:16]).
Adding EN signal on $memory\mem[190]$504 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[190] [31:24]).
Adding EN signal on $memory\mem[18]$160 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[18] [7:0]).
Adding EN signal on $memory\mem[18]$160 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[18] [15:8]).
Adding EN signal on $memory\mem[18]$160 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[18] [23:16]).
Adding EN signal on $memory\mem[18]$160 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[18] [31:24]).
Adding EN signal on $memory\mem[189]$502 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[189] [7:0]).
Adding EN signal on $memory\mem[189]$502 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[189] [15:8]).
Adding EN signal on $memory\mem[189]$502 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[189] [23:16]).
Adding EN signal on $memory\mem[189]$502 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[189] [31:24]).
Adding EN signal on $memory\mem[188]$500 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[188] [7:0]).
Adding EN signal on $memory\mem[188]$500 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[188] [15:8]).
Adding EN signal on $memory\mem[188]$500 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[188] [23:16]).
Adding EN signal on $memory\mem[188]$500 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[188] [31:24]).
Adding EN signal on $memory\mem[187]$498 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[187] [7:0]).
Adding EN signal on $memory\mem[187]$498 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[187] [15:8]).
Adding EN signal on $memory\mem[187]$498 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[187] [23:16]).
Adding EN signal on $memory\mem[187]$498 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[187] [31:24]).
Adding EN signal on $memory\mem[186]$496 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[186] [7:0]).
Adding EN signal on $memory\mem[186]$496 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[186] [15:8]).
Adding EN signal on $memory\mem[186]$496 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[186] [23:16]).
Adding EN signal on $memory\mem[186]$496 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[186] [31:24]).
Adding EN signal on $memory\mem[185]$494 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[185] [7:0]).
Adding EN signal on $memory\mem[185]$494 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[185] [15:8]).
Adding EN signal on $memory\mem[185]$494 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[185] [23:16]).
Adding EN signal on $memory\mem[185]$494 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[185] [31:24]).
Adding EN signal on $memory\mem[184]$492 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[184] [7:0]).
Adding EN signal on $memory\mem[184]$492 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[184] [15:8]).
Adding EN signal on $memory\mem[184]$492 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[184] [23:16]).
Adding EN signal on $memory\mem[184]$492 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[184] [31:24]).
Adding EN signal on $memory\mem[183]$490 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[183] [7:0]).
Adding EN signal on $memory\mem[183]$490 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[183] [15:8]).
Adding EN signal on $memory\mem[183]$490 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[183] [23:16]).
Adding EN signal on $memory\mem[183]$490 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[183] [31:24]).
Adding EN signal on $memory\mem[182]$488 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[182] [7:0]).
Adding EN signal on $memory\mem[182]$488 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[182] [15:8]).
Adding EN signal on $memory\mem[182]$488 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[182] [23:16]).
Adding EN signal on $memory\mem[182]$488 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[182] [31:24]).
Adding EN signal on $memory\mem[181]$486 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[181] [7:0]).
Adding EN signal on $memory\mem[181]$486 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[181] [15:8]).
Adding EN signal on $memory\mem[181]$486 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[181] [23:16]).
Adding EN signal on $memory\mem[181]$486 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[181] [31:24]).
Adding EN signal on $memory\mem[180]$484 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[180] [7:0]).
Adding EN signal on $memory\mem[180]$484 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[180] [15:8]).
Adding EN signal on $memory\mem[180]$484 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[180] [23:16]).
Adding EN signal on $memory\mem[180]$484 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[180] [31:24]).
Adding EN signal on $memory\mem[17]$158 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[17] [7:0]).
Adding EN signal on $memory\mem[17]$158 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[17] [15:8]).
Adding EN signal on $memory\mem[17]$158 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[17] [23:16]).
Adding EN signal on $memory\mem[17]$158 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[17] [31:24]).
Adding EN signal on $memory\mem[179]$482 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[179] [7:0]).
Adding EN signal on $memory\mem[179]$482 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[179] [15:8]).
Adding EN signal on $memory\mem[179]$482 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[179] [23:16]).
Adding EN signal on $memory\mem[179]$482 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[179] [31:24]).
Adding EN signal on $memory\mem[178]$480 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[178] [7:0]).
Adding EN signal on $memory\mem[178]$480 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[178] [15:8]).
Adding EN signal on $memory\mem[178]$480 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[178] [23:16]).
Adding EN signal on $memory\mem[178]$480 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[178] [31:24]).
Adding EN signal on $memory\mem[177]$478 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[177] [7:0]).
Adding EN signal on $memory\mem[177]$478 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[177] [15:8]).
Adding EN signal on $memory\mem[177]$478 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[177] [23:16]).
Adding EN signal on $memory\mem[177]$478 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[177] [31:24]).
Adding EN signal on $memory\mem[176]$476 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[176] [7:0]).
Adding EN signal on $memory\mem[176]$476 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[176] [15:8]).
Adding EN signal on $memory\mem[176]$476 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[176] [23:16]).
Adding EN signal on $memory\mem[176]$476 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[176] [31:24]).
Adding EN signal on $memory\mem[175]$474 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[175] [7:0]).
Adding EN signal on $memory\mem[175]$474 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[175] [15:8]).
Adding EN signal on $memory\mem[175]$474 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[175] [23:16]).
Adding EN signal on $memory\mem[175]$474 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[175] [31:24]).
Adding EN signal on $memory\mem[174]$472 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[174] [7:0]).
Adding EN signal on $memory\mem[174]$472 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[174] [15:8]).
Adding EN signal on $memory\mem[174]$472 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[174] [23:16]).
Adding EN signal on $memory\mem[174]$472 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[174] [31:24]).
Adding EN signal on $memory\mem[173]$470 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[173] [7:0]).
Adding EN signal on $memory\mem[173]$470 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[173] [15:8]).
Adding EN signal on $memory\mem[173]$470 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[173] [23:16]).
Adding EN signal on $memory\mem[173]$470 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[173] [31:24]).
Adding EN signal on $memory\mem[172]$468 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[172] [7:0]).
Adding EN signal on $memory\mem[172]$468 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[172] [15:8]).
Adding EN signal on $memory\mem[172]$468 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[172] [23:16]).
Adding EN signal on $memory\mem[172]$468 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[172] [31:24]).
Adding EN signal on $memory\mem[171]$466 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[171] [7:0]).
Adding EN signal on $memory\mem[171]$466 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[171] [15:8]).
Adding EN signal on $memory\mem[171]$466 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[171] [23:16]).
Adding EN signal on $memory\mem[171]$466 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[171] [31:24]).
Adding EN signal on $memory\mem[170]$464 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[170] [7:0]).
Adding EN signal on $memory\mem[170]$464 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[170] [15:8]).
Adding EN signal on $memory\mem[170]$464 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[170] [23:16]).
Adding EN signal on $memory\mem[170]$464 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[170] [31:24]).
Adding EN signal on $memory\mem[16]$156 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[16] [7:0]).
Adding EN signal on $memory\mem[16]$156 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[16] [15:8]).
Adding EN signal on $memory\mem[16]$156 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[16] [23:16]).
Adding EN signal on $memory\mem[16]$156 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[16] [31:24]).
Adding EN signal on $memory\mem[169]$462 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[169] [7:0]).
Adding EN signal on $memory\mem[169]$462 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[169] [15:8]).
Adding EN signal on $memory\mem[169]$462 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[169] [23:16]).
Adding EN signal on $memory\mem[169]$462 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[169] [31:24]).
Adding EN signal on $memory\mem[168]$460 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[168] [7:0]).
Adding EN signal on $memory\mem[168]$460 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[168] [15:8]).
Adding EN signal on $memory\mem[168]$460 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[168] [23:16]).
Adding EN signal on $memory\mem[168]$460 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[168] [31:24]).
Adding EN signal on $memory\mem[167]$458 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[167] [7:0]).
Adding EN signal on $memory\mem[167]$458 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[167] [15:8]).
Adding EN signal on $memory\mem[167]$458 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[167] [23:16]).
Adding EN signal on $memory\mem[167]$458 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[167] [31:24]).
Adding EN signal on $memory\mem[166]$456 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[166] [7:0]).
Adding EN signal on $memory\mem[166]$456 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[166] [15:8]).
Adding EN signal on $memory\mem[166]$456 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[166] [23:16]).
Adding EN signal on $memory\mem[166]$456 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[166] [31:24]).
Adding EN signal on $memory\mem[165]$454 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[165] [7:0]).
Adding EN signal on $memory\mem[165]$454 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[165] [15:8]).
Adding EN signal on $memory\mem[165]$454 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[165] [23:16]).
Adding EN signal on $memory\mem[165]$454 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[165] [31:24]).
Adding EN signal on $memory\mem[164]$452 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[164] [7:0]).
Adding EN signal on $memory\mem[164]$452 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[164] [15:8]).
Adding EN signal on $memory\mem[164]$452 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[164] [23:16]).
Adding EN signal on $memory\mem[164]$452 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[164] [31:24]).
Adding EN signal on $memory\mem[163]$450 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[163] [7:0]).
Adding EN signal on $memory\mem[163]$450 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[163] [15:8]).
Adding EN signal on $memory\mem[163]$450 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[163] [23:16]).
Adding EN signal on $memory\mem[163]$450 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[163] [31:24]).
Adding EN signal on $memory\mem[162]$448 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[162] [7:0]).
Adding EN signal on $memory\mem[162]$448 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[162] [15:8]).
Adding EN signal on $memory\mem[162]$448 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[162] [23:16]).
Adding EN signal on $memory\mem[162]$448 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[162] [31:24]).
Adding EN signal on $memory\mem[161]$446 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[161] [7:0]).
Adding EN signal on $memory\mem[161]$446 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[161] [15:8]).
Adding EN signal on $memory\mem[161]$446 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[161] [23:16]).
Adding EN signal on $memory\mem[161]$446 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[161] [31:24]).
Adding EN signal on $memory\mem[160]$444 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[160] [7:0]).
Adding EN signal on $memory\mem[160]$444 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[160] [15:8]).
Adding EN signal on $memory\mem[160]$444 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[160] [23:16]).
Adding EN signal on $memory\mem[160]$444 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[160] [31:24]).
Adding EN signal on $memory\mem[15]$154 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[15] [7:0]).
Adding EN signal on $memory\mem[15]$154 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[15] [15:8]).
Adding EN signal on $memory\mem[15]$154 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[15] [23:16]).
Adding EN signal on $memory\mem[15]$154 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[15] [31:24]).
Adding EN signal on $memory\mem[159]$442 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[159] [7:0]).
Adding EN signal on $memory\mem[159]$442 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[159] [15:8]).
Adding EN signal on $memory\mem[159]$442 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[159] [23:16]).
Adding EN signal on $memory\mem[159]$442 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[159] [31:24]).
Adding EN signal on $memory\mem[158]$440 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[158] [7:0]).
Adding EN signal on $memory\mem[158]$440 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[158] [15:8]).
Adding EN signal on $memory\mem[158]$440 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[158] [23:16]).
Adding EN signal on $memory\mem[158]$440 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[158] [31:24]).
Adding EN signal on $memory\mem[157]$438 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[157] [7:0]).
Adding EN signal on $memory\mem[157]$438 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[157] [15:8]).
Adding EN signal on $memory\mem[157]$438 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[157] [23:16]).
Adding EN signal on $memory\mem[157]$438 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[157] [31:24]).
Adding EN signal on $memory\mem[156]$436 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[156] [7:0]).
Adding EN signal on $memory\mem[156]$436 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[156] [15:8]).
Adding EN signal on $memory\mem[156]$436 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[156] [23:16]).
Adding EN signal on $memory\mem[156]$436 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[156] [31:24]).
Adding EN signal on $memory\mem[155]$434 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[155] [7:0]).
Adding EN signal on $memory\mem[155]$434 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[155] [15:8]).
Adding EN signal on $memory\mem[155]$434 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[155] [23:16]).
Adding EN signal on $memory\mem[155]$434 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[155] [31:24]).
Adding EN signal on $memory\mem[154]$432 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[154] [7:0]).
Adding EN signal on $memory\mem[154]$432 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[154] [15:8]).
Adding EN signal on $memory\mem[154]$432 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[154] [23:16]).
Adding EN signal on $memory\mem[154]$432 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[154] [31:24]).
Adding EN signal on $memory\mem[153]$430 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[153] [7:0]).
Adding EN signal on $memory\mem[153]$430 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[153] [15:8]).
Adding EN signal on $memory\mem[153]$430 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[153] [23:16]).
Adding EN signal on $memory\mem[153]$430 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[153] [31:24]).
Adding EN signal on $memory\mem[152]$428 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[152] [7:0]).
Adding EN signal on $memory\mem[152]$428 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[152] [15:8]).
Adding EN signal on $memory\mem[152]$428 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[152] [23:16]).
Adding EN signal on $memory\mem[152]$428 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[152] [31:24]).
Adding EN signal on $memory\mem[151]$426 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[151] [7:0]).
Adding EN signal on $memory\mem[151]$426 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[151] [15:8]).
Adding EN signal on $memory\mem[151]$426 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[151] [23:16]).
Adding EN signal on $memory\mem[151]$426 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[151] [31:24]).
Adding EN signal on $memory\mem[150]$424 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[150] [7:0]).
Adding EN signal on $memory\mem[150]$424 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[150] [15:8]).
Adding EN signal on $memory\mem[150]$424 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[150] [23:16]).
Adding EN signal on $memory\mem[150]$424 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[150] [31:24]).
Adding EN signal on $memory\mem[14]$152 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[14] [7:0]).
Adding EN signal on $memory\mem[14]$152 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[14] [15:8]).
Adding EN signal on $memory\mem[14]$152 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[14] [23:16]).
Adding EN signal on $memory\mem[14]$152 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[14] [31:24]).
Adding EN signal on $memory\mem[149]$422 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[149] [7:0]).
Adding EN signal on $memory\mem[149]$422 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[149] [15:8]).
Adding EN signal on $memory\mem[149]$422 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[149] [23:16]).
Adding EN signal on $memory\mem[149]$422 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[149] [31:24]).
Adding EN signal on $memory\mem[148]$420 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[148] [7:0]).
Adding EN signal on $memory\mem[148]$420 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[148] [15:8]).
Adding EN signal on $memory\mem[148]$420 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[148] [23:16]).
Adding EN signal on $memory\mem[148]$420 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[148] [31:24]).
Adding EN signal on $memory\mem[147]$418 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[147] [7:0]).
Adding EN signal on $memory\mem[147]$418 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[147] [15:8]).
Adding EN signal on $memory\mem[147]$418 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[147] [23:16]).
Adding EN signal on $memory\mem[147]$418 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[147] [31:24]).
Adding EN signal on $memory\mem[146]$416 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[146] [7:0]).
Adding EN signal on $memory\mem[146]$416 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[146] [15:8]).
Adding EN signal on $memory\mem[146]$416 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[146] [23:16]).
Adding EN signal on $memory\mem[146]$416 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[146] [31:24]).
Adding EN signal on $memory\mem[145]$414 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[145] [7:0]).
Adding EN signal on $memory\mem[145]$414 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[145] [15:8]).
Adding EN signal on $memory\mem[145]$414 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[145] [23:16]).
Adding EN signal on $memory\mem[145]$414 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[145] [31:24]).
Adding EN signal on $memory\mem[144]$412 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[144] [7:0]).
Adding EN signal on $memory\mem[144]$412 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[144] [15:8]).
Adding EN signal on $memory\mem[144]$412 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[144] [23:16]).
Adding EN signal on $memory\mem[144]$412 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[144] [31:24]).
Adding EN signal on $memory\mem[143]$410 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[143] [7:0]).
Adding EN signal on $memory\mem[143]$410 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[143] [15:8]).
Adding EN signal on $memory\mem[143]$410 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[143] [23:16]).
Adding EN signal on $memory\mem[143]$410 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[143] [31:24]).
Adding EN signal on $memory\mem[142]$408 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[142] [7:0]).
Adding EN signal on $memory\mem[142]$408 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[142] [15:8]).
Adding EN signal on $memory\mem[142]$408 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[142] [23:16]).
Adding EN signal on $memory\mem[142]$408 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[142] [31:24]).
Adding EN signal on $memory\mem[141]$406 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[141] [7:0]).
Adding EN signal on $memory\mem[141]$406 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[141] [15:8]).
Adding EN signal on $memory\mem[141]$406 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[141] [23:16]).
Adding EN signal on $memory\mem[141]$406 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[141] [31:24]).
Adding EN signal on $memory\mem[140]$404 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[140] [7:0]).
Adding EN signal on $memory\mem[140]$404 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[140] [15:8]).
Adding EN signal on $memory\mem[140]$404 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[140] [23:16]).
Adding EN signal on $memory\mem[140]$404 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[140] [31:24]).
Adding EN signal on $memory\mem[13]$150 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[13] [7:0]).
Adding EN signal on $memory\mem[13]$150 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[13] [15:8]).
Adding EN signal on $memory\mem[13]$150 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[13] [23:16]).
Adding EN signal on $memory\mem[13]$150 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[13] [31:24]).
Adding EN signal on $memory\mem[139]$402 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[139] [7:0]).
Adding EN signal on $memory\mem[139]$402 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[139] [15:8]).
Adding EN signal on $memory\mem[139]$402 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[139] [23:16]).
Adding EN signal on $memory\mem[139]$402 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[139] [31:24]).
Adding EN signal on $memory\mem[138]$400 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[138] [7:0]).
Adding EN signal on $memory\mem[138]$400 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[138] [15:8]).
Adding EN signal on $memory\mem[138]$400 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[138] [23:16]).
Adding EN signal on $memory\mem[138]$400 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[138] [31:24]).
Adding EN signal on $memory\mem[137]$398 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[137] [7:0]).
Adding EN signal on $memory\mem[137]$398 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[137] [15:8]).
Adding EN signal on $memory\mem[137]$398 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[137] [23:16]).
Adding EN signal on $memory\mem[137]$398 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[137] [31:24]).
Adding EN signal on $memory\mem[136]$396 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[136] [7:0]).
Adding EN signal on $memory\mem[136]$396 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[136] [15:8]).
Adding EN signal on $memory\mem[136]$396 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[136] [23:16]).
Adding EN signal on $memory\mem[136]$396 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[136] [31:24]).
Adding EN signal on $memory\mem[135]$394 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[135] [7:0]).
Adding EN signal on $memory\mem[135]$394 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[135] [15:8]).
Adding EN signal on $memory\mem[135]$394 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[135] [23:16]).
Adding EN signal on $memory\mem[135]$394 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[135] [31:24]).
Adding EN signal on $memory\mem[134]$392 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[134] [7:0]).
Adding EN signal on $memory\mem[134]$392 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[134] [15:8]).
Adding EN signal on $memory\mem[134]$392 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[134] [23:16]).
Adding EN signal on $memory\mem[134]$392 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[134] [31:24]).
Adding EN signal on $memory\mem[133]$390 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[133] [7:0]).
Adding EN signal on $memory\mem[133]$390 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[133] [15:8]).
Adding EN signal on $memory\mem[133]$390 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[133] [23:16]).
Adding EN signal on $memory\mem[133]$390 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[133] [31:24]).
Adding EN signal on $memory\mem[132]$388 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[132] [7:0]).
Adding EN signal on $memory\mem[132]$388 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[132] [15:8]).
Adding EN signal on $memory\mem[132]$388 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[132] [23:16]).
Adding EN signal on $memory\mem[132]$388 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[132] [31:24]).
Adding EN signal on $memory\mem[131]$386 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[131] [7:0]).
Adding EN signal on $memory\mem[131]$386 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[131] [15:8]).
Adding EN signal on $memory\mem[131]$386 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[131] [23:16]).
Adding EN signal on $memory\mem[131]$386 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[131] [31:24]).
Adding EN signal on $memory\mem[130]$384 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[130] [7:0]).
Adding EN signal on $memory\mem[130]$384 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[130] [15:8]).
Adding EN signal on $memory\mem[130]$384 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[130] [23:16]).
Adding EN signal on $memory\mem[130]$384 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[130] [31:24]).
Adding EN signal on $memory\mem[12]$148 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[12] [7:0]).
Adding EN signal on $memory\mem[12]$148 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[12] [15:8]).
Adding EN signal on $memory\mem[12]$148 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[12] [23:16]).
Adding EN signal on $memory\mem[12]$148 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[12] [31:24]).
Adding EN signal on $memory\mem[129]$382 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[129] [7:0]).
Adding EN signal on $memory\mem[129]$382 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[129] [15:8]).
Adding EN signal on $memory\mem[129]$382 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[129] [23:16]).
Adding EN signal on $memory\mem[129]$382 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[129] [31:24]).
Adding EN signal on $memory\mem[128]$380 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[128] [7:0]).
Adding EN signal on $memory\mem[128]$380 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[128] [15:8]).
Adding EN signal on $memory\mem[128]$380 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[128] [23:16]).
Adding EN signal on $memory\mem[128]$380 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[128] [31:24]).
Adding EN signal on $memory\mem[127]$378 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[127] [7:0]).
Adding EN signal on $memory\mem[127]$378 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[127] [15:8]).
Adding EN signal on $memory\mem[127]$378 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[127] [23:16]).
Adding EN signal on $memory\mem[127]$378 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[127] [31:24]).
Adding EN signal on $memory\mem[126]$376 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[126] [7:0]).
Adding EN signal on $memory\mem[126]$376 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[126] [15:8]).
Adding EN signal on $memory\mem[126]$376 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[126] [23:16]).
Adding EN signal on $memory\mem[126]$376 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[126] [31:24]).
Adding EN signal on $memory\mem[125]$374 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[125] [7:0]).
Adding EN signal on $memory\mem[125]$374 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[125] [15:8]).
Adding EN signal on $memory\mem[125]$374 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[125] [23:16]).
Adding EN signal on $memory\mem[125]$374 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[125] [31:24]).
Adding EN signal on $memory\mem[124]$372 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[124] [7:0]).
Adding EN signal on $memory\mem[124]$372 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[124] [15:8]).
Adding EN signal on $memory\mem[124]$372 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[124] [23:16]).
Adding EN signal on $memory\mem[124]$372 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[124] [31:24]).
Adding EN signal on $memory\mem[123]$370 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[123] [7:0]).
Adding EN signal on $memory\mem[123]$370 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[123] [15:8]).
Adding EN signal on $memory\mem[123]$370 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[123] [23:16]).
Adding EN signal on $memory\mem[123]$370 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[123] [31:24]).
Adding EN signal on $memory\mem[122]$368 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[122] [7:0]).
Adding EN signal on $memory\mem[122]$368 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[122] [15:8]).
Adding EN signal on $memory\mem[122]$368 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[122] [23:16]).
Adding EN signal on $memory\mem[122]$368 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[122] [31:24]).
Adding EN signal on $memory\mem[121]$366 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[121] [7:0]).
Adding EN signal on $memory\mem[121]$366 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[121] [15:8]).
Adding EN signal on $memory\mem[121]$366 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[121] [23:16]).
Adding EN signal on $memory\mem[121]$366 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[121] [31:24]).
Adding EN signal on $memory\mem[120]$364 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[120] [7:0]).
Adding EN signal on $memory\mem[120]$364 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[120] [15:8]).
Adding EN signal on $memory\mem[120]$364 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[120] [23:16]).
Adding EN signal on $memory\mem[120]$364 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[120] [31:24]).
Adding EN signal on $memory\mem[11]$146 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[11] [7:0]).
Adding EN signal on $memory\mem[11]$146 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[11] [15:8]).
Adding EN signal on $memory\mem[11]$146 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[11] [23:16]).
Adding EN signal on $memory\mem[11]$146 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[11] [31:24]).
Adding EN signal on $memory\mem[119]$362 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[119] [7:0]).
Adding EN signal on $memory\mem[119]$362 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[119] [15:8]).
Adding EN signal on $memory\mem[119]$362 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[119] [23:16]).
Adding EN signal on $memory\mem[119]$362 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[119] [31:24]).
Adding EN signal on $memory\mem[118]$360 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[118] [7:0]).
Adding EN signal on $memory\mem[118]$360 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[118] [15:8]).
Adding EN signal on $memory\mem[118]$360 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[118] [23:16]).
Adding EN signal on $memory\mem[118]$360 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[118] [31:24]).
Adding EN signal on $memory\mem[117]$358 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[117] [7:0]).
Adding EN signal on $memory\mem[117]$358 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[117] [15:8]).
Adding EN signal on $memory\mem[117]$358 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[117] [23:16]).
Adding EN signal on $memory\mem[117]$358 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[117] [31:24]).
Adding EN signal on $memory\mem[116]$356 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[116] [7:0]).
Adding EN signal on $memory\mem[116]$356 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[116] [15:8]).
Adding EN signal on $memory\mem[116]$356 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[116] [23:16]).
Adding EN signal on $memory\mem[116]$356 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[116] [31:24]).
Adding EN signal on $memory\mem[115]$354 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[115] [7:0]).
Adding EN signal on $memory\mem[115]$354 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[115] [15:8]).
Adding EN signal on $memory\mem[115]$354 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[115] [23:16]).
Adding EN signal on $memory\mem[115]$354 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[115] [31:24]).
Adding EN signal on $memory\mem[114]$352 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[114] [7:0]).
Adding EN signal on $memory\mem[114]$352 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[114] [15:8]).
Adding EN signal on $memory\mem[114]$352 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[114] [23:16]).
Adding EN signal on $memory\mem[114]$352 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[114] [31:24]).
Adding EN signal on $memory\mem[113]$350 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[113] [7:0]).
Adding EN signal on $memory\mem[113]$350 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[113] [15:8]).
Adding EN signal on $memory\mem[113]$350 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[113] [23:16]).
Adding EN signal on $memory\mem[113]$350 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[113] [31:24]).
Adding EN signal on $memory\mem[112]$348 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[112] [7:0]).
Adding EN signal on $memory\mem[112]$348 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[112] [15:8]).
Adding EN signal on $memory\mem[112]$348 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[112] [23:16]).
Adding EN signal on $memory\mem[112]$348 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[112] [31:24]).
Adding EN signal on $memory\mem[111]$346 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[111] [7:0]).
Adding EN signal on $memory\mem[111]$346 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[111] [15:8]).
Adding EN signal on $memory\mem[111]$346 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[111] [23:16]).
Adding EN signal on $memory\mem[111]$346 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[111] [31:24]).
Adding EN signal on $memory\mem[110]$344 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[110] [7:0]).
Adding EN signal on $memory\mem[110]$344 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[110] [15:8]).
Adding EN signal on $memory\mem[110]$344 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[110] [23:16]).
Adding EN signal on $memory\mem[110]$344 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[110] [31:24]).
Adding EN signal on $memory\mem[10]$144 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[10] [7:0]).
Adding EN signal on $memory\mem[10]$144 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[10] [15:8]).
Adding EN signal on $memory\mem[10]$144 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[10] [23:16]).
Adding EN signal on $memory\mem[10]$144 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[10] [31:24]).
Adding EN signal on $memory\mem[109]$342 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[109] [7:0]).
Adding EN signal on $memory\mem[109]$342 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[109] [15:8]).
Adding EN signal on $memory\mem[109]$342 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[109] [23:16]).
Adding EN signal on $memory\mem[109]$342 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[109] [31:24]).
Adding EN signal on $memory\mem[108]$340 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[108] [7:0]).
Adding EN signal on $memory\mem[108]$340 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[108] [15:8]).
Adding EN signal on $memory\mem[108]$340 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[108] [23:16]).
Adding EN signal on $memory\mem[108]$340 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[108] [31:24]).
Adding EN signal on $memory\mem[107]$338 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[107] [7:0]).
Adding EN signal on $memory\mem[107]$338 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[107] [15:8]).
Adding EN signal on $memory\mem[107]$338 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[107] [23:16]).
Adding EN signal on $memory\mem[107]$338 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[107] [31:24]).
Adding EN signal on $memory\mem[106]$336 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[106] [7:0]).
Adding EN signal on $memory\mem[106]$336 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[106] [15:8]).
Adding EN signal on $memory\mem[106]$336 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[106] [23:16]).
Adding EN signal on $memory\mem[106]$336 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[106] [31:24]).
Adding EN signal on $memory\mem[105]$334 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[105] [7:0]).
Adding EN signal on $memory\mem[105]$334 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[105] [15:8]).
Adding EN signal on $memory\mem[105]$334 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[105] [23:16]).
Adding EN signal on $memory\mem[105]$334 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[105] [31:24]).
Adding EN signal on $memory\mem[104]$332 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[104] [7:0]).
Adding EN signal on $memory\mem[104]$332 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[104] [15:8]).
Adding EN signal on $memory\mem[104]$332 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[104] [23:16]).
Adding EN signal on $memory\mem[104]$332 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[104] [31:24]).
Adding EN signal on $memory\mem[103]$330 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[103] [7:0]).
Adding EN signal on $memory\mem[103]$330 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[103] [15:8]).
Adding EN signal on $memory\mem[103]$330 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[103] [23:16]).
Adding EN signal on $memory\mem[103]$330 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[103] [31:24]).
Adding EN signal on $memory\mem[102]$328 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[102] [7:0]).
Adding EN signal on $memory\mem[102]$328 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[102] [15:8]).
Adding EN signal on $memory\mem[102]$328 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[102] [23:16]).
Adding EN signal on $memory\mem[102]$328 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[102] [31:24]).
Adding EN signal on $memory\mem[101]$326 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[101] [7:0]).
Adding EN signal on $memory\mem[101]$326 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[101] [15:8]).
Adding EN signal on $memory\mem[101]$326 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[101] [23:16]).
Adding EN signal on $memory\mem[101]$326 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[101] [31:24]).
Adding EN signal on $memory\mem[100]$324 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[100] [7:0]).
Adding EN signal on $memory\mem[100]$324 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[100] [15:8]).
Adding EN signal on $memory\mem[100]$324 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[100] [23:16]).
Adding EN signal on $memory\mem[100]$324 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[100] [31:24]).
Adding EN signal on $memory\mem[0]$124 ($dff) from module alphasoc_mem (D = \wdata [7:0], Q = \mem[0] [7:0]).
Adding EN signal on $memory\mem[0]$124 ($dff) from module alphasoc_mem (D = \wdata [15:8], Q = \mem[0] [15:8]).
Adding EN signal on $memory\mem[0]$124 ($dff) from module alphasoc_mem (D = \wdata [23:16], Q = \mem[0] [23:16]).
Adding EN signal on $memory\mem[0]$124 ($dff) from module alphasoc_mem (D = \wdata [31:24], Q = \mem[0] [31:24]).

36.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..
Removed 1024 unused cells and 1024 unused wires.
<suppressed ~1025 debug messages>

36.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.

36.18. Rerunning OPT passes. (Maybe there is more to do..)

36.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphasoc_mem..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

36.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphasoc_mem.
Performed a total of 0 changes.

36.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

36.22. Executing OPT_SHARE pass.

36.23. Executing OPT_DFF pass (perform DFF optimizations).

36.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..

36.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.

36.26. Finished OPT passes. (There is nothing left to do.)

37. Executing TECHMAP pass (map to technology primitives).

37.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

37.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
No more expansions possible.
<suppressed ~2689 debug messages>

38. Executing OPT pass (performing simple optimizations).

38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.

38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

38.3. Executing OPT_DFF pass (perform DFF optimizations).

38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..

38.5. Finished fast OPT passes.

39. Executing ABC pass (technology mapping using ABC).

39.1. Extracting gate netlist of module `\alphasoc_mem' to `<abc-temp-dir>/input.blif'..
Extracted 9496 gates and 17700 wires to a netlist network with 8204 inputs and 1056 outputs.

39.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

39.1.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        7
ABC RESULTS:               MUX cells:     8160
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:                OR cells:      292
ABC RESULTS:            ANDNOT cells:     1024
ABC RESULTS:        internal signals:     8440
ABC RESULTS:           input signals:     8204
ABC RESULTS:          output signals:     1056
Removing temp directory.

40. Executing OPT pass (performing simple optimizations).

40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.
<suppressed ~4064 debug messages>

40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

40.3. Executing OPT_DFF pass (perform DFF optimizations).

40.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..
Removed 7 unused cells and 9833 unused wires.
<suppressed ~8 debug messages>

40.5. Finished fast OPT passes.

41. Executing HIERARCHY pass (managing design hierarchy).

41.1. Analyzing design hierarchy..
Top module:  \alphasoc_mem

41.2. Analyzing design hierarchy..
Top module:  \alphasoc_mem
Removed 0 unused modules.

42. Printing statistics.

=== alphasoc_mem ===

   Number of wires:               9718
   Number of wire bits:          17771
   Number of public wires:         261
   Number of public wire bits:    8283
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              17712
     $_ANDNOT_                    1024
     $_DFFE_PP_                   8192
     $_DFF_P_                       32
     $_MUX_                       8160
     $_NAND_                         4
     $_ORNOT_                        8
     $_OR_                         292

43. Executing CHECK pass (checking for obvious problems).
Checking module alphasoc_mem...
Found and reported 0 problems.

44. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/alphasoc_mem/runs/RUN_2023.12.03_14.26.22/tmp/synthesis/post_techmap.dot'.
Dumping module alphasoc_mem to page 1.

45. Executing SHARE pass (SAT-based resource sharing).

46. Executing OPT pass (performing simple optimizations).

46.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.

46.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

46.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphasoc_mem..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

46.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphasoc_mem.
Performed a total of 0 changes.

46.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphasoc_mem'.
Removed a total of 0 cells.

46.6. Executing OPT_DFF pass (perform DFF optimizations).

46.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..

46.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphasoc_mem.

46.9. Finished OPT passes. (There is nothing left to do.)

47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..

48. Printing statistics.

=== alphasoc_mem ===

   Number of wires:               9718
   Number of wire bits:          17771
   Number of public wires:         261
   Number of public wire bits:    8283
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              17712
     $_ANDNOT_                    1024
     $_DFFE_PP_                   8192
     $_DFF_P_                       32
     $_MUX_                       8160
     $_NAND_                         4
     $_ORNOT_                        8
     $_OR_                         292

mapping tbuf

49. Executing TECHMAP pass (map to technology primitives).

49.1. Executing Verilog-2005 frontend: /home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

49.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

50. Executing SIMPLEMAP pass (map simple cells to gate primitives).

51. Executing TECHMAP pass (map to technology primitives).

51.1. Executing Verilog-2005 frontend: /home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

51.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

52. Executing SIMPLEMAP pass (map simple cells to gate primitives).

53. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

53.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\alphasoc_mem':
  mapped 8224 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

54. Printing statistics.

=== alphasoc_mem ===

   Number of wires:              17910
   Number of wire bits:          25963
   Number of public wires:         261
   Number of public wire bits:    8283
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              25904
     $_ANDNOT_                    1024
     $_MUX_                      16352
     $_NAND_                         4
     $_ORNOT_                        8
     $_OR_                         292
     sky130_fd_sc_hd__dfxtp_2     8224

[INFO]: USING STRATEGY AREA 0

55. Executing ABC pass (technology mapping using ABC).

55.1. Extracting gate netlist of module `\alphasoc_mem' to `/tmp/yosys-abc-aBX9Dj/input.blif'..
Extracted 17680 gates and 25916 wires to a netlist network with 8236 inputs and 8224 outputs.

55.1.1. Executing ABC.
Running ABC command: "/build/bin/yosys-abc" -s -f /tmp/yosys-abc-aBX9Dj/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-aBX9Dj/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-aBX9Dj/input.blif 
ABC: + read_lib -w /openlane/designs/alphasoc_mem/runs/RUN_2023.12.03_14.26.22/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.12 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/openlane/designs/alphasoc_mem/runs/RUN_2023.12.03_14.26.22/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.16 sec
ABC: Memory =    9.54 MB. Time =     0.16 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openlane/designs/alphasoc_mem/runs/RUN_2023.12.03_14.26.22/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /openlane/designs/alphasoc_mem/runs/RUN_2023.12.03_14.26.22/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + retime -D -D 1100000.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 1100000.0 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: + upsize -D 1100000.0 
ABC: Current delay (2533.40 ps) does not exceed the target delay (1100000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 1100000.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =  24150 ( 46.3 %)   Cap = 12.5 ff ( 15.8 %)   Area =   204857.73 ( 45.3 %)   Delay =  2930.54 ps  ( 24.3 %)               
ABC: Path  0 --       3 : 0    1 pi                        A =   0.00  Df =   8.2   -5.1 ps  S =  17.7 ps  Cin =  0.0 ff  Cout =   2.2 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --   16467 : 1    9 sky130_fd_sc_hd__buf_1    A =   3.75  Df = 213.0  -71.2 ps  S = 239.0 ps  Cin =  2.1 ff  Cout =  19.7 ff  Cmax = 130.0 ff  G =  899  
ABC: Path  2 --   16468 : 1   10 sky130_fd_sc_hd__buf_1    A =   3.75  Df = 483.7 -149.8 ps  S = 264.0 ps  Cin =  2.1 ff  Cout =  21.9 ff  Cmax = 130.0 ff  G =  999  
ABC: Path  3 --   16469 : 1   10 sky130_fd_sc_hd__buf_1    A =   3.75  Df = 955.6 -333.9 ps  S = 549.8 ps  Cin =  2.1 ff  Cout =  46.9 ff  Cmax = 130.0 ff  G = 2115  
ABC: Path  4 --   16470 : 1   10 sky130_fd_sc_hd__buf_1    A =   3.75  Df =1532.2 -542.0 ps  S = 670.7 ps  Cin =  2.1 ff  Cout =  57.7 ff  Cmax = 130.0 ff  G = 2593  
ABC: Path  5 --   16849 : 6    1 sky130_fd_sc_hd__mux4_2   A =  22.52  Df =2078.8 -554.2 ps  S =  77.8 ps  Cin =  2.6 ff  Cout =   2.5 ff  Cmax = 301.2 ff  G =   89  
ABC: Path  6 --   16858 : 5    1 sky130_fd_sc_hd__a221o_2  A =  11.26  Df =2215.5 -308.4 ps  S =  50.8 ps  Cin =  2.3 ff  Cout =   2.5 ff  Cmax = 299.4 ff  G =  102  
ABC: Path  7 --   16912 : 5    1 sky130_fd_sc_hd__a2111o_2 A =  12.51  Df =2357.5  -25.8 ps  S =  59.0 ps  Cin =  2.4 ff  Cout =   2.5 ff  Cmax = 324.1 ff  G =   99  
ABC: Path  8 --   17006 : 5    1 sky130_fd_sc_hd__a2111o_2 A =  12.51  Df =2930.5 -370.9 ps  S = 170.0 ps  Cin =  2.4 ff  Cout =  33.4 ff  Cmax = 324.1 ff  G = 1385  
ABC: Start-point = pi2 (\addr [0]).  End-point = po1 ($\mem$rdreg[0]$d [1]).
ABC: + print_stats -m 
ABC: netlist                       : i/o = 8236/ 8224  lat =    0  nd = 24150  edge =  57578  area =204811.53  delay =10.00  lev = 10
ABC: + write_blif /tmp/yosys-abc-aBX9Dj/output.blif 

55.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__nor2b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:       32
ABC RESULTS:   sky130_fd_sc_hd__mux4_2 cells:     2048
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:      992
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:      480
ABC RESULTS:   sky130_fd_sc_hd__o41a_2 cells:       96
ABC RESULTS:   sky130_fd_sc_hd__a2111o_2 cells:       64
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand2b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:     1024
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:     8192
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:    11170
ABC RESULTS:        internal signals:     9456
ABC RESULTS:           input signals:     8236
ABC RESULTS:          output signals:     8224
Removing temp directory.

56. Executing SETUNDEF pass (replace undef values with defined constants).

57. Executing HILOMAP pass (mapping to constant drivers).

58. Executing SPLITNETS pass (splitting up multi-bit signals).

59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphasoc_mem..
Removed 0 unused cells and 25916 unused wires.
<suppressed ~1 debug messages>

60. Executing INSBUF pass (insert buffer cells for connected wires).

61. Executing CHECK pass (checking for obvious problems).
Checking module alphasoc_mem...
Found and reported 0 problems.

62. Printing statistics.

=== alphasoc_mem ===

   Number of wires:              32347
   Number of wire bits:          32433
   Number of public wires:        8197
   Number of public wire bits:    8283
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              32374
     sky130_fd_sc_hd__a2111o_2      64
     sky130_fd_sc_hd__a221o_2       32
     sky130_fd_sc_hd__a22o_2       992
     sky130_fd_sc_hd__and2_2        19
     sky130_fd_sc_hd__and2b_2        4
     sky130_fd_sc_hd__and3_2      1024
     sky130_fd_sc_hd__buf_1      11170
     sky130_fd_sc_hd__dfxtp_2     8224
     sky130_fd_sc_hd__mux2_2      8192
     sky130_fd_sc_hd__mux4_2      2048
     sky130_fd_sc_hd__nand2_2        2
     sky130_fd_sc_hd__nand2b_2       2
     sky130_fd_sc_hd__nor2_2        19
     sky130_fd_sc_hd__nor2b_2        2
     sky130_fd_sc_hd__o21a_2       480
     sky130_fd_sc_hd__o41a_2        96
     sky130_fd_sc_hd__or2_2          2
     sky130_fd_sc_hd__or2b_2         2

   Chip area for module '\alphasoc_mem': 379785.494400

63. Executing Verilog backend.
Dumping module `\alphasoc_mem'.

End of script. Logfile hash: 9e9cfc6e1f, CPU: user 15.08s system 0.71s, MEM: 125.76 MB peak
Yosys 0.34 (git sha1 4a1b5599258, gcc 8.3.1 -fPIC -Os)
Time spent: 73% 2x abc (38 sec), 7% 18x opt_expr (3 sec), ...
