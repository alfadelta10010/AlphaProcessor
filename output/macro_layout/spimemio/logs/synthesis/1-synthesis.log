
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.34 (git sha1 4a1b5599258, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend: /openlane/designs/spimemio/src/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

2. Executing Verilog-2005 frontend: /openlane/designs/spimemio/src/spimemio.v
Parsing SystemVerilog input from `/openlane/designs/spimemio/src/spimemio.v' to AST representation.
Generating RTLIL representation for module `\spimemio'.
Generating RTLIL representation for module `\spimemio_xfer'.
Successfully finished Verilog frontend.

3. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/spimemio/runs/RUN_2023.12.03_10.14.21/tmp/synthesis/hierarchy.dot'.
Dumping module spimemio to page 1.

4. Executing HIERARCHY pass (managing design hierarchy).

4.1. Analyzing design hierarchy..
Top module:  \spimemio
Used module:     \spimemio_xfer

4.2. Analyzing design hierarchy..
Top module:  \spimemio
Used module:     \spimemio_xfer
Removed 0 unused modules.
Renaming module spimemio to spimemio.

5. Executing TRIBUF pass.

6. Executing HIERARCHY pass (managing design hierarchy).

6.1. Analyzing design hierarchy..
Top module:  \spimemio
Used module:     \spimemio_xfer

6.2. Analyzing design hierarchy..
Top module:  \spimemio
Used module:     \spimemio_xfer
Removed 0 unused modules.

7. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$/openlane/designs/spimemio/src/spimemio.v:188$32 in module spimemio.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/spimemio/src/spimemio.v:80$10 in module spimemio.
Marked 2 switch rules as full_case in process $proc$/openlane/designs/spimemio/src/spimemio.v:516$86 in module spimemio_xfer.
Marked 5 switch rules as full_case in process $proc$/openlane/designs/spimemio/src/spimemio.v:428$62 in module spimemio_xfer.
Removed a total of 0 dead cases.

9. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 2 redundant assignments.
Promoted 18 assignments to connections.

10. Executing PROC_INIT pass (extract init attributes).

11. Executing PROC_ARST pass (detect async resets in processes).

12. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~39 debug messages>

13. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
     1/17: $0\buffer[23:0] [23:16]
     2/17: $0\buffer[23:0] [15:8]
     3/17: $0\buffer[23:0] [7:0]
     4/17: $0\xfer_resetn[0:0]
     5/17: $0\state[3:0]
     6/17: $0\rd_inc[0:0]
     7/17: $0\rd_wait[0:0]
     8/17: $0\rd_valid[0:0]
     9/17: $0\rd_addr[23:0]
    10/17: $0\din_valid[0:0]
    11/17: $0\din_rd[0:0]
    12/17: $0\din_ddr[0:0]
    13/17: $0\din_qspi[0:0]
    14/17: $0\din_cont[0:0]
    15/17: $0\din_tag[3:0]
    16/17: $0\din_data[7:0]
    17/17: $0\rdata[31:0]
Creating decoders for process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:132$14'.
Creating decoders for process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:80$10'.
     1/10: $0\softreset[0:0]
     2/10: $0\config_do[3:0]
     3/10: $0\config_clk[0:0]
     4/10: $0\config_csb[0:0]
     5/10: $0\config_oe[3:0]
     6/10: $0\config_dummy[3:0]
     7/10: $0\config_cont[0:0]
     8/10: $0\config_qspi[0:0]
     9/10: $0\config_ddr[0:0]
    10/10: $0\config_en[0:0]
Creating decoders for process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
     1/14: $0\last_fetch[0:0]
     2/14: $0\fetch[0:0]
     3/14: $0\xfer_tag[3:0]
     4/14: $0\xfer_rd[0:0]
     5/14: $0\xfer_qspi[0:0]
     6/14: $0\xfer_cont[0:0]
     7/14: $0\dummy_count[3:0]
     8/14: $0\count[3:0]
     9/14: $0\ibuffer[7:0]
    10/14: $0\obuffer[7:0]
    11/14: $0\xfer_ddr[0:0]
    12/14: $0\xfer_dspi[0:0]
    13/14: $0\flash_clk[0:0]
    14/14: $0\flash_csb[0:0]
Creating decoders for process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:428$62'.
     1/33: $5\next_count[3:0]
     2/33: $5\next_obuffer[7:0]
     3/33: $5\next_ibuffer[7:0]
     4/33: $4\next_count[3:0]
     5/33: $4\next_obuffer[7:0]
     6/33: $4\next_ibuffer[7:0]
     7/33: $3\next_count[3:0]
     8/33: $3\next_obuffer[7:0]
     9/33: $3\next_ibuffer[7:0]
    10/33: $2\next_fetch[0:0]
    11/33: $2\next_count[3:0]
    12/33: $2\next_ibuffer[7:0]
    13/33: $2\next_obuffer[7:0]
    14/33: $2\flash_io0_do[0:0]
    15/33: $2\flash_io0_oe[0:0]
    16/33: $2\flash_io3_do[0:0]
    17/33: $2\flash_io2_do[0:0]
    18/33: $2\flash_io1_do[0:0]
    19/33: $2\flash_io3_oe[0:0]
    20/33: $2\flash_io2_oe[0:0]
    21/33: $2\flash_io1_oe[0:0]
    22/33: $1\next_fetch[0:0]
    23/33: $1\next_count[3:0]
    24/33: $1\next_ibuffer[7:0]
    25/33: $1\next_obuffer[7:0]
    26/33: $1\flash_io3_do[0:0]
    27/33: $1\flash_io2_do[0:0]
    28/33: $1\flash_io1_do[0:0]
    29/33: $1\flash_io0_do[0:0]
    30/33: $1\flash_io3_oe[0:0]
    31/33: $1\flash_io2_oe[0:0]
    32/33: $1\flash_io1_oe[0:0]
    33/33: $1\flash_io0_oe[0:0]
Creating decoders for process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:417$53'.

14. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\spimemio_xfer.\flash_io0_oe' from process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:428$62'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_oe' from process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:428$62'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_oe' from process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:428$62'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_oe' from process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:428$62'.
No latch inferred for signal `\spimemio_xfer.\flash_io0_do' from process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:428$62'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_do' from process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:428$62'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_do' from process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:428$62'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_do' from process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:428$62'.
No latch inferred for signal `\spimemio_xfer.\next_obuffer' from process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:428$62'.
No latch inferred for signal `\spimemio_xfer.\next_ibuffer' from process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:428$62'.
No latch inferred for signal `\spimemio_xfer.\next_count' from process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:428$62'.
No latch inferred for signal `\spimemio_xfer.\next_fetch' from process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:428$62'.

15. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\spimemio.\rdata' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
  created $dff cell `$procdff$761' with positive edge clock.
Creating register for signal `\spimemio.\xfer_resetn' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
  created $dff cell `$procdff$762' with positive edge clock.
Creating register for signal `\spimemio.\din_valid' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
  created $dff cell `$procdff$763' with positive edge clock.
Creating register for signal `\spimemio.\din_data' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
  created $dff cell `$procdff$764' with positive edge clock.
Creating register for signal `\spimemio.\din_tag' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
  created $dff cell `$procdff$765' with positive edge clock.
Creating register for signal `\spimemio.\din_cont' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
  created $dff cell `$procdff$766' with positive edge clock.
Creating register for signal `\spimemio.\din_qspi' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
  created $dff cell `$procdff$767' with positive edge clock.
Creating register for signal `\spimemio.\din_ddr' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
  created $dff cell `$procdff$768' with positive edge clock.
Creating register for signal `\spimemio.\din_rd' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
  created $dff cell `$procdff$769' with positive edge clock.
Creating register for signal `\spimemio.\buffer' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
  created $dff cell `$procdff$770' with positive edge clock.
Creating register for signal `\spimemio.\rd_addr' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
  created $dff cell `$procdff$771' with positive edge clock.
Creating register for signal `\spimemio.\rd_valid' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
  created $dff cell `$procdff$772' with positive edge clock.
Creating register for signal `\spimemio.\rd_wait' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
  created $dff cell `$procdff$773' with positive edge clock.
Creating register for signal `\spimemio.\rd_inc' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
  created $dff cell `$procdff$774' with positive edge clock.
Creating register for signal `\spimemio.\state' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
  created $dff cell `$procdff$775' with positive edge clock.
Creating register for signal `\spimemio.\xfer_io0_90' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:132$14'.
  created $dff cell `$procdff$776' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io1_90' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:132$14'.
  created $dff cell `$procdff$777' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io2_90' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:132$14'.
  created $dff cell `$procdff$778' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io3_90' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:132$14'.
  created $dff cell `$procdff$779' with negative edge clock.
Creating register for signal `\spimemio.\softreset' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:80$10'.
  created $dff cell `$procdff$780' with positive edge clock.
Creating register for signal `\spimemio.\config_en' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:80$10'.
  created $dff cell `$procdff$781' with positive edge clock.
Creating register for signal `\spimemio.\config_ddr' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:80$10'.
  created $dff cell `$procdff$782' with positive edge clock.
Creating register for signal `\spimemio.\config_qspi' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:80$10'.
  created $dff cell `$procdff$783' with positive edge clock.
Creating register for signal `\spimemio.\config_cont' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:80$10'.
  created $dff cell `$procdff$784' with positive edge clock.
Creating register for signal `\spimemio.\config_dummy' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:80$10'.
  created $dff cell `$procdff$785' with positive edge clock.
Creating register for signal `\spimemio.\config_oe' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:80$10'.
  created $dff cell `$procdff$786' with positive edge clock.
Creating register for signal `\spimemio.\config_csb' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:80$10'.
  created $dff cell `$procdff$787' with positive edge clock.
Creating register for signal `\spimemio.\config_clk' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:80$10'.
  created $dff cell `$procdff$788' with positive edge clock.
Creating register for signal `\spimemio.\config_do' using process `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:80$10'.
  created $dff cell `$procdff$789' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_csb' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
  created $dff cell `$procdff$790' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_clk' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
  created $dff cell `$procdff$791' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_dspi' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
  created $dff cell `$procdff$792' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
  created $dff cell `$procdff$793' with positive edge clock.
Creating register for signal `\spimemio_xfer.\obuffer' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
  created $dff cell `$procdff$794' with positive edge clock.
Creating register for signal `\spimemio_xfer.\ibuffer' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
  created $dff cell `$procdff$795' with positive edge clock.
Creating register for signal `\spimemio_xfer.\count' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
  created $dff cell `$procdff$796' with positive edge clock.
Creating register for signal `\spimemio_xfer.\dummy_count' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
  created $dff cell `$procdff$797' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_cont' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
  created $dff cell `$procdff$798' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_qspi' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
  created $dff cell `$procdff$799' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_rd' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
  created $dff cell `$procdff$800' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
  created $dff cell `$procdff$801' with positive edge clock.
Creating register for signal `\spimemio_xfer.\fetch' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
  created $dff cell `$procdff$802' with positive edge clock.
Creating register for signal `\spimemio_xfer.\last_fetch' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
  created $dff cell `$procdff$803' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr_q' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:417$53'.
  created $dff cell `$procdff$804' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag_q' using process `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:417$53'.
  created $dff cell `$procdff$805' with positive edge clock.

16. Executing PROC_MEMWR pass (convert process memory writes to cells).

17. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 25 empty switches in `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
Removing empty process `spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:188$32'.
Removing empty process `spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:132$14'.
Found and cleaned up 5 empty switches in `\spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:80$10'.
Removing empty process `spimemio.$proc$/openlane/designs/spimemio/src/spimemio.v:80$10'.
Found and cleaned up 4 empty switches in `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
Removing empty process `spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:516$86'.
Found and cleaned up 5 empty switches in `\spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:428$62'.
Removing empty process `spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:428$62'.
Removing empty process `spimemio_xfer.$proc$/openlane/designs/spimemio/src/spimemio.v:417$53'.
Cleaned up 39 empty switches.

18. Executing CHECK pass (checking for obvious problems).
Checking module spimemio...
Checking module spimemio_xfer...
Found and reported 0 problems.

19. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.
<suppressed ~15 debug messages>
Optimizing module spimemio_xfer.
<suppressed ~33 debug messages>

20. Executing FLATTEN pass (flatten design).
Deleting now unused module spimemio_xfer.
<suppressed ~1 debug messages>

21. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..
Removed 7 unused cells and 311 unused wires.
<suppressed ~14 debug messages>

23. Executing OPT pass (performing simple optimizations).

23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
<suppressed ~294 debug messages>
Removed a total of 98 cells.

23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\xfer.$procmux$536.
    dead port 1/4 on $pmux $flatten\xfer.$procmux$538.
    dead port 2/4 on $pmux $flatten\xfer.$procmux$538.
    dead port 3/4 on $pmux $flatten\xfer.$procmux$538.
    dead port 2/2 on $mux $flatten\xfer.$procmux$542.
    dead port 2/2 on $mux $flatten\xfer.$procmux$529.
    dead port 2/2 on $mux $flatten\xfer.$procmux$562.
    dead port 2/2 on $mux $flatten\xfer.$procmux$564.
    dead port 2/2 on $mux $flatten\xfer.$procmux$573.
    dead port 2/2 on $mux $flatten\xfer.$procmux$575.
    dead port 2/2 on $mux $flatten\xfer.$procmux$597.
    dead port 2/2 on $mux $flatten\xfer.$procmux$599.
    dead port 2/2 on $mux $flatten\xfer.$procmux$609.
    dead port 2/2 on $mux $flatten\xfer.$procmux$611.
    dead port 2/2 on $mux $flatten\xfer.$procmux$621.
    dead port 2/2 on $mux $flatten\xfer.$procmux$631.
    dead port 2/2 on $mux $flatten\xfer.$procmux$641.
    dead port 2/2 on $mux $flatten\xfer.$procmux$651.
    dead port 2/2 on $mux $flatten\xfer.$procmux$661.
    dead port 2/2 on $mux $flatten\xfer.$procmux$671.
    dead port 2/2 on $mux $flatten\xfer.$procmux$679.
    dead port 2/2 on $mux $flatten\xfer.$procmux$687.
    dead port 2/2 on $mux $flatten\xfer.$procmux$697.
    dead port 2/2 on $mux $flatten\xfer.$procmux$705.
    dead port 2/2 on $mux $flatten\xfer.$procmux$713.
    dead port 2/2 on $mux $flatten\xfer.$procmux$723.
    dead port 2/2 on $mux $flatten\xfer.$procmux$523.
    dead port 1/4 on $pmux $flatten\xfer.$procmux$525.
    dead port 2/4 on $pmux $flatten\xfer.$procmux$525.
    dead port 3/4 on $pmux $flatten\xfer.$procmux$525.
Removed 30 multiplexer ports.
<suppressed ~60 debug messages>

23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spimemio.
    New ctrl vector for $pmux cell $flatten\xfer.$procmux$657: { $flatten\xfer.$procmux$515_CMP $auto$opt_reduce.cc:134:opt_pmux$807 }
    New ctrl vector for $pmux cell $flatten\xfer.$procmux$667: { $flatten\xfer.$procmux$515_CMP $auto$opt_reduce.cc:134:opt_pmux$809 }
    New ctrl vector for $pmux cell $flatten\xfer.$procmux$676: $auto$opt_reduce.cc:134:opt_pmux$811
    New ctrl vector for $pmux cell $flatten\xfer.$procmux$684: $auto$opt_reduce.cc:134:opt_pmux$813
    New ctrl vector for $pmux cell $flatten\xfer.$procmux$693: { $flatten\xfer.$procmux$515_CMP $auto$opt_reduce.cc:134:opt_pmux$815 }
    New ctrl vector for $pmux cell $flatten\xfer.$procmux$702: $auto$opt_reduce.cc:134:opt_pmux$817
    New ctrl vector for $pmux cell $flatten\xfer.$procmux$710: $auto$opt_reduce.cc:134:opt_pmux$819
    New ctrl vector for $pmux cell $flatten\xfer.$procmux$719: { $flatten\xfer.$procmux$515_CMP $auto$opt_reduce.cc:134:opt_pmux$821 }
    New ctrl vector for $pmux cell $procmux$323: { $procmux$166_CMP $auto$opt_reduce.cc:134:opt_pmux$823 $procmux$152_CMP $procmux$149_CMP $procmux$146_CMP $procmux$143_CMP }
    New ctrl vector for $pmux cell $flatten\xfer.$procmux$512: $auto$opt_reduce.cc:134:opt_pmux$825
  Optimizing cells in module \spimemio.
Performed a total of 10 changes.

23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
<suppressed ~66 debug messages>
Removed a total of 22 cells.

23.6. Executing OPT_DFF pass (perform DFF optimizations).

23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..
Removed 0 unused cells and 145 unused wires.
<suppressed ~1 debug messages>

23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

23.9. Rerunning OPT passes. (Maybe there is more to do..)

23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spimemio.
    New ctrl vector for $pmux cell $procmux$128: $auto$opt_reduce.cc:134:opt_pmux$827
    New ctrl vector for $pmux cell $procmux$230: { $procmux$166_CMP $auto$opt_reduce.cc:134:opt_pmux$829 $procmux$143_CMP }
  Optimizing cells in module \spimemio.
Performed a total of 2 changes.

23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
Removed a total of 0 cells.

23.13. Executing OPT_DFF pass (perform DFF optimizations).

23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..

23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

23.16. Rerunning OPT passes. (Maybe there is more to do..)

23.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

23.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spimemio.
Performed a total of 0 changes.

23.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
Removed a total of 0 cells.

23.20. Executing OPT_DFF pass (perform DFF optimizations).

23.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..

23.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

23.23. Finished OPT passes. (There is nothing left to do.)

24. Executing FSM pass (extract and optimize FSM).

24.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking spimemio.din_tag as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register spimemio.state.

24.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\state' from module `\spimemio'.
  found $dff cell for state register: $procdff$775
  root of input selection tree: $0\state[3:0]
  found reset state: 4'0000 (guessed from mux tree)
  found ctrl input: $logic_or$/openlane/designs/spimemio/src/spimemio.v:192$34_Y
  found ctrl input: \jump
  found ctrl input: $procmux$143_CMP
  found ctrl input: $procmux$146_CMP
  found ctrl input: $procmux$149_CMP
  found ctrl input: $procmux$152_CMP
  found ctrl input: $procmux$155_CMP
  found ctrl input: $procmux$158_CMP
  found ctrl input: $procmux$161_CMP
  found ctrl input: $procmux$166_CMP
  found ctrl input: $procmux$169_CMP
  found ctrl input: $procmux$129_CMP
  found ctrl input: $procmux$175_CMP
  found ctrl input: $procmux$132_CMP
  found ctrl input: $procmux$181_CMP
  found ctrl input: $logic_or$/openlane/designs/spimemio/src/spimemio.v:331$52_Y
  found ctrl input: \xfer.din_ready
  found state code: 4'1001
  found state code: 4'1100
  found state code: 4'1011
  found state code: 4'1010
  found ctrl input: $logic_or$/openlane/designs/spimemio/src/spimemio.v:291$48_Y
  found state code: 4'1000
  found state code: 4'0111
  found ctrl input: $logic_and$/openlane/designs/spimemio/src/spimemio.v:263$47_Y
  found state code: 4'0110
  found state code: 4'0101
  found ctrl input: \dout_valid
  found state code: 4'0100
  found state code: 4'0011
  found state code: 4'0010
  found state code: 4'0001
  found ctrl input: \config_cont
  found state code: 4'0000
  found ctrl output: $procmux$129_CMP
  found ctrl output: $procmux$132_CMP
  found ctrl output: $procmux$143_CMP
  found ctrl output: $procmux$146_CMP
  found ctrl output: $procmux$149_CMP
  found ctrl output: $procmux$152_CMP
  found ctrl output: $procmux$155_CMP
  found ctrl output: $procmux$158_CMP
  found ctrl output: $procmux$161_CMP
  found ctrl output: $procmux$166_CMP
  found ctrl output: $procmux$169_CMP
  found ctrl output: $procmux$175_CMP
  found ctrl output: $procmux$181_CMP
  ctrl inputs: { \xfer.din_ready $logic_or$/openlane/designs/spimemio/src/spimemio.v:331$52_Y $logic_or$/openlane/designs/spimemio/src/spimemio.v:291$48_Y $logic_and$/openlane/designs/spimemio/src/spimemio.v:263$47_Y $logic_or$/openlane/designs/spimemio/src/spimemio.v:192$34_Y \config_cont \jump \dout_valid }
  ctrl outputs: { $procmux$181_CMP $procmux$175_CMP $procmux$169_CMP $procmux$166_CMP $procmux$161_CMP $procmux$158_CMP $procmux$155_CMP $procmux$152_CMP $procmux$149_CMP $procmux$146_CMP $procmux$143_CMP $procmux$132_CMP $procmux$129_CMP $0\state[3:0] }
  transition:     4'0000 8'0---0-0- ->     4'0000 17'10000000000000000
  transition:     4'0000 8'1---0-0- ->     4'0001 17'10000000000000001
  transition:     4'0000 8'----001- ->     4'0100 17'10000000000000100
  transition:     4'0000 8'----011- ->     4'0101 17'10000000000000101
  transition:     4'0000 8'----1--- ->     4'0000 17'10000000000000000
  transition:     4'1000 8'0---0-0- ->     4'1000 17'00000010000001000
  transition:     4'1000 8'1---0-0- ->     4'1001 17'00000010000001001
  transition:     4'1000 8'----001- ->     4'0100 17'00000010000000100
  transition:     4'1000 8'----011- ->     4'0101 17'00000010000000101
  transition:     4'1000 8'----1--- ->     4'0000 17'00000010000000000
  transition:     4'0100 8'0---0-0- ->     4'0100 17'00100000000000100
  transition:     4'0100 8'1---0-0- ->     4'0101 17'00100000000000101
  transition:     4'0100 8'----001- ->     4'0100 17'00100000000000100
  transition:     4'0100 8'----011- ->     4'0101 17'00100000000000101
  transition:     4'0100 8'----1--- ->     4'0000 17'00100000000000000
  transition:     4'1100 8'-0--0-0- ->     4'1100 17'00000000001001100
  transition:     4'1100 8'01--0-0- ->     4'1100 17'00000000001001100
  transition:     4'1100 8'11--0-0- ->     4'1001 17'00000000001001001
  transition:     4'1100 8'----001- ->     4'0100 17'00000000001000100
  transition:     4'1100 8'----011- ->     4'0101 17'00000000001000101
  transition:     4'1100 8'----1--- ->     4'0000 17'00000000001000000
  transition:     4'0010 8'0---0-0- ->     4'0010 17'01000000000000010
  transition:     4'0010 8'1---0-0- ->     4'0011 17'01000000000000011
  transition:     4'0010 8'----001- ->     4'0100 17'01000000000000100
  transition:     4'0010 8'----011- ->     4'0101 17'01000000000000101
  transition:     4'0010 8'----1--- ->     4'0000 17'01000000000000000
  transition:     4'1010 8'0---0-0- ->     4'1010 17'00000000100001010
  transition:     4'1010 8'1---0-0- ->     4'1011 17'00000000100001011
  transition:     4'1010 8'----001- ->     4'0100 17'00000000100000100
  transition:     4'1010 8'----011- ->     4'0101 17'00000000100000101
  transition:     4'1010 8'----1--- ->     4'0000 17'00000000100000000
  transition:     4'0110 8'0---0-0- ->     4'0110 17'00001000000000110
  transition:     4'0110 8'1---0-0- ->     4'0111 17'00001000000000111
  transition:     4'0110 8'----001- ->     4'0100 17'00001000000000100
  transition:     4'0110 8'----011- ->     4'0101 17'00001000000000101
  transition:     4'0110 8'----1--- ->     4'0000 17'00001000000000000
  transition:     4'0001 8'----0-00 ->     4'0001 17'00000000000100001
  transition:     4'0001 8'----0-01 ->     4'0010 17'00000000000100010
  transition:     4'0001 8'----001- ->     4'0100 17'00000000000100100
  transition:     4'0001 8'----011- ->     4'0101 17'00000000000100101
  transition:     4'0001 8'----1--- ->     4'0000 17'00000000000100000
  transition:     4'1001 8'0---0-0- ->     4'1001 17'00000001000001001
  transition:     4'1001 8'1---0-0- ->     4'1010 17'00000001000001010
  transition:     4'1001 8'----001- ->     4'0100 17'00000001000000100
  transition:     4'1001 8'----011- ->     4'0101 17'00000001000000101
  transition:     4'1001 8'----1--- ->     4'0000 17'00000001000000000
  transition:     4'0101 8'---00-0- ->     4'0101 17'00010000000000101
  transition:     4'0101 8'0--10-0- ->     4'0101 17'00010000000000101
  transition:     4'0101 8'1--10-0- ->     4'0110 17'00010000000000110
  transition:     4'0101 8'----001- ->     4'0100 17'00010000000000100
  transition:     4'0101 8'----011- ->     4'0101 17'00010000000000101
  transition:     4'0101 8'----1--- ->     4'0000 17'00010000000000000
  transition:     4'0011 8'----0-00 ->     4'0011 17'00000000000010011
  transition:     4'0011 8'----0-01 ->     4'0100 17'00000000000010100
  transition:     4'0011 8'----001- ->     4'0100 17'00000000000010100
  transition:     4'0011 8'----011- ->     4'0101 17'00000000000010101
  transition:     4'0011 8'----1--- ->     4'0000 17'00000000000010000
  transition:     4'1011 8'0---0-0- ->     4'1011 17'00000000010001011
  transition:     4'1011 8'1---0-0- ->     4'1100 17'00000000010001100
  transition:     4'1011 8'----001- ->     4'0100 17'00000000010000100
  transition:     4'1011 8'----011- ->     4'0101 17'00000000010000101
  transition:     4'1011 8'----1--- ->     4'0000 17'00000000010000000
  transition:     4'0111 8'0---0-0- ->     4'0111 17'00000100000000111
  transition:     4'0111 8'1-0-0-0- ->     4'1001 17'00000100000001001
  transition:     4'0111 8'1-1-0-0- ->     4'1000 17'00000100000001000
  transition:     4'0111 8'----001- ->     4'0100 17'00000100000000100
  transition:     4'0111 8'----011- ->     4'0101 17'00000100000000101
  transition:     4'0111 8'----1--- ->     4'0000 17'00000100000000000

24.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\state$830' from module `\spimemio'.

24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..
Removed 33 unused cells and 33 unused wires.
<suppressed ~34 debug messages>

24.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\state$830' from module `\spimemio'.
  Removing unused output signal $0\state[3:0] [0].
  Removing unused output signal $0\state[3:0] [1].
  Removing unused output signal $0\state[3:0] [2].
  Removing unused output signal $0\state[3:0] [3].

24.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\state$830' from module `\spimemio' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ------------1
  1000 -> -----------1-
  0100 -> ----------1--
  1100 -> ---------1---
  0010 -> --------1----
  1010 -> -------1-----
  0110 -> ------1------
  0001 -> -----1-------
  1001 -> ----1--------
  0101 -> ---1---------
  0011 -> --1----------
  1011 -> -1-----------
  0111 -> 1------------

24.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\state$830' from module `spimemio':
-------------------------------------

  Information on FSM $fsm$\state$830 (\state):

  Number of input signals:    8
  Number of output signals:  13
  Number of state bits:      13

  Input signals:
    0: \dout_valid
    1: \jump
    2: \config_cont
    3: $logic_or$/openlane/designs/spimemio/src/spimemio.v:192$34_Y
    4: $logic_and$/openlane/designs/spimemio/src/spimemio.v:263$47_Y
    5: $logic_or$/openlane/designs/spimemio/src/spimemio.v:291$48_Y
    6: $logic_or$/openlane/designs/spimemio/src/spimemio.v:331$52_Y
    7: \xfer.din_ready

  Output signals:
    0: $procmux$129_CMP
    1: $procmux$132_CMP
    2: $procmux$143_CMP
    3: $procmux$146_CMP
    4: $procmux$149_CMP
    5: $procmux$152_CMP
    6: $procmux$155_CMP
    7: $procmux$158_CMP
    8: $procmux$161_CMP
    9: $procmux$166_CMP
   10: $procmux$169_CMP
   11: $procmux$175_CMP
   12: $procmux$181_CMP

  State encoding:
    0: 13'------------1  <RESET STATE>
    1: 13'-----------1-
    2: 13'----------1--
    3: 13'---------1---
    4: 13'--------1----
    5: 13'-------1-----
    6: 13'------1------
    7: 13'-----1-------
    8: 13'----1--------
    9: 13'---1---------
   10: 13'--1----------
   11: 13'-1-----------
   12: 13'1------------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 8'0---0-0-   ->     0 13'1000000000000
      1:     0 8'----1---   ->     0 13'1000000000000
      2:     0 8'----001-   ->     2 13'1000000000000
      3:     0 8'1---0-0-   ->     7 13'1000000000000
      4:     0 8'----011-   ->     9 13'1000000000000
      5:     1 8'----1---   ->     0 13'0000001000000
      6:     1 8'0---0-0-   ->     1 13'0000001000000
      7:     1 8'----001-   ->     2 13'0000001000000
      8:     1 8'1---0-0-   ->     8 13'0000001000000
      9:     1 8'----011-   ->     9 13'0000001000000
     10:     2 8'----1---   ->     0 13'0010000000000
     11:     2 8'0---0-0-   ->     2 13'0010000000000
     12:     2 8'----001-   ->     2 13'0010000000000
     13:     2 8'1---0-0-   ->     9 13'0010000000000
     14:     2 8'----011-   ->     9 13'0010000000000
     15:     3 8'----1---   ->     0 13'0000000000100
     16:     3 8'----001-   ->     2 13'0000000000100
     17:     3 8'-0--0-0-   ->     3 13'0000000000100
     18:     3 8'01--0-0-   ->     3 13'0000000000100
     19:     3 8'11--0-0-   ->     8 13'0000000000100
     20:     3 8'----011-   ->     9 13'0000000000100
     21:     4 8'----1---   ->     0 13'0100000000000
     22:     4 8'----001-   ->     2 13'0100000000000
     23:     4 8'0---0-0-   ->     4 13'0100000000000
     24:     4 8'----011-   ->     9 13'0100000000000
     25:     4 8'1---0-0-   ->    10 13'0100000000000
     26:     5 8'----1---   ->     0 13'0000000010000
     27:     5 8'----001-   ->     2 13'0000000010000
     28:     5 8'0---0-0-   ->     5 13'0000000010000
     29:     5 8'----011-   ->     9 13'0000000010000
     30:     5 8'1---0-0-   ->    11 13'0000000010000
     31:     6 8'----1---   ->     0 13'0000100000000
     32:     6 8'----001-   ->     2 13'0000100000000
     33:     6 8'0---0-0-   ->     6 13'0000100000000
     34:     6 8'----011-   ->     9 13'0000100000000
     35:     6 8'1---0-0-   ->    12 13'0000100000000
     36:     7 8'----1---   ->     0 13'0000000000010
     37:     7 8'----001-   ->     2 13'0000000000010
     38:     7 8'----0-01   ->     4 13'0000000000010
     39:     7 8'----0-00   ->     7 13'0000000000010
     40:     7 8'----011-   ->     9 13'0000000000010
     41:     8 8'----1---   ->     0 13'0000000100000
     42:     8 8'----001-   ->     2 13'0000000100000
     43:     8 8'1---0-0-   ->     5 13'0000000100000
     44:     8 8'0---0-0-   ->     8 13'0000000100000
     45:     8 8'----011-   ->     9 13'0000000100000
     46:     9 8'----1---   ->     0 13'0001000000000
     47:     9 8'----001-   ->     2 13'0001000000000
     48:     9 8'1--10-0-   ->     6 13'0001000000000
     49:     9 8'---00-0-   ->     9 13'0001000000000
     50:     9 8'0--10-0-   ->     9 13'0001000000000
     51:     9 8'----011-   ->     9 13'0001000000000
     52:    10 8'----1---   ->     0 13'0000000000001
     53:    10 8'----0-01   ->     2 13'0000000000001
     54:    10 8'----001-   ->     2 13'0000000000001
     55:    10 8'----011-   ->     9 13'0000000000001
     56:    10 8'----0-00   ->    10 13'0000000000001
     57:    11 8'----1---   ->     0 13'0000000001000
     58:    11 8'----001-   ->     2 13'0000000001000
     59:    11 8'1---0-0-   ->     3 13'0000000001000
     60:    11 8'----011-   ->     9 13'0000000001000
     61:    11 8'0---0-0-   ->    11 13'0000000001000
     62:    12 8'----1---   ->     0 13'0000010000000
     63:    12 8'1-1-0-0-   ->     1 13'0000010000000
     64:    12 8'----001-   ->     2 13'0000010000000
     65:    12 8'1-0-0-0-   ->     8 13'0000010000000
     66:    12 8'----011-   ->     9 13'0000010000000
     67:    12 8'0---0-0-   ->    12 13'0000010000000

-------------------------------------

24.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\state$830' from module `\spimemio'.

25. Executing OPT pass (performing simple optimizations).

25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.
<suppressed ~14 debug messages>

25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~62 debug messages>

25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spimemio.
Performed a total of 0 changes.

25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
Removed a total of 0 cells.

25.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$789 ($dff) from module spimemio (D = $procmux$373_Y, Q = \config_do, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$984 ($sdff) from module spimemio (D = \cfgreg_di [3:0], Q = \config_do).
Adding SRST signal on $procdff$788 ($dff) from module spimemio (D = $procmux$378_Y, Q = \config_clk, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$986 ($sdff) from module spimemio (D = \cfgreg_di [4], Q = \config_clk).
Adding SRST signal on $procdff$787 ($dff) from module spimemio (D = $procmux$383_Y, Q = \config_csb, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$988 ($sdff) from module spimemio (D = \cfgreg_di [5], Q = \config_csb).
Adding SRST signal on $procdff$786 ($dff) from module spimemio (D = $procmux$388_Y, Q = \config_oe, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$990 ($sdff) from module spimemio (D = \cfgreg_di [11:8], Q = \config_oe).
Adding SRST signal on $procdff$785 ($dff) from module spimemio (D = $procmux$393_Y, Q = \config_dummy, rval = 4'1000).
Adding EN signal on $auto$ff.cc:266:slice$992 ($sdff) from module spimemio (D = \cfgreg_di [19:16], Q = \config_dummy).
Adding SRST signal on $procdff$784 ($dff) from module spimemio (D = $procmux$398_Y, Q = \config_cont, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$994 ($sdff) from module spimemio (D = \cfgreg_di [20], Q = \config_cont).
Adding SRST signal on $procdff$783 ($dff) from module spimemio (D = $procmux$403_Y, Q = \config_qspi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$996 ($sdff) from module spimemio (D = \cfgreg_di [21], Q = \config_qspi).
Adding SRST signal on $procdff$782 ($dff) from module spimemio (D = $procmux$408_Y, Q = \config_ddr, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$998 ($sdff) from module spimemio (D = \cfgreg_di [22], Q = \config_ddr).
Adding SRST signal on $procdff$781 ($dff) from module spimemio (D = $procmux$413_Y, Q = \config_en, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$1000 ($sdff) from module spimemio (D = \cfgreg_di [31], Q = \config_en).
Adding SRST signal on $procdff$780 ($dff) from module spimemio (D = $logic_or$/openlane/designs/spimemio/src/spimemio.v:81$12_Y, Q = \softreset, rval = 1'1).
Adding EN signal on $procdff$774 ($dff) from module spimemio (D = $procmux$202_Y, Q = \rd_inc).
Adding SRST signal on $auto$ff.cc:266:slice$1003 ($dffe) from module spimemio (D = $procmux$190_Y, Q = \rd_inc, rval = 1'0).
Adding EN signal on $procdff$773 ($dff) from module spimemio (D = $procmux$209_Y, Q = \rd_wait).
Adding SRST signal on $auto$ff.cc:266:slice$1013 ($dffe) from module spimemio (D = $procmux$207_Y, Q = \rd_wait, rval = 1'0).
Adding SRST signal on $procdff$772 ($dff) from module spimemio (D = $procmux$214_Y, Q = \rd_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1021 ($sdff) from module spimemio (D = 1'1, Q = \rd_valid).
Adding EN signal on $procdff$771 ($dff) from module spimemio (D = $ternary$/openlane/designs/spimemio/src/spimemio.v:207$45_Y [23:0], Q = \rd_addr).
Adding EN signal on $procdff$770 ($dff) from module spimemio (D = \xfer.ibuffer, Q = \buffer [7:0]).
Adding EN signal on $procdff$770 ($dff) from module spimemio (D = \xfer.ibuffer, Q = \buffer [15:8]).
Adding EN signal on $procdff$770 ($dff) from module spimemio (D = \xfer.ibuffer, Q = \buffer [23:16]).
Adding SRST signal on $procdff$769 ($dff) from module spimemio (D = $procmux$273_Y, Q = \din_rd, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1045 ($sdff) from module spimemio (D = 1'1, Q = \din_rd).
Adding SRST signal on $procdff$768 ($dff) from module spimemio (D = $procmux$294_Y, Q = \din_ddr, rval = 1'0).
Adding SRST signal on $procdff$767 ($dff) from module spimemio (D = $procmux$313_Y, Q = \din_qspi, rval = 1'0).
Adding SRST signal on $procdff$765 ($dff) from module spimemio (D = $procmux$323_Y, Q = \din_tag, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$1053 ($sdff) from module spimemio (D = $procmux$323_Y, Q = \din_tag).
Adding EN signal on $procdff$764 ($dff) from module spimemio (D = $procmux$342_Y, Q = \din_data).
Adding SRST signal on $procdff$763 ($dff) from module spimemio (D = $procmux$230_Y, Q = \din_valid, rval = 1'0).
Adding SRST signal on $procdff$762 ($dff) from module spimemio (D = $procmux$128_Y, Q = \xfer_resetn, rval = 1'0).
Adding EN signal on $procdff$761 ($dff) from module spimemio (D = { \xfer.ibuffer \buffer }, Q = \rdata).
Adding SRST signal on $flatten\xfer.$procdff$803 ($dff) from module spimemio (D = \xfer.fetch, Q = \xfer.last_fetch, rval = 1'1).
Adding SRST signal on $flatten\xfer.$procdff$802 ($dff) from module spimemio (D = \xfer.next_fetch, Q = \xfer.fetch, rval = 1'1).
Adding SRST signal on $flatten\xfer.$procdff$801 ($dff) from module spimemio (D = $flatten\xfer.$procmux$424_Y, Q = \xfer.xfer_tag, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$1085 ($sdff) from module spimemio (D = \din_tag, Q = \xfer.xfer_tag).
Adding SRST signal on $flatten\xfer.$procdff$800 ($dff) from module spimemio (D = $flatten\xfer.$procmux$429_Y, Q = \xfer.xfer_rd, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1087 ($sdff) from module spimemio (D = \din_rd, Q = \xfer.xfer_rd).
Adding SRST signal on $flatten\xfer.$procdff$799 ($dff) from module spimemio (D = $flatten\xfer.$procmux$434_Y, Q = \xfer.xfer_qspi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1089 ($sdff) from module spimemio (D = \din_qspi, Q = \xfer.xfer_qspi).
Adding SRST signal on $flatten\xfer.$procdff$797 ($dff) from module spimemio (D = $flatten\xfer.$procmux$447_Y, Q = \xfer.dummy_count, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$1091 ($sdff) from module spimemio (D = $flatten\xfer.$procmux$447_Y, Q = \xfer.dummy_count).
Adding SRST signal on $flatten\xfer.$procdff$796 ($dff) from module spimemio (D = $flatten\xfer.$procmux$457_Y [3], Q = \xfer.count [3], rval = 1'0).
Adding SRST signal on $flatten\xfer.$procdff$796 ($dff) from module spimemio (D = $flatten\xfer.$procmux$455_Y [2:0], Q = \xfer.count [2:0], rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$1096 ($sdff) from module spimemio (D = $flatten\xfer.$2\next_count[3:0] [2:0], Q = \xfer.count [2:0]).
Adding EN signal on $auto$ff.cc:266:slice$1095 ($sdff) from module spimemio (D = $flatten\xfer.$procmux$457_Y [3], Q = \xfer.count [3]).
Adding EN signal on $flatten\xfer.$procdff$795 ($dff) from module spimemio (D = $flatten\xfer.$2\next_ibuffer[7:0], Q = \xfer.ibuffer).
Adding EN signal on $flatten\xfer.$procdff$794 ($dff) from module spimemio (D = $flatten\xfer.$procmux$475_Y, Q = \xfer.obuffer).
Adding SRST signal on $flatten\xfer.$procdff$793 ($dff) from module spimemio (D = $flatten\xfer.$procmux$480_Y, Q = \xfer.xfer_ddr, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1149 ($sdff) from module spimemio (D = \xfer.din_ddr, Q = \xfer.xfer_ddr).
Adding SRST signal on $flatten\xfer.$procdff$792 ($dff) from module spimemio (D = $flatten\xfer.$procmux$485_Y, Q = \xfer.xfer_dspi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1151 ($sdff) from module spimemio (D = \xfer.din_dspi, Q = \xfer.xfer_dspi).
Adding SRST signal on $flatten\xfer.$procdff$791 ($dff) from module spimemio (D = $flatten\xfer.$procmux$493_Y, Q = \xfer.flash_clk, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1153 ($sdff) from module spimemio (D = $flatten\xfer.$procmux$493_Y, Q = \xfer.flash_clk).
Adding SRST signal on $flatten\xfer.$procdff$790 ($dff) from module spimemio (D = $flatten\xfer.$procmux$500_Y, Q = \xfer.flash_csb, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$1161 ($sdff) from module spimemio (D = 1'0, Q = \xfer.flash_csb).

25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..
Removed 72 unused cells and 104 unused wires.
<suppressed ~74 debug messages>

25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.
<suppressed ~10 debug messages>

25.9. Rerunning OPT passes. (Maybe there is more to do..)

25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spimemio.
Performed a total of 0 changes.

25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
<suppressed ~57 debug messages>
Removed a total of 19 cells.

25.13. Executing OPT_DFF pass (perform DFF optimizations).

25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..
Removed 0 unused cells and 19 unused wires.
<suppressed ~1 debug messages>

25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

25.16. Rerunning OPT passes. (Maybe there is more to do..)

25.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

25.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spimemio.
Performed a total of 0 changes.

25.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
Removed a total of 0 cells.

25.20. Executing OPT_DFF pass (perform DFF optimizations).

25.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..

25.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

25.23. Finished OPT passes. (There is nothing left to do.)

26. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 bits (of 4) from port B of cell spimemio.$eq$/openlane/designs/spimemio/src/spimemio.v:202$35 ($eq).
Removed top 2 bits (of 4) from port B of cell spimemio.$eq$/openlane/designs/spimemio/src/spimemio.v:203$37 ($eq).
Removed top 2 bits (of 4) from port B of cell spimemio.$eq$/openlane/designs/spimemio/src/spimemio.v:204$39 ($eq).
Removed top 1 bits (of 4) from port B of cell spimemio.$eq$/openlane/designs/spimemio/src/spimemio.v:205$41 ($eq).
Removed top 29 bits (of 32) from port B of cell spimemio.$add$/openlane/designs/spimemio/src/spimemio.v:207$43 ($add).
Removed top 7 bits (of 32) from port Y of cell spimemio.$add$/openlane/designs/spimemio/src/spimemio.v:207$43 ($add).
Removed top 8 bits (of 32) from mux cell spimemio.$ternary$/openlane/designs/spimemio/src/spimemio.v:207$45 ($mux).
Removed top 1 bits (of 8) from mux cell spimemio.$ternary$/openlane/designs/spimemio/src/spimemio.v:297$50 ($mux).
Removed top 3 bits (of 4) from port B of cell spimemio.$auto$opt_dff.cc:195:make_patterns_logic$1114 ($ne).
Removed top 2 bits (of 3) from port B of cell spimemio.$auto$fsm_map.cc:77:implement_pattern_cache$890 ($eq).
Removed top 1 bits (of 4) from port B of cell spimemio.$auto$fsm_map.cc:77:implement_pattern_cache$881 ($eq).
Removed top 2 bits (of 3) from port B of cell spimemio.$auto$fsm_map.cc:77:implement_pattern_cache$874 ($eq).
Removed top 1 bits (of 8) from port B of cell spimemio.$auto$opt_dff.cc:195:make_patterns_logic$1110 ($ne).
Removed top 1 bits (of 6) from port B of cell spimemio.$auto$opt_dff.cc:195:make_patterns_logic$1140 ($ne).
Removed top 1 bits (of 2) from port B of cell spimemio.$procmux$357_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell spimemio.$auto$opt_dff.cc:195:make_patterns_logic$1138 ($ne).
Removed top 1 bits (of 9) from port B of cell spimemio.$auto$opt_dff.cc:195:make_patterns_logic$1136 ($ne).
Removed top 1 bits (of 3) from port B of cell spimemio.$auto$fsm_map.cc:77:implement_pattern_cache$955 ($eq).
Removed top 1 bits (of 4) from port B of cell spimemio.$auto$fsm_map.cc:77:implement_pattern_cache$947 ($eq).
Removed top 1 bits (of 2) from port B of cell spimemio.$auto$opt_dff.cc:195:make_patterns_logic$1116 ($ne).
Removed top 1 bits (of 2) from port B of cell spimemio.$flatten\xfer.$procmux$514_CMP0 ($eq).
Removed top 28 bits (of 32) from mux cell spimemio.$flatten\xfer.$ternary$/openlane/designs/spimemio/src/spimemio.v:548$101 ($mux).
Removed top 2 bits (of 4) from port B of cell spimemio.$flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:505$84 ($sub).
Removed top 1 bits (of 4) from port B of cell spimemio.$flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:472$72 ($sub).
Removed top 3 bits (of 4) from port B of cell spimemio.$flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:452$65 ($sub).
Removed top 7 bits (of 32) from port B of cell spimemio.$ne$/openlane/designs/spimemio/src/spimemio.v:53$7 ($ne).
Removed top 7 bits (of 32) from wire spimemio.$add$/openlane/designs/spimemio/src/spimemio.v:207$43_Y.
Removed top 3 bits (of 4) from wire spimemio.$flatten\xfer.$reduce_or$/openlane/designs/spimemio/src/spimemio.v:452$64_Y.
Removed top 28 bits (of 32) from wire spimemio.$flatten\xfer.$ternary$/openlane/designs/spimemio/src/spimemio.v:548$101_Y.
Removed top 8 bits (of 32) from wire spimemio.$ternary$/openlane/designs/spimemio/src/spimemio.v:207$45_Y.

27. Executing PEEPOPT pass (run peephole optimizers).

28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

29. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module spimemio:
  creating $macc model for $add$/openlane/designs/spimemio/src/spimemio.v:207$43 ($add).
  creating $macc model for $flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:452$65 ($sub).
  creating $macc model for $flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:472$72 ($sub).
  creating $macc model for $flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:505$84 ($sub).
  creating $macc model for $flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:535$94 ($sub).
  creating $alu model for $macc $flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:535$94.
  creating $alu model for $macc $flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:505$84.
  creating $alu model for $macc $flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:472$72.
  creating $alu model for $macc $flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:452$65.
  creating $alu model for $macc $add$/openlane/designs/spimemio/src/spimemio.v:207$43.
  creating $alu cell for $add$/openlane/designs/spimemio/src/spimemio.v:207$43: $auto$alumacc.cc:485:replace_alu$1167
  creating $alu cell for $flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:452$65: $auto$alumacc.cc:485:replace_alu$1170
  creating $alu cell for $flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:472$72: $auto$alumacc.cc:485:replace_alu$1173
  creating $alu cell for $flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:505$84: $auto$alumacc.cc:485:replace_alu$1176
  creating $alu cell for $flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:535$94: $auto$alumacc.cc:485:replace_alu$1179
  created 5 $alu and 0 $macc cells.

30. Executing SHARE pass (SAT-based resource sharing).

31. Executing OPT pass (performing simple optimizations).

31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spimemio.
Performed a total of 0 changes.

31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
Removed a total of 0 cells.

31.6. Executing OPT_DFF pass (perform DFF optimizations).

31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

31.9. Rerunning OPT passes. (Maybe there is more to do..)

31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spimemio.
Performed a total of 0 changes.

31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
Removed a total of 0 cells.

31.13. Executing OPT_DFF pass (perform DFF optimizations).

31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..

31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

31.16. Finished OPT passes. (There is nothing left to do.)

32. Executing MEMORY pass.

32.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

32.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

32.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

32.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

32.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

32.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..

32.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

32.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

32.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..

32.10. Executing MEMORY_COLLECT pass (generating $mem cells).

33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..

34. Executing OPT pass (performing simple optimizations).

34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.
<suppressed ~54 debug messages>

34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

34.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$1025 ($dffe) from module spimemio (D = $auto$wreduce.cc:461:run$1166 [1:0], Q = \rd_addr [1:0]).

34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..
Removed 4 unused cells and 32 unused wires.
<suppressed ~5 debug messages>

34.5. Rerunning OPT passes. (Removed registers in this run.)

34.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.
<suppressed ~1 debug messages>

34.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
Removed a total of 0 cells.

34.8. Executing OPT_DFF pass (perform DFF optimizations).

34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..

34.10. Finished fast OPT passes.

35. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

36. Executing OPT pass (performing simple optimizations).

36.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

36.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
Removed a total of 0 cells.

36.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

36.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spimemio.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$1192: { $auto$opt_dff.cc:194:make_patterns_logic$1189 $auto$rtlil.cc:2461:Not$1007 $logic_and$/openlane/designs/spimemio/src/spimemio.v:205$42_Y }
    Consolidated identical input bits for $mux cell $flatten\xfer.$procmux$508:
      Old ports: A=\xfer.count, B={ $flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:505$84_Y [3:1] \xfer.count [0] }, Y=$flatten\xfer.$5\next_count[3:0]
      New ports: A=\xfer.count [3:1], B=$flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:505$84_Y [3:1], Y=$flatten\xfer.$5\next_count[3:0] [3:1]
      New connections: $flatten\xfer.$5\next_count[3:0] [0] = \xfer.count [0]
    Consolidated identical input bits for $mux cell $flatten\xfer.$procmux$549:
      Old ports: A=\xfer.count, B={ $flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:472$72_Y [3:2] \xfer.count [1:0] }, Y=$flatten\xfer.$4\next_count[3:0]
      New ports: A=\xfer.count [3:2], B=$flatten\xfer.$sub$/openlane/designs/spimemio/src/spimemio.v:472$72_Y [3:2], Y=$flatten\xfer.$4\next_count[3:0] [3:2]
      New connections: $flatten\xfer.$4\next_count[3:0] [1:0] = \xfer.count [1:0]
    New ctrl vector for $pmux cell $flatten\xfer.$procmux$637: { $flatten\xfer.$procmux$515_CMP $auto$opt_reduce.cc:134:opt_pmux$1195 }
    Consolidated identical input bits for $pmux cell $flatten\xfer.$procmux$647:
      Old ports: A={ \xfer.obuffer [5:0] 2'00 }, B={ \xfer.obuffer [6:0] 1'0 \xfer.obuffer [3:0] 4'0000 \xfer.obuffer [3:0] 4'0000 }, Y=\xfer.next_obuffer
      New ports: A={ \xfer.obuffer [5:0] 1'0 }, B={ \xfer.obuffer [6:0] \xfer.obuffer [3:0] 3'000 \xfer.obuffer [3:0] 3'000 }, Y=\xfer.next_obuffer [7:1]
      New connections: \xfer.next_obuffer [0] = 1'0
    New ctrl vector for $pmux cell $flatten\xfer.$procmux$647: { $flatten\xfer.$procmux$515_CMP $auto$opt_reduce.cc:134:opt_pmux$1197 }
    Consolidated identical input bits for $pmux cell $procmux$323:
      Old ports: A=4'0000, B=20'00000001001000110100, Y=$procmux$323_Y
      New ports: A=3'000, B=15'000001010011100, Y=$procmux$323_Y [2:0]
      New connections: $procmux$323_Y [3] = 1'0
    New ctrl vector for $pmux cell $procmux$323: { \state [8] \state [5] \state [11] \state [3] }
    Consolidated identical input bits for $pmux cell $procmux$354:
      Old ports: A=8'11101101, B=24'111010111011101100000011, Y=$procmux$354_Y
      New ports: A=5'10110, B=15'101010110100001, Y={ $procmux$354_Y [6] $procmux$354_Y [4:1] }
      New connections: { $procmux$354_Y [7] $procmux$354_Y [5] $procmux$354_Y [0] } = { $procmux$354_Y [3] $procmux$354_Y [3] 1'1 }
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/spimemio/src/spimemio.v:297$50:
      Old ports: A=7'1111111, B=7'0100101, Y=$ternary$/openlane/designs/spimemio/src/spimemio.v:297$50_Y [6:0]
      New ports: A=1'1, B=1'0, Y=$ternary$/openlane/designs/spimemio/src/spimemio.v:297$50_Y [1]
      New connections: { $ternary$/openlane/designs/spimemio/src/spimemio.v:297$50_Y [6:2] $ternary$/openlane/designs/spimemio/src/spimemio.v:297$50_Y [0] } = { $ternary$/openlane/designs/spimemio/src/spimemio.v:297$50_Y [1] 1'1 $ternary$/openlane/designs/spimemio/src/spimemio.v:297$50_Y [1] $ternary$/openlane/designs/spimemio/src/spimemio.v:297$50_Y [1] 2'11 }
  Optimizing cells in module \spimemio.
    Consolidated identical input bits for $mux cell $procmux$344:
      Old ports: A={ 1'1 $ternary$/openlane/designs/spimemio/src/spimemio.v:297$50_Y [6:0] }, B={ 4'0000 \config_dummy }, Y=$procmux$344_Y
      New ports: A={ 1'1 $ternary$/openlane/designs/spimemio/src/spimemio.v:297$50_Y [1] $ternary$/openlane/designs/spimemio/src/spimemio.v:297$50_Y [1] 1'1 $ternary$/openlane/designs/spimemio/src/spimemio.v:297$50_Y [1] 1'1 }, B={ 2'00 \config_dummy }, Y=$procmux$344_Y [5:0]
      New connections: $procmux$344_Y [7:6] = $procmux$344_Y [5:4]
  Optimizing cells in module \spimemio.
Performed a total of 11 changes.

36.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

36.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $pmux $procmux$230 in front of them:
        $procmux$228
        $procmux$252

36.7. Executing OPT_DFF pass (perform DFF optimizations).

36.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

36.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.
<suppressed ~2 debug messages>

36.10. Rerunning OPT passes. (Maybe there is more to do..)

36.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

36.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spimemio.
    New ctrl vector for $pmux cell $procmux$230: { $auto$opt_reduce.cc:134:opt_pmux$829 $auto$opt_reduce.cc:134:opt_pmux$1202 }
  Optimizing cells in module \spimemio.
Performed a total of 1 changes.

36.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
Removed a total of 0 cells.

36.14. Executing OPT_SHARE pass.

36.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$1132 ($dffe) from module spimemio (D = \din_data [0], Q = \xfer.obuffer [0], rval = 1'0).
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$1054 ($sdffe) from module spimemio.

36.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..

36.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

36.18. Rerunning OPT passes. (Maybe there is more to do..)

36.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

36.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spimemio.
Performed a total of 0 changes.

36.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
Removed a total of 0 cells.

36.22. Executing OPT_SHARE pass.

36.23. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$1086 ($sdffe) from module spimemio.

36.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..

36.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

36.26. Rerunning OPT passes. (Maybe there is more to do..)

36.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

36.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spimemio.
Performed a total of 0 changes.

36.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
Removed a total of 0 cells.

36.30. Executing OPT_SHARE pass.

36.31. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 3 on $flatten\xfer.$procdff$805 ($dff) from module spimemio.

36.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..

36.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

36.34. Rerunning OPT passes. (Maybe there is more to do..)

36.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

36.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spimemio.
Performed a total of 0 changes.

36.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
Removed a total of 0 cells.

36.38. Executing OPT_SHARE pass.

36.39. Executing OPT_DFF pass (perform DFF optimizations).

36.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..

36.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

36.42. Finished OPT passes. (There is nothing left to do.)

37. Executing TECHMAP pass (map to technology primitives).

37.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

37.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_90_alu for cells of type $alu.
Using template $paramod$16349e5f556ea87a576d7d9941c668f31b6ef10b\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using template $paramod$fedb90247e1daaa8b0af86a595f377181f141d27\_90_pmux for cells of type $pmux.
Using template $paramod$d7387fdb214042e5ef2d69a3f74948694b4bb65e\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$b756e651b7db7aeb455331d9a2df073db93fcc2e\_90_pmux for cells of type $pmux.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using template $paramod$ba698a254f9a5947e85cbe7beae6b161eefc5386\_90_alu for cells of type $alu.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010111 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~1243 debug messages>

38. Executing OPT pass (performing simple optimizations).

38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.
<suppressed ~377 debug messages>

38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
<suppressed ~282 debug messages>
Removed a total of 94 cells.

38.3. Executing OPT_DFF pass (perform DFF optimizations).

38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..
Removed 48 unused cells and 618 unused wires.
<suppressed ~49 debug messages>

38.5. Finished fast OPT passes.

39. Executing ABC pass (technology mapping using ABC).

39.1. Extracting gate netlist of module `\spimemio' to `<abc-temp-dir>/input.blif'..
Replacing 5 occurrences of constant undef bits with constant zero bits
Extracted 775 gates and 923 wires to a netlist network with 145 inputs and 118 outputs.

39.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

39.1.2. Re-integrating ABC results.
ABC RESULTS:              XNOR cells:       35
ABC RESULTS:               XOR cells:       45
ABC RESULTS:               NOT cells:       48
ABC RESULTS:             ORNOT cells:       28
ABC RESULTS:              NAND cells:       38
ABC RESULTS:               NOR cells:       25
ABC RESULTS:               AND cells:       47
ABC RESULTS:            ANDNOT cells:      177
ABC RESULTS:                OR cells:      202
ABC RESULTS:               MUX cells:       89
ABC RESULTS:        internal signals:      660
ABC RESULTS:           input signals:      145
ABC RESULTS:          output signals:      118
Removing temp directory.

40. Executing OPT pass (performing simple optimizations).

40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.
<suppressed ~46 debug messages>

40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

40.3. Executing OPT_DFF pass (perform DFF optimizations).

40.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..
Removed 3 unused cells and 562 unused wires.
<suppressed ~14 debug messages>

40.5. Finished fast OPT passes.

41. Executing HIERARCHY pass (managing design hierarchy).

41.1. Analyzing design hierarchy..
Top module:  \spimemio

41.2. Analyzing design hierarchy..
Top module:  \spimemio
Removed 0 unused modules.

42. Printing statistics.

=== spimemio ===

   Number of wires:                793
   Number of wire bits:           1071
   Number of public wires:         100
   Number of public wire bits:     359
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                903
     $_ANDNOT_                     177
     $_AND_                         47
     $_DFFE_PP_                    103
     $_DFF_N_                        4
     $_DFF_P_                       17
     $_MUX_                         89
     $_NAND_                        38
     $_NOR_                         24
     $_NOT_                         45
     $_ORNOT_                       28
     $_OR_                         201
     $_SDFFCE_PN0P_                  1
     $_SDFFCE_PP0P_                  2
     $_SDFFE_PN0P_                  31
     $_SDFFE_PN1P_                   3
     $_SDFFE_PP0P_                   6
     $_SDFF_PN0_                     3
     $_SDFF_PN1_                     3
     $_SDFF_PP0_                     1
     $_XNOR_                        35
     $_XOR_                         45

43. Executing CHECK pass (checking for obvious problems).
Checking module spimemio...
Found and reported 0 problems.

44. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/spimemio/runs/RUN_2023.12.03_10.14.21/tmp/synthesis/post_techmap.dot'.
Dumping module spimemio to page 1.

45. Executing SHARE pass (SAT-based resource sharing).

46. Executing OPT pass (performing simple optimizations).

46.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

46.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
Removed a total of 0 cells.

46.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

46.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spimemio.
Performed a total of 0 changes.

46.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
Removed a total of 0 cells.

46.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$2173 ($_SDFFE_PP0P_) from module spimemio (D = $abc$3433$new_n986, Q = \xfer.count [0]).

46.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

46.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

46.9. Rerunning OPT passes. (Maybe there is more to do..)

46.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

46.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spimemio.
Performed a total of 0 changes.

46.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spimemio'.
Removed a total of 0 cells.

46.13. Executing OPT_DFF pass (perform DFF optimizations).

46.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..

46.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio.

46.16. Finished OPT passes. (There is nothing left to do.)

47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..
Removed 0 unused cells and 29 unused wires.
<suppressed ~29 debug messages>

48. Printing statistics.

=== spimemio ===

   Number of wires:                766
   Number of wire bits:           1004
   Number of public wires:          71
   Number of public wire bits:     290
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                904
     $_ANDNOT_                     177
     $_AND_                         48
     $_DFFE_PP_                    103
     $_DFF_N_                        4
     $_DFF_P_                       17
     $_MUX_                         88
     $_NAND_                        38
     $_NOR_                         24
     $_NOT_                         46
     $_ORNOT_                       28
     $_OR_                         201
     $_SDFFCE_PN0P_                  1
     $_SDFFCE_PP0P_                  2
     $_SDFFE_PN0P_                  31
     $_SDFFE_PN1P_                   3
     $_SDFFE_PP0P_                   6
     $_SDFF_PN0_                     3
     $_SDFF_PN1_                     3
     $_SDFF_PP0_                     1
     $_XNOR_                        35
     $_XOR_                         45

mapping tbuf

49. Executing TECHMAP pass (map to technology primitives).

49.1. Executing Verilog-2005 frontend: /home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

49.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

50. Executing SIMPLEMAP pass (map simple cells to gate primitives).

51. Executing TECHMAP pass (map to technology primitives).

51.1. Executing Verilog-2005 frontend: /home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/vsduser/Desktop/work/tools/openlane_working_dir/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

51.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

52. Executing SIMPLEMAP pass (map simple cells to gate primitives).

53. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

53.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\spimemio':
  mapped 174 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

54. Printing statistics.

=== spimemio ===

   Number of wires:                966
   Number of wire bits:           1204
   Number of public wires:          71
   Number of public wire bits:     290
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1104
     $_ANDNOT_                     177
     $_AND_                         48
     $_MUX_                        284
     $_NAND_                        38
     $_NOR_                         24
     $_NOT_                         50
     $_ORNOT_                       28
     $_OR_                         201
     $_XNOR_                        35
     $_XOR_                         45
     sky130_fd_sc_hd__dfxtp_2      174

[INFO]: USING STRATEGY AREA 0

55. Executing ABC pass (technology mapping using ABC).

55.1. Extracting gate netlist of module `\spimemio' to `/tmp/yosys-abc-l7XplQ/input.blif'..
Extracted 930 gates and 1159 wires to a netlist network with 227 inputs and 185 outputs.

55.1.1. Executing ABC.
Running ABC command: "/build/bin/yosys-abc" -s -f /tmp/yosys-abc-l7XplQ/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-l7XplQ/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-l7XplQ/input.blif 
ABC: + read_lib -w /openlane/designs/spimemio/runs/RUN_2023.12.03_10.14.21/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.10 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/openlane/designs/spimemio/runs/RUN_2023.12.03_10.14.21/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.14 sec
ABC: Memory =    9.54 MB. Time =     0.14 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openlane/designs/spimemio/runs/RUN_2023.12.03_10.14.21/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /openlane/designs/spimemio/runs/RUN_2023.12.03_10.14.21/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + retime -D -D 1100000.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 1100000.0 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: + upsize -D 1100000.0 
ABC: Current delay (3212.89 ps) does not exceed the target delay (1100000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 1100000.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    781 ( 25.7 %)   Cap = 11.3 ff (  5.9 %)   Area =     6503.74 ( 74.3 %)   Delay =  3622.87 ps  (  6.3 %)               
ABC: Path  0 --      11 : 0    3 pi                       A =   0.00  Df =  51.3  -28.6 ps  S =  77.1 ps  Cin =  0.0 ff  Cout =  15.5 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     546 : 4    7 sky130_fd_sc_hd__or4_2   A =   8.76  Df = 759.5 -512.2 ps  S = 156.1 ps  Cin =  1.5 ff  Cout =  19.3 ff  Cmax = 310.4 ff  G = 1216  
ABC: Path  2 --     547 : 3    3 sky130_fd_sc_hd__a21o_2  A =   8.76  Df = 999.1 -610.1 ps  S =  55.9 ps  Cin =  2.4 ff  Cout =   8.1 ff  Cmax = 309.5 ff  G =  329  
ABC: Path  3 --     592 : 4    1 sky130_fd_sc_hd__or4_2   A =   8.76  Df =1646.5 -980.1 ps  S = 107.6 ps  Cin =  1.5 ff  Cout =   4.6 ff  Cmax = 310.4 ff  G =  296  
ABC: Path  4 --     594 : 3    6 sky130_fd_sc_hd__a21oi_2 A =   8.76  Df =1891.6-1153.2 ps  S = 224.9 ps  Cin =  4.6 ff  Cout =  16.5 ff  Cmax = 128.2 ff  G =  346  
ABC: Path  5 --     684 : 2    4 sky130_fd_sc_hd__and2b_2 A =   8.76  Df =2107.2-1143.0 ps  S =  79.2 ps  Cin =  1.6 ff  Cout =  12.3 ff  Cmax = 310.4 ff  G =  746  
ABC: Path  6 --     795 : 4    1 sky130_fd_sc_hd__or4bb_2 A =  12.51  Df =2618.7-1487.2 ps  S =  88.9 ps  Cin =  1.5 ff  Cout =   2.2 ff  Cmax = 312.2 ff  G =  141  
ABC: Path  7 --     796 : 1    8 sky130_fd_sc_hd__buf_1   A =   3.75  Df =2811.2-1432.3 ps  S = 293.8 ps  Cin =  2.1 ff  Cout =  24.5 ff  Cmax = 130.0 ff  G = 1117  
ABC: Path  8 --     814 : 1   10 sky130_fd_sc_hd__buf_1   A =   3.75  Df =3056.9-1308.6 ps  S = 396.2 ps  Cin =  2.1 ff  Cout =  33.5 ff  Cmax = 130.0 ff  G = 1528  
ABC: Path  9 --     815 : 3    1 sky130_fd_sc_hd__mux2_2  A =  11.26  Df =3403.9-1319.5 ps  S =  45.7 ps  Cin =  2.3 ff  Cout =   2.2 ff  Cmax = 297.6 ff  G =   92  
ABC: Path 10 --     816 : 1    1 sky130_fd_sc_hd__buf_1   A =   3.75  Df =3622.9-1217.6 ps  S = 396.4 ps  Cin =  2.1 ff  Cout =  33.4 ff  Cmax = 130.0 ff  G = 1590  
ABC: Start-point = pi10 (\xfer.dummy_count [3]).  End-point = po70 ($auto$rtlil.cc:2669:MuxGate$4265).
ABC: + print_stats -m 
ABC: netlist                       : i/o =  227/  185  lat =    0  nd =   781  edge =   1997  area =6503.66  delay =12.00  lev = 12
ABC: + write_blif /tmp/yosys-abc-l7XplQ/output.blif 

55.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand4_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__nor3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a311o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a21boi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a2111o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__o2111a_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__and4bb_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:       15
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:       36
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:       21
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:       34
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:       32
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:      142
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:       36
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:      165
ABC RESULTS:        internal signals:      747
ABC RESULTS:           input signals:      227
ABC RESULTS:          output signals:      185
Removing temp directory.

56. Executing SETUNDEF pass (replace undef values with defined constants).

57. Executing HILOMAP pass (mapping to constant drivers).

58. Executing SPLITNETS pass (splitting up multi-bit signals).

59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio..
Removed 3 unused cells and 1179 unused wires.
<suppressed ~10 debug messages>

60. Executing INSBUF pass (insert buffer cells for connected wires).
Add spimemio/$auto$insbuf.cc:97:execute$5392: \flash_io0_di -> \cfgreg_do [0]
Add spimemio/$auto$insbuf.cc:97:execute$5393: \flash_io1_di -> \cfgreg_do [1]
Add spimemio/$auto$insbuf.cc:97:execute$5394: \flash_io2_di -> \cfgreg_do [2]
Add spimemio/$auto$insbuf.cc:97:execute$5395: \flash_io3_di -> \cfgreg_do [3]
Add spimemio/$auto$insbuf.cc:97:execute$5396: \flash_clk -> \cfgreg_do [4]
Add spimemio/$auto$insbuf.cc:97:execute$5397: \flash_csb -> \cfgreg_do [5]
Add spimemio/$auto$insbuf.cc:97:execute$5398: \flash_io0_oe -> \cfgreg_do [8]
Add spimemio/$auto$insbuf.cc:97:execute$5399: \flash_io1_oe -> \cfgreg_do [9]
Add spimemio/$auto$insbuf.cc:97:execute$5400: \flash_io2_oe -> \cfgreg_do [10]
Add spimemio/$auto$insbuf.cc:97:execute$5401: \flash_io3_oe -> \cfgreg_do [11]
Add spimemio/$auto$insbuf.cc:97:execute$5402: \config_cont -> \cfgreg_do [20]
Add spimemio/$auto$insbuf.cc:97:execute$5403: \config_qspi -> \cfgreg_do [21]
Add spimemio/$auto$insbuf.cc:97:execute$5404: \config_ddr -> \cfgreg_do [22]
Add spimemio/$auto$insbuf.cc:97:execute$5405: \config_en -> \cfgreg_do [31]

61. Executing CHECK pass (checking for obvious problems).
Checking module spimemio...
Found and reported 0 problems.

62. Printing statistics.

=== spimemio ===

   Number of wires:                931
   Number of wire bits:           1050
   Number of public wires:         165
   Number of public wire bits:     284
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                983
     sky130_fd_sc_hd__a2111o_2       2
     sky130_fd_sc_hd__a2111oi_2      1
     sky130_fd_sc_hd__a211o_2       15
     sky130_fd_sc_hd__a21bo_2        5
     sky130_fd_sc_hd__a21boi_2       1
     sky130_fd_sc_hd__a21o_2        25
     sky130_fd_sc_hd__a21oi_2       11
     sky130_fd_sc_hd__a221o_2        7
     sky130_fd_sc_hd__a22o_2        34
     sky130_fd_sc_hd__a2bb2o_2       2
     sky130_fd_sc_hd__a311o_2        1
     sky130_fd_sc_hd__a31o_2        17
     sky130_fd_sc_hd__a32o_2         9
     sky130_fd_sc_hd__a41o_2         1
     sky130_fd_sc_hd__and2_2        36
     sky130_fd_sc_hd__and2b_2        7
     sky130_fd_sc_hd__and3_2        25
     sky130_fd_sc_hd__and3b_2        4
     sky130_fd_sc_hd__and4_2        16
     sky130_fd_sc_hd__and4b_2        4
     sky130_fd_sc_hd__and4bb_2       1
     sky130_fd_sc_hd__buf_1        165
     sky130_fd_sc_hd__buf_2         14
     sky130_fd_sc_hd__conb_1        14
     sky130_fd_sc_hd__dfxtp_2      174
     sky130_fd_sc_hd__inv_2         36
     sky130_fd_sc_hd__mux2_2       142
     sky130_fd_sc_hd__nand2_2       21
     sky130_fd_sc_hd__nand3_2        2
     sky130_fd_sc_hd__nand3b_2       1
     sky130_fd_sc_hd__nand4_2        1
     sky130_fd_sc_hd__nor2_2        32
     sky130_fd_sc_hd__nor3_2         1
     sky130_fd_sc_hd__nor3b_2        1
     sky130_fd_sc_hd__nor4_2         3
     sky130_fd_sc_hd__nor4b_2        1
     sky130_fd_sc_hd__o2111a_2       7
     sky130_fd_sc_hd__o211a_2        9
     sky130_fd_sc_hd__o211ai_2       1
     sky130_fd_sc_hd__o21a_2        13
     sky130_fd_sc_hd__o21ai_2        9
     sky130_fd_sc_hd__o21ba_2        1
     sky130_fd_sc_hd__o21bai_2       1
     sky130_fd_sc_hd__o221a_2        5
     sky130_fd_sc_hd__o22a_2         7
     sky130_fd_sc_hd__o2bb2a_2       3
     sky130_fd_sc_hd__o311a_2        2
     sky130_fd_sc_hd__o31a_2         2
     sky130_fd_sc_hd__o31ai_2        1
     sky130_fd_sc_hd__o32a_2         3
     sky130_fd_sc_hd__or2_2         16
     sky130_fd_sc_hd__or2b_2         5
     sky130_fd_sc_hd__or3_2         12
     sky130_fd_sc_hd__or3b_2         2
     sky130_fd_sc_hd__or4_2         11
     sky130_fd_sc_hd__or4b_2         3
     sky130_fd_sc_hd__or4bb_2        2
     sky130_fd_sc_hd__xnor2_2       18
     sky130_fd_sc_hd__xor2_2        18

   Chip area for module '\spimemio': 10327.404800

63. Executing Verilog backend.
Dumping module `\spimemio'.

End of script. Logfile hash: cda029c39d, CPU: user 1.67s system 1.01s, MEM: 51.09 MB peak
Yosys 0.34 (git sha1 4a1b5599258, gcc 8.3.1 -fPIC -Os)
Time spent: 45% 2x abc (2 sec), 12% 34x opt_expr (0 sec), ...
