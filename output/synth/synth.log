yosys> read_verilog ./module/alphasoc.v
1. Executing Verilog-2005 frontend: ./module/alphasoc.v
Parsing Verilog input from `./module/alphasoc.v' to AST representation.
Generating RTLIL representation for module `\alphasoc'.
Successfully finished Verilog frontend.

yosys> read_verilog -I./include ./module/alphacore.v

2. Executing Verilog-2005 frontend: ./module/alphacore.v
Parsing Verilog input from `./module/alphacore.v' to AST representation.
Generating RTLIL representation for module `\alphasoc_regs'.
Generating RTLIL representation for module `\alphacore'.
Successfully finished Verilog frontend.

yosys> read_verilog -I./include ./module/alphasoc_mem.v

3. Executing Verilog-2005 frontend: ./module/alphasoc_mem.v
Parsing Verilog input from `./module/alphasoc_mem.v' to AST representation.
Generating RTLIL representation for module `\alphasoc_mem'.
Successfully finished Verilog frontend.

yosys> read_verilog -I./include ./module/simpleuart.v

4. Executing Verilog-2005 frontend: ./module/simpleuart.v
Parsing Verilog input from `./module/simpleuart.v' to AST representation.
Generating RTLIL representation for module `\simpleuart'.
Successfully finished Verilog frontend.

yosys> read_verilog -I./include ./module/spimemio.v

5. Executing Verilog-2005 frontend: ./module/spimemio.v
Parsing Verilog input from `./module/spimemio.v' to AST representation.
Generating RTLIL representation for module `\spimemio'.
Generating RTLIL representation for module `\spimemio_xfer'.
Successfully finished Verilog frontend.

yosys> read_liberty -lib ./lib/sky130_fd_sc_hd__tt_025C_1v80.lib

6. Executing Liberty frontend: ./lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

yosys> synth -top alphasoc

7. Executing SYNTH pass.

7.1. Executing HIERARCHY pass (managing design hierarchy).

7.1.1. Analyzing design hierarchy..
Top module:  \alphasoc
Used module:     \alphasoc_mem
Used module:     \simpleuart
Used module:     \spimemio
Used module:         \spimemio_xfer
Used module:     \alphacore
Used module:         \alphasoc_regs
Parameter \WORDS = 256

7.1.2. Executing AST frontend in derive mode using pre-parsed AST for module `\alphasoc_mem'.
Parameter \WORDS = 256
Generating RTLIL representation for module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Parameter \PROGADDR_RESET = 1048576
Parameter \PROGADDR_IRQ = 0
Parameter \STACKADDR = 1024

7.1.3. Executing AST frontend in derive mode using pre-parsed AST for module `\alphacore'.
Parameter \PROGADDR_RESET = 1048576
Parameter \PROGADDR_IRQ = 0
Parameter \STACKADDR = 1024
Generating RTLIL representation for module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.

7.1.4. Analyzing design hierarchy..
Top module:  \alphasoc
Used module:     $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000
Used module:     \simpleuart
Used module:     \spimemio
Used module:         \spimemio_xfer
Used module:     $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore
Used module:         \alphasoc_regs

7.1.5. Analyzing design hierarchy..
Top module:  \alphasoc
Used module:     $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000
Used module:     \simpleuart
Used module:     \spimemio
Used module:         \spimemio_xfer
Used module:     $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore
Used module:         \alphasoc_regs
Removing unused module `\alphasoc_mem'.
Removing unused module `\alphacore'.
Removed 2 unused modules.

7.2. Executing PROC pass (convert processes to netlists).

7.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 16 empty switches in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
Found and cleaned up 1 empty switch in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1128$1336'.
Found and cleaned up 6 empty switches in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:296$989'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:296$989'.
Cleaned up 23 empty switches.

7.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 2 switch rules as full_case in process $proc$./module/spimemio.v:516$838 in module spimemio_xfer.
Marked 5 switch rules as full_case in process $proc$./module/spimemio.v:428$814 in module spimemio_xfer.
Marked 3 switch rules as full_case in process $proc$./module/spimemio.v:188$784 in module spimemio.
Marked 1 switch rules as full_case in process $proc$./module/spimemio.v:80$762 in module spimemio.
Marked 3 switch rules as full_case in process $proc$./module/simpleuart.v:90$742 in module simpleuart.
Marked 2 switch rules as full_case in process $proc$./module/simpleuart.v:47$733 in module simpleuart.
Marked 1 switch rules as full_case in process $proc$./module/simpleuart.v:36$731 in module simpleuart.
Marked 37 switch rules as full_case in process $proc$./module/alphacore.v:1142$1350 in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Marked 2 switch rules as full_case in process $proc$./module/alphacore.v:1083$1322 in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Marked 2 switch rules as full_case in process $proc$./module/alphacore.v:1069$1317 in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Marked 8 switch rules as full_case in process $proc$./module/alphacore.v:964$1286 in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Marked 3 switch rules as full_case in process $proc$./module/alphacore.v:636$1029 in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Marked 3 switch rules as full_case in process $proc$./module/alphacore.v:606$1027 in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Marked 2 switch rules as full_case in process $proc$./module/alphacore.v:575$1023 in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Marked 48 switch rules as full_case in process $proc$./module/alphacore.v:450$1022 in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Marked 4 switch rules as full_case in process $proc$./module/alphacore.v:315$998 in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Marked 1 switch rules as full_case in process $proc$./module/alphacore.v:180$961 in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Removed 2 dead cases from process $proc$./module/alphacore.v:151$958 in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Marked 2 switch rules as full_case in process $proc$./module/alphacore.v:151$958 in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Marked 1 switch rules as full_case in process $proc$./module/alphacore.v:140$953 in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Marked 4 switch rules as full_case in process $proc$./module/alphasoc_mem.v:12$858 in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Marked 1 switch rules as full_case in process $proc$./module/alphasoc_reg.v:12$45 in module alphasoc_regs.
Removed a total of 2 dead cases.

7.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 7 redundant assignments.
Promoted 91 assignments to connections.

7.2.4. Executing PROC_INIT pass (extract init attributes).

7.2.5. Executing PROC_ARST pass (detect async resets in processes).

7.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~248 debug messages>

7.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
     1/14: $0\last_fetch[0:0]
     2/14: $0\fetch[0:0]
     3/14: $0\xfer_tag[3:0]
     4/14: $0\xfer_rd[0:0]
     5/14: $0\xfer_qspi[0:0]
     6/14: $0\xfer_cont[0:0]
     7/14: $0\dummy_count[3:0]
     8/14: $0\count[3:0]
     9/14: $0\ibuffer[7:0]
    10/14: $0\obuffer[7:0]
    11/14: $0\xfer_ddr[0:0]
    12/14: $0\xfer_dspi[0:0]
    13/14: $0\flash_clk[0:0]
    14/14: $0\flash_csb[0:0]
Creating decoders for process `\spimemio_xfer.$proc$./module/spimemio.v:428$814'.
     1/33: $5\next_count[3:0]
     2/33: $5\next_obuffer[7:0]
     3/33: $5\next_ibuffer[7:0]
     4/33: $4\next_count[3:0]
     5/33: $4\next_obuffer[7:0]
     6/33: $4\next_ibuffer[7:0]
     7/33: $3\next_count[3:0]
     8/33: $3\next_obuffer[7:0]
     9/33: $3\next_ibuffer[7:0]
    10/33: $2\next_fetch[0:0]
    11/33: $2\next_count[3:0]
    12/33: $2\next_ibuffer[7:0]
    13/33: $2\next_obuffer[7:0]
    14/33: $2\flash_io0_do[0:0]
    15/33: $2\flash_io0_oe[0:0]
    16/33: $2\flash_io3_do[0:0]
    17/33: $2\flash_io2_do[0:0]
    18/33: $2\flash_io1_do[0:0]
    19/33: $2\flash_io3_oe[0:0]
    20/33: $2\flash_io2_oe[0:0]
    21/33: $2\flash_io1_oe[0:0]
    22/33: $1\next_fetch[0:0]
    23/33: $1\next_count[3:0]
    24/33: $1\next_ibuffer[7:0]
    25/33: $1\next_obuffer[7:0]
    26/33: $1\flash_io3_do[0:0]
    27/33: $1\flash_io2_do[0:0]
    28/33: $1\flash_io1_do[0:0]
    29/33: $1\flash_io0_do[0:0]
    30/33: $1\flash_io3_oe[0:0]
    31/33: $1\flash_io2_oe[0:0]
    32/33: $1\flash_io1_oe[0:0]
    33/33: $1\flash_io0_oe[0:0]
Creating decoders for process `\spimemio_xfer.$proc$./module/spimemio.v:417$805'.
Creating decoders for process `\spimemio.$proc$./module/spimemio.v:188$784'.
     1/17: $0\buffer[23:0] [23:16]
     2/17: $0\buffer[23:0] [15:8]
     3/17: $0\buffer[23:0] [7:0]
     4/17: $0\xfer_resetn[0:0]
     5/17: $0\state[3:0]
     6/17: $0\rd_inc[0:0]
     7/17: $0\rd_wait[0:0]
     8/17: $0\rd_valid[0:0]
     9/17: $0\rd_addr[23:0]
    10/17: $0\din_valid[0:0]
    11/17: $0\din_rd[0:0]
    12/17: $0\din_ddr[0:0]
    13/17: $0\din_qspi[0:0]
    14/17: $0\din_cont[0:0]
    15/17: $0\din_tag[3:0]
    16/17: $0\din_data[7:0]
    17/17: $0\rdata[31:0]
Creating decoders for process `\spimemio.$proc$./module/spimemio.v:132$766'.
Creating decoders for process `\spimemio.$proc$./module/spimemio.v:80$762'.
     1/10: $0\softreset[0:0]
     2/10: $0\config_do[3:0]
     3/10: $0\config_clk[0:0]
     4/10: $0\config_csb[0:0]
     5/10: $0\config_oe[3:0]
     6/10: $0\config_dummy[3:0]
     7/10: $0\config_cont[0:0]
     8/10: $0\config_qspi[0:0]
     9/10: $0\config_ddr[0:0]
    10/10: $0\config_en[0:0]
Creating decoders for process `\simpleuart.$proc$./module/simpleuart.v:90$742'.
     1/4: $0\send_divcnt[31:0]
     2/4: $0\send_dummy[0:0]
     3/4: $0\send_bitcnt[3:0]
     4/4: $0\send_pattern[9:0]
Creating decoders for process `\simpleuart.$proc$./module/simpleuart.v:47$733'.
     1/5: $0\recv_divcnt[31:0]
     2/5: $0\recv_buf_valid[0:0]
     3/5: $0\recv_buf_data[7:0]
     4/5: $0\recv_pattern[7:0]
     5/5: $0\recv_state[3:0]
Creating decoders for process `\simpleuart.$proc$./module/simpleuart.v:36$731'.
     1/4: $0\cfg_divider[31:0] [31:24]
     2/4: $0\cfg_divider[31:0] [23:16]
     3/4: $0\cfg_divider[31:0] [15:8]
     4/4: $0\cfg_divider[31:0] [7:0]
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
     1/82: $20\next_irq_pending[2:2]
     2/82: $19\next_irq_pending[2:2]
     3/82: $18\next_irq_pending[2:2]
     4/82: $17\next_irq_pending[2:2]
     5/82: $16\next_irq_pending[2:2]
     6/82: $15\next_irq_pending[2:2]
     7/82: $14\next_irq_pending[2:2]
     8/82: $13\next_irq_pending[0:0]
     9/82: $12\next_irq_pending[0:0]
    10/82: $11\next_irq_pending[31:0] [0]
    11/82: $11\next_irq_pending[31:0] [31:1]
    12/82: $2\next_irq_pending[31:0] [31:2]
    13/82: $3\set_mem_do_rdata[0:0]
    14/82: $2\next_irq_pending[31:0] [1]
    15/82: $3\set_mem_do_wdata[0:0]
    16/82: $2\next_irq_pending[31:0] [0]
    17/82: $4\set_mem_do_rinst[0:0]
    18/82: $3\set_mem_do_rinst[0:0]
    19/82: $4\set_mem_do_wdata[0:0]
    20/82: $9\next_irq_pending[1:1]
    21/82: $8\next_irq_pending[1:1]
    22/82: $7\next_irq_pending[1:1]
    23/82: $4\set_mem_do_rdata[0:0]
    24/82: $5\next_irq_pending[1:1]
    25/82: $4\next_irq_pending[1:1]
    26/82: $10\next_irq_pending[1:1]
    27/82: $5\set_mem_do_rinst[0:0]
    28/82: $6\next_irq_pending[1:1]
    29/82: $3\next_irq_pending[31:0]
    30/82: $3\current_pc[31:0]
    31/82: $2\current_pc[31:0]
    32/82: $2\set_mem_do_wdata[0:0]
    33/82: $2\set_mem_do_rdata[0:0]
    34/82: $2\set_mem_do_rinst[0:0]
    35/82: $1\next_irq_pending[31:0]
    36/82: $1\current_pc[31:0]
    37/82: $1\set_mem_do_wdata[0:0]
    38/82: $1\set_mem_do_rdata[0:0]
    39/82: $1\set_mem_do_rinst[0:0]
    40/82: $0\trace_data[35:0]
    41/82: $0\count_cycle[63:0]
    42/82: $0\trace_valid[0:0]
    43/82: $0\do_waitirq[0:0]
    44/82: $0\decoder_pseudo_trigger[0:0]
    45/82: $0\decoder_trigger[0:0]
    46/82: $0\alu_wait_2[0:0]
    47/82: $0\alu_wait[0:0]
    48/82: $0\reg_out[31:0]
    49/82: $0\reg_sh[4:0]
    50/82: $0\trap[0:0]
    51/82: $0\cpi_timeout[0:0]
    52/82: $0\latched_rd[4:0]
    53/82: $0\latched_is_lb[0:0]
    54/82: $0\latched_is_lh[0:0]
    55/82: $0\latched_is_lu[0:0]
    56/82: $0\latched_trace[0:0]
    57/82: $0\latched_compr[0:0]
    58/82: $0\latched_branch[0:0]
    59/82: $0\latched_stalu[0:0]
    60/82: $0\latched_store[0:0]
    61/82: $0\irq_state[1:0]
    62/82: $0\cpu_state[7:0]
    63/82: $0\dbg_rs2val_valid[0:0]
    64/82: $0\dbg_rs1val_valid[0:0]
    65/82: $0\dbg_rs2val[31:0]
    66/82: $0\dbg_rs1val[31:0]
    67/82: $0\mem_do_wdata[0:0]
    68/82: $0\mem_do_rdata[0:0]
    69/82: $0\mem_do_rinst[0:0]
    70/82: $0\mem_do_prefetch[0:0]
    71/82: $0\mem_wordsize[1:0]
    72/82: $0\timer[31:0]
    73/82: $0\irq_mask[31:0]
    74/82: $0\irq_active[0:0]
    75/82: $0\irq_delay[0:0]
    76/82: $0\reg_op2[31:0]
    77/82: $0\reg_op1[31:0]
    78/82: $0\reg_next_pc[31:0]
    79/82: $0\reg_pc[31:0]
    80/82: $0\count_instr[63:0]
    81/82: $0\eoi[31:0]
    82/82: $0\cpi_valid[0:0]
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1128$1336'.
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1083$1322'.
     1/4: $2\cpuregs_write[0:0]
     2/4: $2\cpuregs_wrdata[31:0]
     3/4: $1\cpuregs_wrdata[31:0]
     4/4: $1\cpuregs_write[0:0]
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1069$1317'.
     1/2: $2\clear_prefetched_high_word[0:0]
     2/2: $1\clear_prefetched_high_word[0:0]
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1067$1316'.
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1027$1298'.
     1/2: $1\alu_out[31:0]
     2/2: $1\alu_out_0[0:0]
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:964$1286'.
     1/8: $8\dbg_ascii_state[127:0]
     2/8: $7\dbg_ascii_state[127:0]
     3/8: $6\dbg_ascii_state[127:0]
     4/8: $5\dbg_ascii_state[127:0]
     5/8: $4\dbg_ascii_state[127:0]
     6/8: $3\dbg_ascii_state[127:0]
     7/8: $2\dbg_ascii_state[127:0]
     8/8: $1\dbg_ascii_state[127:0]
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
     1/77: $0\decoded_rs1[4:0] [4]
     2/77: $0\decoded_imm_j[31:0] [10]
     3/77: $0\decoded_imm_j[31:0] [7]
     4/77: $0\decoded_imm_j[31:0] [6]
     5/77: $0\decoded_imm_j[31:0] [3:1]
     6/77: $0\decoded_imm_j[31:0] [5]
     7/77: $0\decoded_imm_j[31:0] [9:8]
     8/77: $0\decoded_imm_j[31:0] [31:20]
     9/77: $0\decoded_imm_j[31:0] [4]
    10/77: $0\decoded_imm_j[31:0] [11]
    11/77: $0\decoded_imm_j[31:0] [0]
    12/77: $0\decoded_rs1[4:0] [3:0]
    13/77: $0\is_lui_auipc_jal_jalr_addi_add_sub[0:0]
    14/77: $0\is_alu_reg_reg[0:0]
    15/77: $0\is_alu_reg_imm[0:0]
    16/77: $0\is_beq_bne_blt_bge_bltu_bgeu[0:0]
    17/77: $0\is_sll_srl_sra[0:0]
    18/77: $0\is_sb_sh_sw[0:0]
    19/77: $0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0]
    20/77: $0\is_slli_srli_srai[0:0]
    21/77: $0\is_lb_lh_lw_lbu_lhu[0:0]
    22/77: $0\compressed_instr[0:0]
    23/77: $0\is_compare[0:0]
    24/77: $0\decoded_imm[31:0]
    25/77: $0\decoded_rs2[4:0]
    26/77: $0\decoded_imm_j[31:0] [19:12]
    27/77: $0\decoded_rd[4:0]
    28/77: $0\instr_timer[0:0]
    29/77: $0\instr_waitirq[0:0]
    30/77: $0\instr_maskirq[0:0]
    31/77: $0\instr_retirq[0:0]
    32/77: $0\instr_setq[0:0]
    33/77: $0\instr_getq[0:0]
    34/77: $0\instr_fence[0:0]
    35/77: $0\instr_ecall_ebreak[0:0]
    36/77: $0\instr_rdinstrh[0:0]
    37/77: $0\instr_rdinstr[0:0]
    38/77: $0\instr_rdcycleh[0:0]
    39/77: $0\instr_rdcycle[0:0]
    40/77: $0\instr_and[0:0]
    41/77: $0\instr_or[0:0]
    42/77: $0\instr_sra[0:0]
    43/77: $0\instr_srl[0:0]
    44/77: $0\instr_xor[0:0]
    45/77: $0\instr_sltu[0:0]
    46/77: $0\instr_slt[0:0]
    47/77: $0\instr_sll[0:0]
    48/77: $0\instr_sub[0:0]
    49/77: $0\instr_add[0:0]
    50/77: $0\instr_srai[0:0]
    51/77: $0\instr_srli[0:0]
    52/77: $0\instr_slli[0:0]
    53/77: $0\instr_andi[0:0]
    54/77: $0\instr_ori[0:0]
    55/77: $0\instr_xori[0:0]
    56/77: $0\instr_sltiu[0:0]
    57/77: $0\instr_slti[0:0]
    58/77: $0\instr_addi[0:0]
    59/77: $0\instr_sw[0:0]
    60/77: $0\instr_sh[0:0]
    61/77: $0\instr_sb[0:0]
    62/77: $0\instr_lhu[0:0]
    63/77: $0\instr_lbu[0:0]
    64/77: $0\instr_lw[0:0]
    65/77: $0\instr_lh[0:0]
    66/77: $0\instr_lb[0:0]
    67/77: $0\instr_bgeu[0:0]
    68/77: $0\instr_bltu[0:0]
    69/77: $0\instr_bge[0:0]
    70/77: $0\instr_blt[0:0]
    71/77: $0\instr_bne[0:0]
    72/77: $0\instr_beq[0:0]
    73/77: $0\instr_jalr[0:0]
    74/77: $0\instr_jal[0:0]
    75/77: $0\instr_auipc[0:0]
    76/77: $0\instr_lui[0:0]
    77/77: $0\cpi_insn[31:0]
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:606$1027'.
     1/13: $3\dbg_insn_opcode[31:0]
     2/13: $2\dbg_insn_rd[4:0]
     3/13: $2\dbg_insn_rs2[4:0]
     4/13: $2\dbg_insn_rs1[4:0]
     5/13: $2\dbg_insn_opcode[31:0]
     6/13: $2\dbg_insn_imm[31:0]
     7/13: $2\dbg_ascii_instr[63:0]
     8/13: $1\dbg_insn_rd[4:0]
     9/13: $1\dbg_insn_rs2[4:0]
    10/13: $1\dbg_insn_rs1[4:0]
    11/13: $1\dbg_insn_imm[31:0]
    12/13: $1\dbg_ascii_instr[63:0]
    13/13: $1\dbg_insn_opcode[31:0]
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
     1/8: $0\cached_insn_rd[4:0]
     2/8: $0\cached_insn_rs2[4:0]
     3/8: $0\cached_insn_rs1[4:0]
     4/8: $0\cached_insn_opcode[31:0]
     5/8: $0\cached_insn_imm[31:0]
     6/8: $0\cached_ascii_instr[63:0]
     7/8: $0\dbg_valid_insn[0:0]
     8/8: $0\dbg_insn_addr[31:0]
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:450$1022'.
     1/48: $48\new_ascii_instr[63:0]
     2/48: $47\new_ascii_instr[63:0]
     3/48: $46\new_ascii_instr[63:0]
     4/48: $45\new_ascii_instr[63:0]
     5/48: $44\new_ascii_instr[63:0]
     6/48: $43\new_ascii_instr[63:0]
     7/48: $42\new_ascii_instr[63:0]
     8/48: $41\new_ascii_instr[63:0]
     9/48: $40\new_ascii_instr[63:0]
    10/48: $39\new_ascii_instr[63:0]
    11/48: $38\new_ascii_instr[63:0]
    12/48: $37\new_ascii_instr[63:0]
    13/48: $36\new_ascii_instr[63:0]
    14/48: $35\new_ascii_instr[63:0]
    15/48: $34\new_ascii_instr[63:0]
    16/48: $33\new_ascii_instr[63:0]
    17/48: $32\new_ascii_instr[63:0]
    18/48: $31\new_ascii_instr[63:0]
    19/48: $30\new_ascii_instr[63:0]
    20/48: $29\new_ascii_instr[63:0]
    21/48: $28\new_ascii_instr[63:0]
    22/48: $27\new_ascii_instr[63:0]
    23/48: $26\new_ascii_instr[63:0]
    24/48: $25\new_ascii_instr[63:0]
    25/48: $24\new_ascii_instr[63:0]
    26/48: $23\new_ascii_instr[63:0]
    27/48: $22\new_ascii_instr[63:0]
    28/48: $21\new_ascii_instr[63:0]
    29/48: $20\new_ascii_instr[63:0]
    30/48: $19\new_ascii_instr[63:0]
    31/48: $18\new_ascii_instr[63:0]
    32/48: $17\new_ascii_instr[63:0]
    33/48: $16\new_ascii_instr[63:0]
    34/48: $15\new_ascii_instr[63:0]
    35/48: $14\new_ascii_instr[63:0]
    36/48: $13\new_ascii_instr[63:0]
    37/48: $12\new_ascii_instr[63:0]
    38/48: $11\new_ascii_instr[63:0]
    39/48: $10\new_ascii_instr[63:0]
    40/48: $9\new_ascii_instr[63:0]
    41/48: $8\new_ascii_instr[63:0]
    42/48: $7\new_ascii_instr[63:0]
    43/48: $6\new_ascii_instr[63:0]
    44/48: $5\new_ascii_instr[63:0]
    45/48: $4\new_ascii_instr[63:0]
    46/48: $3\new_ascii_instr[63:0]
    47/48: $2\new_ascii_instr[63:0]
    48/48: $1\new_ascii_instr[63:0]
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:315$998'.
     1/9: $0\mem_16bit_buffer[15:0]
     2/9: $0\prefetched_high_word[0:0]
     3/9: $0\mem_la_secondword[0:0]
     4/9: $0\mem_state[1:0]
     5/9: $0\mem_wstrb[3:0]
     6/9: $0\mem_wdata[31:0]
     7/9: $0\mem_addr[31:0]
     8/9: $0\mem_instr[0:0]
     9/9: $0\mem_valid[0:0]
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1017$1516'.
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:180$961'.
     1/9: $0\mem_rdata_q[31:0] [31]
     2/9: $0\mem_rdata_q[31:0] [7]
     3/9: $0\mem_rdata_q[31:0] [24:20]
     4/9: $0\mem_rdata_q[31:0] [19:15]
     5/9: $0\mem_rdata_q[31:0] [6:0]
     6/9: $0\mem_rdata_q[31:0] [14:12]
     7/9: $0\mem_rdata_q[31:0] [11:8]
     8/9: $0\mem_rdata_q[31:0] [30:25]
     9/9: $0\next_insn_opcode[31:0]
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:151$958'.
     1/5: $3\mem_rdata_word[31:0]
     2/5: $2\mem_rdata_word[31:0]
     3/5: $1\mem_rdata_word[31:0]
     4/5: $1\mem_la_wstrb[3:0]
     5/5: $1\mem_la_wdata[31:0]
Creating decoders for process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:140$953'.
     1/2: $0\last_mem_valid[0:0]
     2/2: $0\mem_la_firstword_reg[0:0]
Creating decoders for process `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
     1/12: $1$memwr$\mem$./module/alphasoc_mem.v:17$857_EN[31:0]$883
     2/12: $1$memwr$\mem$./module/alphasoc_mem.v:17$857_DATA[31:0]$882
     3/12: $1$memwr$\mem$./module/alphasoc_mem.v:17$857_ADDR[21:0]$881
     4/12: $1$memwr$\mem$./module/alphasoc_mem.v:16$856_EN[31:0]$880
     5/12: $1$memwr$\mem$./module/alphasoc_mem.v:16$856_DATA[31:0]$879
     6/12: $1$memwr$\mem$./module/alphasoc_mem.v:16$856_ADDR[21:0]$878
     7/12: $1$memwr$\mem$./module/alphasoc_mem.v:15$855_EN[31:0]$877
     8/12: $1$memwr$\mem$./module/alphasoc_mem.v:15$855_DATA[31:0]$876
     9/12: $1$memwr$\mem$./module/alphasoc_mem.v:15$855_ADDR[21:0]$875
    10/12: $1$memwr$\mem$./module/alphasoc_mem.v:14$854_EN[31:0]$874
    11/12: $1$memwr$\mem$./module/alphasoc_mem.v:14$854_DATA[31:0]$873
    12/12: $1$memwr$\mem$./module/alphasoc_mem.v:14$854_ADDR[21:0]$872
Creating decoders for process `\alphasoc_regs.$proc$./module/alphasoc_reg.v:12$45'.
     1/3: $1$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$51
     2/3: $1$memwr$\regs$./module/alphasoc_reg.v:13$44_DATA[31:0]$50
     3/3: $1$memwr$\regs$./module/alphasoc_reg.v:13$44_ADDR[4:0]$49
Creating decoders for process `\alphasoc.$proc$./module/alphasoc.v:160$34'.
Creating decoders for process `\alphasoc.$proc$./module/alphasoc.v:49$1'.

7.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\spimemio_xfer.\flash_io0_oe' from process `\spimemio_xfer.$proc$./module/spimemio.v:428$814'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_oe' from process `\spimemio_xfer.$proc$./module/spimemio.v:428$814'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_oe' from process `\spimemio_xfer.$proc$./module/spimemio.v:428$814'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_oe' from process `\spimemio_xfer.$proc$./module/spimemio.v:428$814'.
No latch inferred for signal `\spimemio_xfer.\flash_io0_do' from process `\spimemio_xfer.$proc$./module/spimemio.v:428$814'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_do' from process `\spimemio_xfer.$proc$./module/spimemio.v:428$814'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_do' from process `\spimemio_xfer.$proc$./module/spimemio.v:428$814'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_do' from process `\spimemio_xfer.$proc$./module/spimemio.v:428$814'.
No latch inferred for signal `\spimemio_xfer.\next_obuffer' from process `\spimemio_xfer.$proc$./module/spimemio.v:428$814'.
No latch inferred for signal `\spimemio_xfer.\next_ibuffer' from process `\spimemio_xfer.$proc$./module/spimemio.v:428$814'.
No latch inferred for signal `\spimemio_xfer.\next_count' from process `\spimemio_xfer.$proc$./module/spimemio.v:428$814'.
No latch inferred for signal `\spimemio_xfer.\next_fetch' from process `\spimemio_xfer.$proc$./module/spimemio.v:428$814'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpuregs_rs1' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1128$1336'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpuregs_rs2' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1128$1336'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\decoded_rs' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1128$1336'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpuregs_write' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1083$1322'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpuregs_wrdata' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1083$1322'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\clear_prefetched_high_word' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1069$1317'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\alu_out' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1027$1298'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\alu_out_0' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1027$1298'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\dbg_ascii_state' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:964$1286'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\dbg_insn_opcode' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:606$1027'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\dbg_ascii_instr' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:606$1027'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\dbg_insn_imm' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:606$1027'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\dbg_insn_rs1' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:606$1027'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\dbg_insn_rs2' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:606$1027'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\dbg_insn_rd' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:606$1027'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\new_ascii_instr' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:450$1022'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\alu_add_sub' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1017$1516'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\alu_shl' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1017$1516'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\alu_shr' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1017$1516'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\alu_eq' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1017$1516'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\alu_ltu' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1017$1516'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\alu_lts' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1017$1516'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_la_wdata' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:151$958'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_la_wstrb' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:151$958'.
No latch inferred for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_rdata_word' from process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:151$958'.
No latch inferred for signal `\alphasoc.\irq' from process `\alphasoc.$proc$./module/alphasoc.v:49$1'.

7.2.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\spimemio_xfer.\flash_csb' using process `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
  created $dff cell `$procdff$5069' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_clk' using process `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
  created $dff cell `$procdff$5070' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_dspi' using process `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
  created $dff cell `$procdff$5071' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr' using process `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
  created $dff cell `$procdff$5072' with positive edge clock.
Creating register for signal `\spimemio_xfer.\obuffer' using process `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
  created $dff cell `$procdff$5073' with positive edge clock.
Creating register for signal `\spimemio_xfer.\ibuffer' using process `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
  created $dff cell `$procdff$5074' with positive edge clock.
Creating register for signal `\spimemio_xfer.\count' using process `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
  created $dff cell `$procdff$5075' with positive edge clock.
Creating register for signal `\spimemio_xfer.\dummy_count' using process `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
  created $dff cell `$procdff$5076' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_cont' using process `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
  created $dff cell `$procdff$5077' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_qspi' using process `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
  created $dff cell `$procdff$5078' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_rd' using process `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
  created $dff cell `$procdff$5079' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag' using process `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
  created $dff cell `$procdff$5080' with positive edge clock.
Creating register for signal `\spimemio_xfer.\fetch' using process `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
  created $dff cell `$procdff$5081' with positive edge clock.
Creating register for signal `\spimemio_xfer.\last_fetch' using process `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
  created $dff cell `$procdff$5082' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr_q' using process `\spimemio_xfer.$proc$./module/spimemio.v:417$805'.
  created $dff cell `$procdff$5083' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag_q' using process `\spimemio_xfer.$proc$./module/spimemio.v:417$805'.
  created $dff cell `$procdff$5084' with positive edge clock.
Creating register for signal `\spimemio.\rdata' using process `\spimemio.$proc$./module/spimemio.v:188$784'.
  created $dff cell `$procdff$5085' with positive edge clock.
Creating register for signal `\spimemio.\xfer_resetn' using process `\spimemio.$proc$./module/spimemio.v:188$784'.
  created $dff cell `$procdff$5086' with positive edge clock.
Creating register for signal `\spimemio.\din_valid' using process `\spimemio.$proc$./module/spimemio.v:188$784'.
  created $dff cell `$procdff$5087' with positive edge clock.
Creating register for signal `\spimemio.\din_data' using process `\spimemio.$proc$./module/spimemio.v:188$784'.
  created $dff cell `$procdff$5088' with positive edge clock.
Creating register for signal `\spimemio.\din_tag' using process `\spimemio.$proc$./module/spimemio.v:188$784'.
  created $dff cell `$procdff$5089' with positive edge clock.
Creating register for signal `\spimemio.\din_cont' using process `\spimemio.$proc$./module/spimemio.v:188$784'.
  created $dff cell `$procdff$5090' with positive edge clock.
Creating register for signal `\spimemio.\din_qspi' using process `\spimemio.$proc$./module/spimemio.v:188$784'.
  created $dff cell `$procdff$5091' with positive edge clock.
Creating register for signal `\spimemio.\din_ddr' using process `\spimemio.$proc$./module/spimemio.v:188$784'.
  created $dff cell `$procdff$5092' with positive edge clock.
Creating register for signal `\spimemio.\din_rd' using process `\spimemio.$proc$./module/spimemio.v:188$784'.
  created $dff cell `$procdff$5093' with positive edge clock.
Creating register for signal `\spimemio.\buffer' using process `\spimemio.$proc$./module/spimemio.v:188$784'.
  created $dff cell `$procdff$5094' with positive edge clock.
Creating register for signal `\spimemio.\rd_addr' using process `\spimemio.$proc$./module/spimemio.v:188$784'.
  created $dff cell `$procdff$5095' with positive edge clock.
Creating register for signal `\spimemio.\rd_valid' using process `\spimemio.$proc$./module/spimemio.v:188$784'.
  created $dff cell `$procdff$5096' with positive edge clock.
Creating register for signal `\spimemio.\rd_wait' using process `\spimemio.$proc$./module/spimemio.v:188$784'.
  created $dff cell `$procdff$5097' with positive edge clock.
Creating register for signal `\spimemio.\rd_inc' using process `\spimemio.$proc$./module/spimemio.v:188$784'.
  created $dff cell `$procdff$5098' with positive edge clock.
Creating register for signal `\spimemio.\state' using process `\spimemio.$proc$./module/spimemio.v:188$784'.
  created $dff cell `$procdff$5099' with positive edge clock.
Creating register for signal `\spimemio.\xfer_io0_90' using process `\spimemio.$proc$./module/spimemio.v:132$766'.
  created $dff cell `$procdff$5100' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io1_90' using process `\spimemio.$proc$./module/spimemio.v:132$766'.
  created $dff cell `$procdff$5101' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io2_90' using process `\spimemio.$proc$./module/spimemio.v:132$766'.
  created $dff cell `$procdff$5102' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io3_90' using process `\spimemio.$proc$./module/spimemio.v:132$766'.
  created $dff cell `$procdff$5103' with negative edge clock.
Creating register for signal `\spimemio.\softreset' using process `\spimemio.$proc$./module/spimemio.v:80$762'.
  created $dff cell `$procdff$5104' with positive edge clock.
Creating register for signal `\spimemio.\config_en' using process `\spimemio.$proc$./module/spimemio.v:80$762'.
  created $dff cell `$procdff$5105' with positive edge clock.
Creating register for signal `\spimemio.\config_ddr' using process `\spimemio.$proc$./module/spimemio.v:80$762'.
  created $dff cell `$procdff$5106' with positive edge clock.
Creating register for signal `\spimemio.\config_qspi' using process `\spimemio.$proc$./module/spimemio.v:80$762'.
  created $dff cell `$procdff$5107' with positive edge clock.
Creating register for signal `\spimemio.\config_cont' using process `\spimemio.$proc$./module/spimemio.v:80$762'.
  created $dff cell `$procdff$5108' with positive edge clock.
Creating register for signal `\spimemio.\config_dummy' using process `\spimemio.$proc$./module/spimemio.v:80$762'.
  created $dff cell `$procdff$5109' with positive edge clock.
Creating register for signal `\spimemio.\config_oe' using process `\spimemio.$proc$./module/spimemio.v:80$762'.
  created $dff cell `$procdff$5110' with positive edge clock.
Creating register for signal `\spimemio.\config_csb' using process `\spimemio.$proc$./module/spimemio.v:80$762'.
  created $dff cell `$procdff$5111' with positive edge clock.
Creating register for signal `\spimemio.\config_clk' using process `\spimemio.$proc$./module/spimemio.v:80$762'.
  created $dff cell `$procdff$5112' with positive edge clock.
Creating register for signal `\spimemio.\config_do' using process `\spimemio.$proc$./module/spimemio.v:80$762'.
  created $dff cell `$procdff$5113' with positive edge clock.
Creating register for signal `\simpleuart.\send_pattern' using process `\simpleuart.$proc$./module/simpleuart.v:90$742'.
  created $dff cell `$procdff$5114' with positive edge clock.
Creating register for signal `\simpleuart.\send_bitcnt' using process `\simpleuart.$proc$./module/simpleuart.v:90$742'.
  created $dff cell `$procdff$5115' with positive edge clock.
Creating register for signal `\simpleuart.\send_divcnt' using process `\simpleuart.$proc$./module/simpleuart.v:90$742'.
  created $dff cell `$procdff$5116' with positive edge clock.
Creating register for signal `\simpleuart.\send_dummy' using process `\simpleuart.$proc$./module/simpleuart.v:90$742'.
  created $dff cell `$procdff$5117' with positive edge clock.
Creating register for signal `\simpleuart.\recv_state' using process `\simpleuart.$proc$./module/simpleuart.v:47$733'.
  created $dff cell `$procdff$5118' with positive edge clock.
Creating register for signal `\simpleuart.\recv_divcnt' using process `\simpleuart.$proc$./module/simpleuart.v:47$733'.
  created $dff cell `$procdff$5119' with positive edge clock.
Creating register for signal `\simpleuart.\recv_pattern' using process `\simpleuart.$proc$./module/simpleuart.v:47$733'.
  created $dff cell `$procdff$5120' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_data' using process `\simpleuart.$proc$./module/simpleuart.v:47$733'.
  created $dff cell `$procdff$5121' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_valid' using process `\simpleuart.$proc$./module/simpleuart.v:47$733'.
  created $dff cell `$procdff$5122' with positive edge clock.
Creating register for signal `\simpleuart.\cfg_divider' using process `\simpleuart.$proc$./module/simpleuart.v:36$731'.
  created $dff cell `$procdff$5123' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\trap' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5124' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_valid' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5125' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\eoi' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5126' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\trace_valid' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5127' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\trace_data' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5128' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\count_cycle' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5129' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\count_instr' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5130' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\reg_pc' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5131' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\reg_next_pc' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5132' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\reg_op1' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5133' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\reg_op2' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5134' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\reg_out' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5135' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\reg_sh' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5136' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\irq_delay' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5137' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\irq_active' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5138' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\irq_mask' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5139' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\irq_pending' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5140' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\timer' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5141' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_wordsize' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5142' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_do_prefetch' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5143' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_do_rinst' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5144' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_do_rdata' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5145' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_do_wdata' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5146' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\decoder_trigger' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5147' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\decoder_trigger_q' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5148' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\decoder_pseudo_trigger' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5149' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\decoder_pseudo_trigger_q' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5150' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\dbg_rs1val' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5151' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\dbg_rs2val' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5152' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\dbg_rs1val_valid' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5153' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\dbg_rs2val_valid' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5154' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpu_state' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5155' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\irq_state' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5156' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\set_mem_do_rinst' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5157' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\set_mem_do_rdata' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5158' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\set_mem_do_wdata' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5159' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\latched_store' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5160' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\latched_stalu' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5161' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\latched_branch' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5162' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\latched_compr' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5163' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\latched_trace' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5164' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\latched_is_lu' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5165' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\latched_is_lh' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5166' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\latched_is_lb' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5167' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\latched_rd' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5168' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\current_pc' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5169' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_timeout' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5170' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\next_irq_pending' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5171' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\do_waitirq' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5172' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\alu_out_q' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5173' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\alu_out_0_q' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5174' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\alu_wait' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5175' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\alu_wait_2' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
  created $dff cell `$procdff$5176' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\clear_prefetched_high_word_q' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1067$1316'.
  created $dff cell `$procdff$5177' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_insn' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5178' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_lui' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5179' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_auipc' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5180' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_jal' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5181' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_jalr' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5182' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_beq' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5183' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_bne' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5184' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_blt' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5185' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_bge' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5186' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_bltu' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5187' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_bgeu' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5188' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_lb' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5189' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_lh' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5190' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_lw' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5191' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_lbu' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5192' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_lhu' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5193' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_sb' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5194' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_sh' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5195' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_sw' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5196' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_addi' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5197' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_slti' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5198' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_sltiu' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5199' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_xori' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5200' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_ori' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5201' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_andi' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5202' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_slli' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5203' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_srli' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5204' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_srai' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5205' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_add' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5206' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_sub' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5207' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_sll' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5208' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_slt' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5209' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_sltu' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5210' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_xor' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5211' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_srl' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5212' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_sra' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5213' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_or' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5214' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_and' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5215' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_rdcycle' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5216' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_rdcycleh' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5217' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_rdinstr' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5218' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_rdinstrh' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5219' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_ecall_ebreak' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5220' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_fence' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5221' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_getq' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5222' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_setq' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5223' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_retirq' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5224' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_maskirq' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5225' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_waitirq' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5226' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\instr_timer' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5227' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\decoded_rd' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5228' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\decoded_rs1' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5229' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\decoded_rs2' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5230' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\decoded_imm' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5231' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\decoded_imm_j' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5232' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\compressed_instr' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5233' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\is_lui_auipc_jal' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5234' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\is_lb_lh_lw_lbu_lhu' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5235' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\is_slli_srli_srai' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5236' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\is_jalr_addi_slti_sltiu_xori_ori_andi' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5237' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\is_sb_sh_sw' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5238' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\is_sll_srl_sra' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5239' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\is_lui_auipc_jal_jalr_addi_add_sub' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5240' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\is_slti_blt_slt' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5241' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\is_sltiu_bltu_sltu' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5242' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\is_beq_bne_blt_bge_bltu_bgeu' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5243' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\is_lbu_lhu_lw' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5244' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\is_alu_reg_imm' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5245' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\is_alu_reg_reg' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5246' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\is_compare' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
  created $dff cell `$procdff$5247' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\dbg_insn_addr' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
  created $dff cell `$procdff$5248' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\q_ascii_instr' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
  created $dff cell `$procdff$5249' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\q_insn_imm' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
  created $dff cell `$procdff$5250' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\q_insn_opcode' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
  created $dff cell `$procdff$5251' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\q_insn_rs1' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
  created $dff cell `$procdff$5252' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\q_insn_rs2' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
  created $dff cell `$procdff$5253' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\q_insn_rd' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
  created $dff cell `$procdff$5254' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\dbg_next' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
  created $dff cell `$procdff$5255' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\dbg_valid_insn' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
  created $dff cell `$procdff$5256' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cached_ascii_instr' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
  created $dff cell `$procdff$5257' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cached_insn_imm' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
  created $dff cell `$procdff$5258' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cached_insn_opcode' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
  created $dff cell `$procdff$5259' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cached_insn_rs1' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
  created $dff cell `$procdff$5260' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cached_insn_rs2' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
  created $dff cell `$procdff$5261' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cached_insn_rd' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
  created $dff cell `$procdff$5262' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_valid' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:315$998'.
  created $dff cell `$procdff$5263' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_instr' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:315$998'.
  created $dff cell `$procdff$5264' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_addr' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:315$998'.
  created $dff cell `$procdff$5265' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_wdata' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:315$998'.
  created $dff cell `$procdff$5266' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_wstrb' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:315$998'.
  created $dff cell `$procdff$5267' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_state' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:315$998'.
  created $dff cell `$procdff$5268' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_la_secondword' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:315$998'.
  created $dff cell `$procdff$5269' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\prefetched_high_word' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:315$998'.
  created $dff cell `$procdff$5270' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_16bit_buffer' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:315$998'.
  created $dff cell `$procdff$5271' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\next_insn_opcode' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:180$961'.
  created $dff cell `$procdff$5272' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_rdata_q' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:180$961'.
  created $dff cell `$procdff$5273' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\mem_la_firstword_reg' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:140$953'.
  created $dff cell `$procdff$5274' with positive edge clock.
Creating register for signal `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\last_mem_valid' using process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:140$953'.
  created $dff cell `$procdff$5275' with positive edge clock.
Creating register for signal `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.\rdata' using process `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
  created $dff cell `$procdff$5276' with positive edge clock.
Creating register for signal `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$memwr$\mem$./module/alphasoc_mem.v:14$854_ADDR' using process `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
  created $dff cell `$procdff$5277' with positive edge clock.
Creating register for signal `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$memwr$\mem$./module/alphasoc_mem.v:14$854_DATA' using process `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
  created $dff cell `$procdff$5278' with positive edge clock.
Creating register for signal `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$memwr$\mem$./module/alphasoc_mem.v:14$854_EN' using process `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
  created $dff cell `$procdff$5279' with positive edge clock.
Creating register for signal `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$memwr$\mem$./module/alphasoc_mem.v:15$855_ADDR' using process `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
  created $dff cell `$procdff$5280' with positive edge clock.
Creating register for signal `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$memwr$\mem$./module/alphasoc_mem.v:15$855_DATA' using process `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
  created $dff cell `$procdff$5281' with positive edge clock.
Creating register for signal `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$memwr$\mem$./module/alphasoc_mem.v:15$855_EN' using process `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
  created $dff cell `$procdff$5282' with positive edge clock.
Creating register for signal `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$memwr$\mem$./module/alphasoc_mem.v:16$856_ADDR' using process `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
  created $dff cell `$procdff$5283' with positive edge clock.
Creating register for signal `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$memwr$\mem$./module/alphasoc_mem.v:16$856_DATA' using process `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
  created $dff cell `$procdff$5284' with positive edge clock.
Creating register for signal `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$memwr$\mem$./module/alphasoc_mem.v:16$856_EN' using process `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
  created $dff cell `$procdff$5285' with positive edge clock.
Creating register for signal `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$memwr$\mem$./module/alphasoc_mem.v:17$857_ADDR' using process `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
  created $dff cell `$procdff$5286' with positive edge clock.
Creating register for signal `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$memwr$\mem$./module/alphasoc_mem.v:17$857_DATA' using process `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
  created $dff cell `$procdff$5287' with positive edge clock.
Creating register for signal `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$memwr$\mem$./module/alphasoc_mem.v:17$857_EN' using process `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
  created $dff cell `$procdff$5288' with positive edge clock.
Creating register for signal `\alphasoc_regs.$memwr$\regs$./module/alphasoc_reg.v:13$44_ADDR' using process `\alphasoc_regs.$proc$./module/alphasoc_reg.v:12$45'.
  created $dff cell `$procdff$5289' with positive edge clock.
Creating register for signal `\alphasoc_regs.$memwr$\regs$./module/alphasoc_reg.v:13$44_DATA' using process `\alphasoc_regs.$proc$./module/alphasoc_reg.v:12$45'.
  created $dff cell `$procdff$5290' with positive edge clock.
Creating register for signal `\alphasoc_regs.$memwr$\regs$./module/alphasoc_reg.v:13$44_EN' using process `\alphasoc_regs.$proc$./module/alphasoc_reg.v:12$45'.
  created $dff cell `$procdff$5291' with positive edge clock.
Creating register for signal `\alphasoc.\ram_ready' using process `\alphasoc.$proc$./module/alphasoc.v:160$34'.
  created $dff cell `$procdff$5292' with positive edge clock.

7.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

7.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 4 empty switches in `\spimemio_xfer.$proc$./module/spimemio.v:516$838'.
Removing empty process `spimemio_xfer.$proc$./module/spimemio.v:516$838'.
Found and cleaned up 5 empty switches in `\spimemio_xfer.$proc$./module/spimemio.v:428$814'.
Removing empty process `spimemio_xfer.$proc$./module/spimemio.v:428$814'.
Removing empty process `spimemio_xfer.$proc$./module/spimemio.v:417$805'.
Found and cleaned up 25 empty switches in `\spimemio.$proc$./module/spimemio.v:188$784'.
Removing empty process `spimemio.$proc$./module/spimemio.v:188$784'.
Removing empty process `spimemio.$proc$./module/spimemio.v:132$766'.
Found and cleaned up 5 empty switches in `\spimemio.$proc$./module/spimemio.v:80$762'.
Removing empty process `spimemio.$proc$./module/spimemio.v:80$762'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$./module/simpleuart.v:90$742'.
Removing empty process `simpleuart.$proc$./module/simpleuart.v:90$742'.
Found and cleaned up 7 empty switches in `\simpleuart.$proc$./module/simpleuart.v:47$733'.
Removing empty process `simpleuart.$proc$./module/simpleuart.v:47$733'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$./module/simpleuart.v:36$731'.
Removing empty process `simpleuart.$proc$./module/simpleuart.v:36$731'.
Found and cleaned up 55 empty switches in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1142$1350'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1128$1336'.
Found and cleaned up 2 empty switches in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1083$1322'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1083$1322'.
Found and cleaned up 2 empty switches in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1069$1317'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1069$1317'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1067$1316'.
Found and cleaned up 2 empty switches in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1027$1298'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1027$1298'.
Found and cleaned up 8 empty switches in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:964$1286'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:964$1286'.
Found and cleaned up 22 empty switches in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:636$1029'.
Found and cleaned up 3 empty switches in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:606$1027'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:606$1027'.
Found and cleaned up 5 empty switches in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:575$1023'.
Found and cleaned up 48 empty switches in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:450$1022'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:450$1022'.
Found and cleaned up 16 empty switches in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:315$998'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:315$998'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:1017$1516'.
Found and cleaned up 19 empty switches in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:180$961'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:180$961'.
Found and cleaned up 3 empty switches in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:151$958'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:151$958'.
Found and cleaned up 2 empty switches in `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:140$953'.
Removing empty process `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$proc$./module/alphacore.v:140$953'.
Found and cleaned up 4 empty switches in `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
Removing empty process `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$proc$./module/alphasoc_mem.v:12$858'.
Found and cleaned up 1 empty switch in `\alphasoc_regs.$proc$./module/alphasoc_reg.v:12$45'.
Removing empty process `alphasoc_regs.$proc$./module/alphasoc_reg.v:12$45'.
Removing empty process `alphasoc.$proc$./module/alphasoc.v:160$34'.
Removing empty process `alphasoc.$proc$./module/alphasoc.v:49$1'.
Cleaned up 248 empty switches.

7.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio_xfer.
<suppressed ~33 debug messages>
Optimizing module spimemio.
<suppressed ~15 debug messages>
Optimizing module simpleuart.
<suppressed ~17 debug messages>
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
<suppressed ~481 debug messages>
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc_regs.
Optimizing module alphasoc.

7.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module spimemio_xfer.
Optimizing module spimemio.
Optimizing module simpleuart.
<suppressed ~2 debug messages>
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc_regs.
Optimizing module alphasoc.

7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spimemio_xfer..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \alphasoc..
Removed 249 unused cells and 1859 unused wires.
<suppressed ~304 debug messages>

7.5. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore...
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_wr is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [31] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [30] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [29] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [28] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [27] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [26] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [25] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [24] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [23] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [22] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [21] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [20] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [19] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [18] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [17] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [16] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [15] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [14] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [13] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [12] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [11] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [10] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [9] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [8] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [7] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [6] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [5] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [4] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [3] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [2] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [1] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_rd [0] is used but has no driver.
Warning: Wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.\cpi_int_ready is used but has no driver.
Checking module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000...
Checking module alphasoc...
Checking module alphasoc_regs...
Checking module simpleuart...
Checking module spimemio...
Checking module spimemio_xfer...
Found and reported 34 problems.

7.6. Executing OPT pass (performing simple optimizations).

7.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
Optimizing module spimemio_xfer.

7.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
<suppressed ~1380 debug messages>
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
<suppressed ~15 debug messages>
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
<suppressed ~30 debug messages>
Finding identical cells in module `\spimemio'.
<suppressed ~117 debug messages>
Finding identical cells in module `\spimemio_xfer'.
<suppressed ~177 debug messages>
Removed a total of 573 cells.

7.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$2307.
    dead port 2/2 on $mux $procmux$2317.
    dead port 2/2 on $mux $procmux$2319.
    dead port 2/2 on $mux $procmux$2325.
    dead port 2/2 on $mux $procmux$2332.
    dead port 2/2 on $mux $procmux$2334.
    dead port 2/2 on $mux $procmux$2340.
    dead port 2/2 on $mux $procmux$2349.
    dead port 2/2 on $mux $procmux$2369.
    dead port 2/2 on $mux $procmux$2375.
    dead port 2/2 on $mux $procmux$2378.
    dead port 2/2 on $mux $procmux$2391.
    dead port 2/2 on $mux $procmux$2398.
    dead port 2/2 on $mux $procmux$2401.
    dead port 2/2 on $mux $procmux$2414.
    dead port 2/2 on $mux $procmux$2426.
    dead port 2/2 on $mux $procmux$2429.
    dead port 2/2 on $mux $procmux$2438.
    dead port 2/2 on $mux $procmux$2441.
    dead port 2/2 on $mux $procmux$2449.
    dead port 2/2 on $mux $procmux$2451.
    dead port 2/2 on $mux $procmux$2454.
    dead port 1/2 on $mux $procmux$2468.
    dead port 2/2 on $mux $procmux$2470.
    dead port 2/2 on $mux $procmux$2472.
    dead port 2/2 on $mux $procmux$2475.
    dead port 2/2 on $mux $procmux$2488.
    dead port 2/2 on $mux $procmux$2490.
    dead port 2/2 on $mux $procmux$2493.
    dead port 2/2 on $mux $procmux$2505.
    dead port 2/2 on $mux $procmux$2508.
    dead port 2/2 on $mux $procmux$2515.
    dead port 2/2 on $mux $procmux$2517.
    dead port 2/2 on $mux $procmux$2520.
    dead port 2/2 on $mux $procmux$2539.
    dead port 2/2 on $mux $procmux$2541.
    dead port 2/2 on $mux $procmux$2544.
    dead port 2/2 on $mux $procmux$2565.
    dead port 2/2 on $mux $procmux$2568.
    dead port 2/2 on $mux $procmux$2582.
    dead port 1/2 on $mux $procmux$2585.
    dead port 2/2 on $mux $procmux$2587.
    dead port 2/2 on $mux $procmux$2589.
    dead port 2/2 on $mux $procmux$2592.
    dead port 2/2 on $mux $procmux$2602.
    dead port 2/2 on $mux $procmux$2607.
    dead port 2/2 on $mux $procmux$2610.
    dead port 2/2 on $mux $procmux$2632.
    dead port 2/2 on $mux $procmux$2634.
    dead port 2/2 on $mux $procmux$2637.
    dead port 2/2 on $mux $procmux$2649.
    dead port 2/2 on $mux $procmux$2652.
    dead port 2/2 on $mux $procmux$2695.
    dead port 2/2 on $mux $procmux$2708.
    dead port 2/2 on $mux $procmux$2721.
    dead port 4/7 on $pmux $procmux$2948.
    dead port 5/7 on $pmux $procmux$2948.
    dead port 7/12 on $pmux $procmux$2988.
    dead port 8/12 on $pmux $procmux$2988.
    dead port 4/7 on $pmux $procmux$3193.
    dead port 5/7 on $pmux $procmux$3193.
    dead port 7/12 on $pmux $procmux$3276.
    dead port 8/12 on $pmux $procmux$3276.
    dead port 7/12 on $pmux $procmux$3472.
    dead port 8/12 on $pmux $procmux$3472.
    dead port 7/12 on $pmux $procmux$3655.
    dead port 8/12 on $pmux $procmux$3655.
    dead port 4/9 on $pmux $procmux$3708.
    dead port 5/9 on $pmux $procmux$3708.
    dead port 2/2 on $mux $procmux$3830.
    dead port 2/2 on $mux $procmux$3839.
    dead port 2/2 on $mux $procmux$4992.
    dead port 2/2 on $mux $procmux$4999.
Running muxtree optimizer on module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc_regs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \simpleuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio_xfer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1632.
    dead port 1/4 on $pmux $procmux$1634.
    dead port 2/4 on $pmux $procmux$1634.
    dead port 3/4 on $pmux $procmux$1634.
    dead port 2/2 on $mux $procmux$1638.
    dead port 2/2 on $mux $procmux$1645.
    dead port 1/4 on $pmux $procmux$1647.
    dead port 2/4 on $pmux $procmux$1647.
    dead port 3/4 on $pmux $procmux$1647.
    dead port 2/2 on $mux $procmux$1651.
    dead port 2/2 on $mux $procmux$1671.
    dead port 2/2 on $mux $procmux$1673.
    dead port 2/2 on $mux $procmux$1682.
    dead port 2/2 on $mux $procmux$1684.
    dead port 2/2 on $mux $procmux$1706.
    dead port 2/2 on $mux $procmux$1708.
    dead port 2/2 on $mux $procmux$1718.
    dead port 2/2 on $mux $procmux$1720.
    dead port 2/2 on $mux $procmux$1730.
    dead port 2/2 on $mux $procmux$1740.
    dead port 2/2 on $mux $procmux$1750.
    dead port 2/2 on $mux $procmux$1760.
    dead port 2/2 on $mux $procmux$1770.
    dead port 2/2 on $mux $procmux$1780.
    dead port 2/2 on $mux $procmux$1788.
    dead port 2/2 on $mux $procmux$1796.
    dead port 2/2 on $mux $procmux$1806.
    dead port 2/2 on $mux $procmux$1814.
    dead port 2/2 on $mux $procmux$1822.
    dead port 2/2 on $mux $procmux$1832.
Removed 103 multiplexer ports.
<suppressed ~280 debug messages>

7.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
    New ctrl vector for $pmux cell $procmux$2359: { $eq$./module/alphacore.v:1087$1323_Y $auto$opt_reduce.cc:134:opt_pmux$5299 }
    New ctrl vector for $pmux cell $procmux$2381: { $eq$./module/alphacore.v:1087$1323_Y $procmux$2365_CMP $procmux$2364_CMP $auto$opt_reduce.cc:134:opt_pmux$5301 }
    New ctrl vector for $pmux cell $procmux$2404: { $eq$./module/alphacore.v:1087$1323_Y $auto$opt_reduce.cc:134:opt_pmux$5303 }
    New ctrl vector for $pmux cell $procmux$2685: { $procmux$2361_CMP $auto$opt_reduce.cc:134:opt_pmux$5305 }
    New ctrl vector for $pmux cell $procmux$2698: { $auto$opt_reduce.cc:134:opt_pmux$5307 $procmux$2360_CMP }
    New ctrl vector for $pmux cell $procmux$2711: { $procmux$2363_CMP $auto$opt_reduce.cc:134:opt_pmux$5309 }
    New ctrl vector for $pmux cell $procmux$2988: { $logic_and$./module/alphacore.v:1444$1429_Y $auto$opt_reduce.cc:134:opt_pmux$5311 }
    New ctrl vector for $pmux cell $procmux$3030: { $eq$./module/alphacore.v:1087$1323_Y $procmux$2363_CMP }
    New ctrl vector for $pmux cell $procmux$3170: { $eq$./module/alphacore.v:1087$1323_Y $procmux$2365_CMP $procmux$2364_CMP $procmux$2363_CMP $auto$opt_reduce.cc:134:opt_pmux$5313 }
    New ctrl vector for $pmux cell $procmux$3193: $auto$opt_reduce.cc:134:opt_pmux$5315
    New ctrl vector for $pmux cell $procmux$3276: { \instr_trap $auto$opt_reduce.cc:134:opt_pmux$5319 $logic_and$./module/alphacore.v:1436$1428_Y $logic_and$./module/alphacore.v:1444$1429_Y $auto$opt_reduce.cc:134:opt_pmux$5317 }
    New ctrl vector for $pmux cell $procmux$3446: { $eq$./module/alphacore.v:1087$1323_Y $procmux$2365_CMP $procmux$2364_CMP $procmux$2362_CMP }
    New ctrl vector for $pmux cell $procmux$3472: { $logic_and$./module/alphacore.v:1436$1428_Y $auto$opt_reduce.cc:134:opt_pmux$5323 $auto$opt_reduce.cc:134:opt_pmux$5321 }
    New ctrl vector for $pmux cell $procmux$3655: { \is_lui_auipc_jal $auto$opt_reduce.cc:134:opt_pmux$5325 $procmux$2989_CTRL }
    New ctrl vector for $pmux cell $procmux$3708: { \is_lui_auipc_jal $auto$opt_reduce.cc:134:opt_pmux$5327 }
    New ctrl vector for $pmux cell $procmux$3825: $auto$opt_reduce.cc:134:opt_pmux$5329
    New ctrl vector for $pmux cell $procmux$3915: { $procmux$3912_CMP $procmux$3930_CMP $procmux$3908_CMP $auto$opt_reduce.cc:134:opt_pmux$5331 }
    New ctrl vector for $pmux cell $procmux$3933: $auto$opt_reduce.cc:134:opt_pmux$5333
    New ctrl vector for $pmux cell $procmux$4001: { $procmux$3912_CMP $procmux$3930_CMP $procmux$3908_CMP $auto$opt_reduce.cc:134:opt_pmux$5335 }
    New ctrl vector for $pmux cell $procmux$4019: { $procmux$3912_CMP $auto$opt_reduce.cc:134:opt_pmux$5337 }
    New ctrl vector for $pmux cell $procmux$4067: { $auto$opt_reduce.cc:134:opt_pmux$5339 $procmux$3930_CMP $procmux$3908_CMP }
    New ctrl vector for $pmux cell $procmux$4088: $auto$opt_reduce.cc:134:opt_pmux$5341
    New ctrl vector for $pmux cell $procmux$4209: { $procmux$4217_CMP $auto$opt_reduce.cc:134:opt_pmux$5343 $procmux$3930_CMP $procmux$3908_CMP }
    New ctrl vector for $pmux cell $procmux$4221: $auto$opt_reduce.cc:134:opt_pmux$5345
    New ctrl vector for $pmux cell $procmux$4381: $auto$opt_reduce.cc:134:opt_pmux$5347
    New ctrl vector for $pmux cell $procmux$4771: { $procmux$3908_CMP $auto$opt_reduce.cc:134:opt_pmux$5349 }
    New ctrl vector for $pmux cell $procmux$4786: { $procmux$3908_CMP $auto$opt_reduce.cc:134:opt_pmux$5351 }
    New ctrl vector for $pmux cell $procmux$4804: $auto$opt_reduce.cc:134:opt_pmux$5353
    New ctrl vector for $pmux cell $procmux$4817: $auto$opt_reduce.cc:134:opt_pmux$5355
    New ctrl vector for $pmux cell $procmux$4842: { $auto$opt_reduce.cc:134:opt_pmux$5357 $procmux$3930_CMP $procmux$3908_CMP }
    New ctrl vector for $pmux cell $procmux$4877: { $procmux$3912_CMP $procmux$3908_CMP $auto$opt_reduce.cc:134:opt_pmux$5359 }
    New ctrl vector for $pmux cell $procmux$4892: { $procmux$3930_CMP $procmux$3908_CMP $auto$opt_reduce.cc:134:opt_pmux$5361 $procmux$3916_CMP }
    New ctrl vector for $pmux cell $procmux$4919: { $procmux$3912_CMP $auto$opt_reduce.cc:134:opt_pmux$5363 }
    New ctrl vector for $pmux cell $procmux$4932: $auto$opt_reduce.cc:134:opt_pmux$5365
    New ctrl vector for $pmux cell $procmux$4958: { $auto$opt_reduce.cc:134:opt_pmux$5369 $procmux$3930_CMP $procmux$3908_CMP $auto$opt_reduce.cc:134:opt_pmux$5367 }
    New ctrl vector for $pmux cell $procmux$4977: { $procmux$3912_CMP $auto$opt_reduce.cc:134:opt_pmux$5371 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5310: { $logic_and$./module/alphacore.v:1452$1430_Y $logic_and$./module/alphacore.v:1436$1428_Y $logic_and$./module/alphacore.v:1418$1424_Y $logic_and$./module/alphacore.v:1407$1422_Y $logic_and$./module/alphacore.v:1366$1415_Y \is_jalr_addi_slti_sltiu_xori_ori_andi \is_lui_auipc_jal \instr_trap \instr_timer }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5316: { $logic_and$./module/alphacore.v:1452$1430_Y \is_jalr_addi_slti_sltiu_xori_ori_andi \is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5320: { $logic_and$./module/alphacore.v:1452$1430_Y \is_jalr_addi_slti_sltiu_xori_ori_andi \is_lui_auipc_jal }
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
  Optimizing cells in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
    Consolidated identical input bits for $mux cell $procmux$5025:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$0$memwr$\mem$./module/alphasoc_mem.v:17$857_EN[31:0]$870
      New ports: A=1'0, B=1'1, Y=$0$memwr$\mem$./module/alphasoc_mem.v:17$857_EN[31:0]$870 [24]
      New connections: { $0$memwr$\mem$./module/alphasoc_mem.v:17$857_EN[31:0]$870 [31:25] $0$memwr$\mem$./module/alphasoc_mem.v:17$857_EN[31:0]$870 [23:0] } = { $0$memwr$\mem$./module/alphasoc_mem.v:17$857_EN[31:0]$870 [24] $0$memwr$\mem$./module/alphasoc_mem.v:17$857_EN[31:0]$870 [24] $0$memwr$\mem$./module/alphasoc_mem.v:17$857_EN[31:0]$870 [24] $0$memwr$\mem$./module/alphasoc_mem.v:17$857_EN[31:0]$870 [24] $0$memwr$\mem$./module/alphasoc_mem.v:17$857_EN[31:0]$870 [24] $0$memwr$\mem$./module/alphasoc_mem.v:17$857_EN[31:0]$870 [24] $0$memwr$\mem$./module/alphasoc_mem.v:17$857_EN[31:0]$870 [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $procmux$5034:
      Old ports: A=0, B=16711680, Y=$0$memwr$\mem$./module/alphasoc_mem.v:16$856_EN[31:0]$867
      New ports: A=1'0, B=1'1, Y=$0$memwr$\mem$./module/alphasoc_mem.v:16$856_EN[31:0]$867 [16]
      New connections: { $0$memwr$\mem$./module/alphasoc_mem.v:16$856_EN[31:0]$867 [31:17] $0$memwr$\mem$./module/alphasoc_mem.v:16$856_EN[31:0]$867 [15:0] } = { 8'00000000 $0$memwr$\mem$./module/alphasoc_mem.v:16$856_EN[31:0]$867 [16] $0$memwr$\mem$./module/alphasoc_mem.v:16$856_EN[31:0]$867 [16] $0$memwr$\mem$./module/alphasoc_mem.v:16$856_EN[31:0]$867 [16] $0$memwr$\mem$./module/alphasoc_mem.v:16$856_EN[31:0]$867 [16] $0$memwr$\mem$./module/alphasoc_mem.v:16$856_EN[31:0]$867 [16] $0$memwr$\mem$./module/alphasoc_mem.v:16$856_EN[31:0]$867 [16] $0$memwr$\mem$./module/alphasoc_mem.v:16$856_EN[31:0]$867 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $procmux$5043:
      Old ports: A=0, B=65280, Y=$0$memwr$\mem$./module/alphasoc_mem.v:15$855_EN[31:0]$864
      New ports: A=1'0, B=1'1, Y=$0$memwr$\mem$./module/alphasoc_mem.v:15$855_EN[31:0]$864 [8]
      New connections: { $0$memwr$\mem$./module/alphasoc_mem.v:15$855_EN[31:0]$864 [31:9] $0$memwr$\mem$./module/alphasoc_mem.v:15$855_EN[31:0]$864 [7:0] } = { 16'0000000000000000 $0$memwr$\mem$./module/alphasoc_mem.v:15$855_EN[31:0]$864 [8] $0$memwr$\mem$./module/alphasoc_mem.v:15$855_EN[31:0]$864 [8] $0$memwr$\mem$./module/alphasoc_mem.v:15$855_EN[31:0]$864 [8] $0$memwr$\mem$./module/alphasoc_mem.v:15$855_EN[31:0]$864 [8] $0$memwr$\mem$./module/alphasoc_mem.v:15$855_EN[31:0]$864 [8] $0$memwr$\mem$./module/alphasoc_mem.v:15$855_EN[31:0]$864 [8] $0$memwr$\mem$./module/alphasoc_mem.v:15$855_EN[31:0]$864 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $procmux$5052:
      Old ports: A=0, B=255, Y=$0$memwr$\mem$./module/alphasoc_mem.v:14$854_EN[31:0]$861
      New ports: A=1'0, B=1'1, Y=$0$memwr$\mem$./module/alphasoc_mem.v:14$854_EN[31:0]$861 [0]
      New connections: $0$memwr$\mem$./module/alphasoc_mem.v:14$854_EN[31:0]$861 [31:1] = { 24'000000000000000000000000 $0$memwr$\mem$./module/alphasoc_mem.v:14$854_EN[31:0]$861 [0] $0$memwr$\mem$./module/alphasoc_mem.v:14$854_EN[31:0]$861 [0] $0$memwr$\mem$./module/alphasoc_mem.v:14$854_EN[31:0]$861 [0] $0$memwr$\mem$./module/alphasoc_mem.v:14$854_EN[31:0]$861 [0] $0$memwr$\mem$./module/alphasoc_mem.v:14$854_EN[31:0]$861 [0] $0$memwr$\mem$./module/alphasoc_mem.v:14$854_EN[31:0]$861 [0] $0$memwr$\mem$./module/alphasoc_mem.v:14$854_EN[31:0]$861 [0] }
  Optimizing cells in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \alphasoc_regs.
    Consolidated identical input bits for $mux cell $procmux$5061:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0]
      New connections: $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [31:1] = { $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] $0$memwr$\regs$./module/alphasoc_reg.v:13$44_EN[31:0]$48 [0] }
  Optimizing cells in module \alphasoc_regs.
  Optimizing cells in module \simpleuart.
    New ctrl vector for $pmux cell $procmux$2260: $auto$opt_reduce.cc:134:opt_pmux$5373
  Optimizing cells in module \simpleuart.
  Optimizing cells in module \spimemio.
    New ctrl vector for $pmux cell $procmux$2091: { $procmux$1934_CMP $auto$opt_reduce.cc:134:opt_pmux$5375 $procmux$1920_CMP $procmux$1917_CMP $procmux$1914_CMP $procmux$1911_CMP }
  Optimizing cells in module \spimemio.
  Optimizing cells in module \spimemio_xfer.
    New ctrl vector for $pmux cell $procmux$1766: { $procmux$1624_CMP $auto$opt_reduce.cc:134:opt_pmux$5377 }
    New ctrl vector for $pmux cell $procmux$1776: { $procmux$1624_CMP $auto$opt_reduce.cc:134:opt_pmux$5379 }
    New ctrl vector for $pmux cell $procmux$1621: $auto$opt_reduce.cc:134:opt_pmux$5381
    New ctrl vector for $pmux cell $procmux$1785: $auto$opt_reduce.cc:134:opt_pmux$5383
    New ctrl vector for $pmux cell $procmux$1793: $auto$opt_reduce.cc:134:opt_pmux$5385
    New ctrl vector for $pmux cell $procmux$1802: { $procmux$1624_CMP $auto$opt_reduce.cc:134:opt_pmux$5387 }
    New ctrl vector for $pmux cell $procmux$1811: $auto$opt_reduce.cc:134:opt_pmux$5389
    New ctrl vector for $pmux cell $procmux$1819: $auto$opt_reduce.cc:134:opt_pmux$5391
    New ctrl vector for $pmux cell $procmux$1828: { $procmux$1624_CMP $auto$opt_reduce.cc:134:opt_pmux$5393 }
  Optimizing cells in module \spimemio_xfer.
Performed a total of 55 changes.

7.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
<suppressed ~114 debug messages>
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
<suppressed ~36 debug messages>
Finding identical cells in module `\spimemio_xfer'.
<suppressed ~30 debug messages>
Removed a total of 60 cells.

7.6.6. Executing OPT_DFF pass (perform DFF optimizations).

7.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..
Removed 0 unused cells and 717 unused wires.
<suppressed ~5 debug messages>

7.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
Optimizing module spimemio_xfer.

7.6.9. Rerunning OPT passes. (Maybe there is more to do..)

7.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc_regs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \simpleuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio_xfer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~286 debug messages>

7.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
    New ctrl vector for $pmux cell $procmux$2798: $auto$opt_reduce.cc:134:opt_pmux$5395
    New ctrl vector for $pmux cell $procmux$2815: { $procmux$2363_CMP $auto$opt_reduce.cc:134:opt_pmux$5397 }
    New ctrl vector for $pmux cell $procmux$3235: { $eq$./module/alphacore.v:1087$1323_Y $procmux$2365_CMP $procmux$2364_CMP $procmux$2363_CMP $procmux$2362_CMP $auto$opt_reduce.cc:134:opt_pmux$5399 }
    New ctrl vector for $pmux cell $procmux$4103: $auto$opt_reduce.cc:134:opt_pmux$5401
    New ctrl vector for $pmux cell $procmux$4815: { $procmux$3932_CMP $auto$opt_reduce.cc:134:opt_pmux$5403 }
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
  Optimizing cells in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \alphasoc_regs.
  Optimizing cells in module \simpleuart.
  Optimizing cells in module \spimemio.
    New ctrl vector for $pmux cell $procmux$1896: $auto$opt_reduce.cc:134:opt_pmux$5405
    New ctrl vector for $pmux cell $procmux$1998: { $procmux$1934_CMP $auto$opt_reduce.cc:134:opt_pmux$5407 $procmux$1911_CMP }
  Optimizing cells in module \spimemio.
  Optimizing cells in module \spimemio_xfer.
Performed a total of 7 changes.

7.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
<suppressed ~9 debug messages>
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 3 cells.

7.6.13. Executing OPT_DFF pass (perform DFF optimizations).

7.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

7.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
Optimizing module spimemio_xfer.

7.6.16. Rerunning OPT passes. (Maybe there is more to do..)

7.6.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc_regs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \simpleuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio_xfer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~286 debug messages>

7.6.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
  Optimizing cells in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \alphasoc_regs.
  Optimizing cells in module \simpleuart.
  Optimizing cells in module \spimemio.
  Optimizing cells in module \spimemio_xfer.
Performed a total of 0 changes.

7.6.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 0 cells.

7.6.20. Executing OPT_DFF pass (perform DFF optimizations).

7.6.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..

7.6.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
Optimizing module spimemio_xfer.

7.6.23. Finished OPT passes. (There is nothing left to do.)

7.7. Executing FSM pass (extract and optimize FSM).

7.7.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.cpi_insn as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Found FSM state register $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.cpu_state.
Not marking $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.irq_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.mem_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.mem_wordsize.
Not marking spimemio.din_tag as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register spimemio.state.

7.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\cpu_state' from module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
  found $dff cell for state register: $procdff$5155
  root of input selection tree: $0\cpu_state[7:0]
  found ctrl input: $logic_and$./module/alphacore.v:1678$1508_Y
  found ctrl input: $logic_and$./module/alphacore.v:1662$1492_Y
  found ctrl input: \resetn
  found state code: 8'01000000
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$5395
  found ctrl input: $procmux$2362_CMP
  found ctrl input: $procmux$2363_CMP
  found ctrl input: $procmux$2364_CMP
  found ctrl input: $procmux$2365_CMP
  found ctrl input: $eq$./module/alphacore.v:1087$1323_Y
  found ctrl input: $logic_or$./module/alphacore.v:1597$1474_Y
  found ctrl input: $logic_and$./module/alphacore.v:1612$1478_Y
  found ctrl input: $eq$./module/alphacore.v:1571$1456_Y
  found ctrl input: \is_beq_bne_blt_bge_bltu_bgeu
  found ctrl input: \mem_done
  found ctrl input: $logic_and$./module/alphacore.v:1481$1434_Y
  found ctrl input: \is_sb_sh_sw
  found ctrl input: $logic_and$./module/alphacore.v:1508$1439_Y
  found state code: 8'00001000
  found state code: 8'00000100
  found state code: 8'00000010
  found ctrl input: \cpi_int_ready
  found ctrl input: $logic_and$./module/alphacore.v:1517$1441_Y
  found ctrl input: $logic_and$./module/alphacore.v:1359$1414_Y
  found state code: 8'10000000
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$5317
  found ctrl input: $logic_and$./module/alphacore.v:1444$1429_Y
  found ctrl input: $logic_and$./module/alphacore.v:1436$1428_Y
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$5315
  found ctrl input: \instr_trap
  found state code: 8'00000001
  found ctrl input: $logic_and$./module/alphacore.v:1278$1391_Y
  found ctrl input: $logic_and$./module/alphacore.v:1288$1399_Y
  found ctrl input: \decoder_trigger
  found ctrl input: \instr_jal
  found state code: 8'00100000
  found ctrl input: $logic_and$./module/alphacore.v:1670$1502_Y
  found ctrl input: $logic_and$./module/alphacore.v:1663$1495_Y
  found ctrl input: $logic_and$./module/alphacore.v:1665$1499_Y
  found ctrl output: $procmux$2367_CMP
  found ctrl output: $procmux$2365_CMP
  found ctrl output: $procmux$2364_CMP
  found ctrl output: $procmux$2363_CMP
  found ctrl output: $procmux$2362_CMP
  found ctrl output: $procmux$2361_CMP
  found ctrl output: $procmux$2360_CMP
  found ctrl output: $eq$./module/alphacore.v:1087$1323_Y
  ctrl inputs: { $logic_and$./module/alphacore.v:1678$1508_Y $logic_and$./module/alphacore.v:1670$1502_Y $logic_and$./module/alphacore.v:1665$1499_Y $logic_and$./module/alphacore.v:1663$1495_Y $logic_and$./module/alphacore.v:1662$1492_Y $logic_and$./module/alphacore.v:1612$1478_Y $logic_or$./module/alphacore.v:1597$1474_Y $eq$./module/alphacore.v:1571$1456_Y $logic_and$./module/alphacore.v:1517$1441_Y $logic_and$./module/alphacore.v:1508$1439_Y $logic_and$./module/alphacore.v:1481$1434_Y $logic_and$./module/alphacore.v:1444$1429_Y $logic_and$./module/alphacore.v:1436$1428_Y $logic_and$./module/alphacore.v:1359$1414_Y $logic_and$./module/alphacore.v:1288$1399_Y $logic_and$./module/alphacore.v:1278$1391_Y $auto$opt_reduce.cc:134:opt_pmux$5317 $auto$opt_reduce.cc:134:opt_pmux$5315 $auto$opt_reduce.cc:134:opt_pmux$5395 \is_beq_bne_blt_bge_bltu_bgeu \is_sb_sh_sw \decoder_trigger \instr_trap \instr_jal \mem_done \cpi_int_ready \resetn }
  ctrl outputs: { $eq$./module/alphacore.v:1087$1323_Y $0\cpu_state[7:0] $procmux$2360_CMP $procmux$2361_CMP $procmux$2362_CMP $procmux$2363_CMP $procmux$2364_CMP $procmux$2365_CMP $procmux$2367_CMP }
  transition: 8'10000000 27'0---0---------------------0 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 27'0---0---------------------1 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 27'00-01---------------------0 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 27'00-01---------------------1 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 27'00011---------------------- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 27'00111---------------------0 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 27'00111---------------------1 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 27'010-1---------------------- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 27'01101---------------------0 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 27'01101---------------------1 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 27'01111---------------------0 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 27'01111---------------------1 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 27'1-0------------------------ -> 8'10000000 16'0100000000000001
  transition: 8'10000000 27'1-1-0---------------------0 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 27'1-1-0---------------------1 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 27'10101---------------------0 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 27'10101---------------------1 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 27'10111---------------------0 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 27'10111---------------------1 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 27'11101---------------------0 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 27'11101---------------------1 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 27'11111---------------------0 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 27'11111---------------------1 -> 8'10000000 16'0100000000000001
  transition: 8'01000000 27'0---0---------------------0 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'0---0---------00-----0----1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'0---0---------00-----1-0--1 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 27'0---0---------00-----1-1--1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'0---0---------10----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'0---0----------1----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'00-01---------------------0 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'00-01---------00-----0----1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'00-01---------00-----1-0--1 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 27'00-01---------00-----1-1--1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'00-01---------10----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'00-01----------1----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'00011---------------------- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 27'00111---------------------0 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'00111---------00-----0----1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'00111---------00-----1-0--1 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 27'00111---------00-----1-1--1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'00111---------10----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'00111----------1----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'010-1---------------------- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 27'01101---------------------0 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'01101---------00-----0----1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'01101---------00-----1-0--1 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 27'01101---------00-----1-1--1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'01101---------10----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'01101----------1----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'01111---------------------0 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'01111---------00-----0----1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'01111---------00-----1-0--1 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 27'01111---------00-----1-1--1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'01111---------10----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'01111----------1----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'1-0------------------------ -> 8'10000000 16'1100000000000000
  transition: 8'01000000 27'1-1-0---------------------0 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'1-1-0---------00-----0----1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'1-1-0---------00-----1-0--1 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 27'1-1-0---------00-----1-1--1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'1-1-0---------10----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'1-1-0----------1----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'10101---------------------0 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'10101---------00-----0----1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'10101---------00-----1-0--1 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 27'10101---------00-----1-1--1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'10101---------10----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'10101----------1----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'10111---------------------0 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'10111---------00-----0----1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'10111---------00-----1-0--1 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 27'10111---------00-----1-1--1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'10111---------10----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'10111----------1----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'11101---------------------0 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'11101---------00-----0----1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'11101---------00-----1-0--1 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 27'11101---------00-----1-1--1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'11101---------10----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'11101----------1----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'11111---------------------0 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'11111---------00-----0----1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'11111---------00-----1-0--1 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 27'11111---------00-----1-1--1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'11111---------10----------1 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 27'11111----------1----------1 -> 8'01000000 16'1010000000000000
  transition: 8'00100000 27'0---0---------------------0 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'0---0-----000---00--0-0---1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'0---0------00---00--1-0---1 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 27'0---0-----100---00----0---1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'0---0--------0--------1---1 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 27'0---0--------1--------1---1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'0---0------------1--------1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'0---0-------1-------------1 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 27'0---0------1--------------1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'0---0-----------1---------1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'00-01---------------------0 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'00-01-----000---00--0-0---1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'00-01------00---00--1-0---1 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 27'00-01-----100---00----0---1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'00-01--------0--------1---1 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 27'00-01--------1--------1---1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'00-01------------1--------1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'00-01-------1-------------1 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 27'00-01------1--------------1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'00-01-----------1---------1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'00011---------------------- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 27'00111---------------------0 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'00111-----000---00--0-0---1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'00111------00---00--1-0---1 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 27'00111-----100---00----0---1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'00111--------0--------1---1 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 27'00111--------1--------1---1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'00111------------1--------1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'00111-------1-------------1 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 27'00111------1--------------1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'00111-----------1---------1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'010-1---------------------- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 27'01101---------------------0 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'01101-----000---00--0-0---1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'01101------00---00--1-0---1 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 27'01101-----100---00----0---1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'01101--------0--------1---1 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 27'01101--------1--------1---1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'01101------------1--------1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'01101-------1-------------1 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 27'01101------1--------------1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'01101-----------1---------1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'01111---------------------0 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'01111-----000---00--0-0---1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'01111------00---00--1-0---1 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 27'01111-----100---00----0---1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'01111--------0--------1---1 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 27'01111--------1--------1---1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'01111------------1--------1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'01111-------1-------------1 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 27'01111------1--------------1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'01111-----------1---------1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'1-0------------------------ -> 8'10000000 16'0100000000000010
  transition: 8'00100000 27'1-1-0---------------------0 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'1-1-0-----000---00--0-0---1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'1-1-0------00---00--1-0---1 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 27'1-1-0-----100---00----0---1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'1-1-0--------0--------1---1 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 27'1-1-0--------1--------1---1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'1-1-0------------1--------1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'1-1-0-------1-------------1 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 27'1-1-0------1--------------1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'1-1-0-----------1---------1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'10101---------------------0 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'10101-----000---00--0-0---1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'10101------00---00--1-0---1 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 27'10101-----100---00----0---1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'10101--------0--------1---1 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 27'10101--------1--------1---1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'10101------------1--------1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'10101-------1-------------1 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 27'10101------1--------------1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'10101-----------1---------1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'10111---------------------0 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'10111-----000---00--0-0---1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'10111------00---00--1-0---1 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 27'10111-----100---00----0---1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'10111--------0--------1---1 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 27'10111--------1--------1---1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'10111------------1--------1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'10111-------1-------------1 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 27'10111------1--------------1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'10111-----------1---------1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'11101---------------------0 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'11101-----000---00--0-0---1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'11101------00---00--1-0---1 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 27'11101-----100---00----0---1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'11101--------0--------1---1 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 27'11101--------1--------1---1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'11101------------1--------1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'11101-------1-------------1 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 27'11101------1--------------1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'11101-----------1---------1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'11111---------------------0 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'11111-----000---00--0-0---1 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 27'11111------00---00--1-0---1 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 27'11111-----100---00----0---1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'11111--------0--------1---1 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 27'11111--------1--------1---1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'11111------------1--------1 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 27'11111-------1-------------1 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 27'11111------1--------------1 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 27'11111-----------1---------1 -> 8'00001000 16'0000010000000010
  transition: 8'00001000 27'0---0---------------------0 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'0---0--------------0------1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'0---0--------------1----0-1 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 27'0---0--------------1----1-1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'00-01---------------------0 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'00-01--------------0------1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'00-01--------------1----0-1 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 27'00-01--------------1----1-1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'00011---------------------- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 27'00111---------------------0 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'00111--------------0------1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'00111--------------1----0-1 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 27'00111--------------1----1-1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'010-1---------------------- -> 8'10000000 16'0100000000001000
  transition: 8'00001000 27'01101---------------------0 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'01101--------------0------1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'01101--------------1----0-1 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 27'01101--------------1----1-1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'01111---------------------0 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'01111--------------0------1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'01111--------------1----0-1 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 27'01111--------------1----1-1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'1-0------------------------ -> 8'10000000 16'0100000000001000
  transition: 8'00001000 27'1-1-0---------------------0 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'1-1-0--------------0------1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'1-1-0--------------1----0-1 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 27'1-1-0--------------1----1-1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'10101---------------------0 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'10101--------------0------1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'10101--------------1----0-1 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 27'10101--------------1----1-1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'10111---------------------0 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'10111--------------0------1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'10111--------------1----0-1 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 27'10111--------------1----1-1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'11101---------------------0 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'11101--------------0------1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'11101--------------1----0-1 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 27'11101--------------1----1-1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'11111---------------------0 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'11111--------------0------1 -> 8'01000000 16'0010000000001000
  transition: 8'00001000 27'11111--------------1----0-1 -> 8'00001000 16'0000010000001000
  transition: 8'00001000 27'11111--------------1----1-1 -> 8'01000000 16'0010000000001000
  transition: 8'00000100 27'0---0---------------------0 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'0---0--0------------------1 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 27'0---0--1------------------1 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'00-01---------------------0 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'00-01--0------------------1 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 27'00-01--1------------------1 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'00011---------------------- -> 8'10000000 16'0100000000010000
  transition: 8'00000100 27'00111---------------------0 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'00111--0------------------1 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 27'00111--1------------------1 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'010-1---------------------- -> 8'10000000 16'0100000000010000
  transition: 8'00000100 27'01101---------------------0 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'01101--0------------------1 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 27'01101--1------------------1 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'01111---------------------0 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'01111--0------------------1 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 27'01111--1------------------1 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'1-0------------------------ -> 8'10000000 16'0100000000010000
  transition: 8'00000100 27'1-1-0---------------------0 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'1-1-0--0------------------1 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 27'1-1-0--1------------------1 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'10101---------------------0 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'10101--0------------------1 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 27'10101--1------------------1 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'10111---------------------0 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'10111--0------------------1 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 27'10111--1------------------1 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'11101---------------------0 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'11101--0------------------1 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 27'11101--1------------------1 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'11111---------------------0 -> 8'01000000 16'0010000000010000
  transition: 8'00000100 27'11111--0------------------1 -> 8'00000100 16'0000001000010000
  transition: 8'00000100 27'11111--1------------------1 -> 8'01000000 16'0010000000010000
  transition: 8'00000010 27'0---0---------------------0 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'0---0-0-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'0---001-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'0---011-------------------1 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'00-01---------------------0 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'00-01-0-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'00-0101-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'00-0111-------------------1 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'00011---------------------- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 27'00111---------------------0 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'00111-0-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'0011101-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'0011111-------------------1 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'010-1---------------------- -> 8'10000000 16'0100000000100000
  transition: 8'00000010 27'01101---------------------0 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'01101-0-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'0110101-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'0110111-------------------1 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'01111---------------------0 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'01111-0-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'0111101-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'0111111-------------------1 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'1-0------------------------ -> 8'10000000 16'0100000000100000
  transition: 8'00000010 27'1-1-0---------------------0 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'1-1-0-0-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'1-1-001-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'1-1-011-------------------1 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'10101---------------------0 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'10101-0-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'1010101-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'1010111-------------------1 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'10111---------------------0 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'10111-0-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'1011101-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'1011111-------------------1 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'11101---------------------0 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'11101-0-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'1110101-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'1110111-------------------1 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'11111---------------------0 -> 8'01000000 16'0010000000100000
  transition: 8'00000010 27'11111-0-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'1111101-------------------1 -> 8'00000010 16'0000000100100000
  transition: 8'00000010 27'1111111-------------------1 -> 8'01000000 16'0010000000100000
  transition: 8'00000001 27'0---0---------------------0 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'0---0-0-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'0---001-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'0---011-------------------1 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'00-01---------------------0 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'00-01-0-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'00-0101-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'00-0111-------------------1 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'00011---------------------- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 27'00111---------------------0 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'00111-0-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'0011101-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'0011111-------------------1 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'010-1---------------------- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 27'01101---------------------0 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'01101-0-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'0110101-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'0110111-------------------1 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'01111---------------------0 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'01111-0-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'0111101-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'0111111-------------------1 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'1-0------------------------ -> 8'10000000 16'0100000001000000
  transition: 8'00000001 27'1-1-0---------------------0 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'1-1-0-0-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'1-1-001-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'1-1-011-------------------1 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'10101---------------------0 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'10101-0-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'1010101-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'1010111-------------------1 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'10111---------------------0 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'10111-0-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'1011101-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'1011111-------------------1 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'11101---------------------0 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'11101-0-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'1110101-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'1110111-------------------1 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'11111---------------------0 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 27'11111-0-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'1111101-------------------1 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 27'1111111-------------------1 -> 8'01000000 16'0010000001000000
Extracting FSM `\mem_wordsize' from module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
  found $dff cell for state register: $procdff$5142
  root of input selection tree: $0\mem_wordsize[1:0]
  found ctrl input: \resetn
  found ctrl input: $procmux$2360_CMP
  found ctrl input: $procmux$2361_CMP
  found ctrl input: $eq$./module/alphacore.v:1087$1323_Y
  found ctrl input: $logic_or$./module/alphacore.v:1597$1474_Y
  found ctrl input: \mem_do_rdata
  found ctrl input: \instr_lw
  found ctrl input: $logic_or$./module/alphacore.v:1627$1483_Y
  found ctrl input: $logic_or$./module/alphacore.v:1626$1482_Y
  found state code: 2'00
  found state code: 2'01
  found state code: 2'10
  found ctrl input: \mem_do_wdata
  found ctrl input: \instr_sw
  found ctrl input: \instr_sh
  found ctrl input: \instr_sb
  found ctrl output: $eq$./module/alphacore.v:1663$1493_Y
  found ctrl output: $eq$./module/alphacore.v:1670$1500_Y
  found ctrl output: $procmux$4993_CMP
  ctrl inputs: { $logic_or$./module/alphacore.v:1627$1483_Y $logic_or$./module/alphacore.v:1626$1482_Y $logic_or$./module/alphacore.v:1597$1474_Y $eq$./module/alphacore.v:1087$1323_Y $procmux$2360_CMP $procmux$2361_CMP \instr_sw \instr_sh \instr_sb \instr_lw \mem_do_wdata \mem_do_rdata \resetn }
  ctrl outputs: { $procmux$4993_CMP $eq$./module/alphacore.v:1670$1500_Y $eq$./module/alphacore.v:1663$1493_Y $0\mem_wordsize[1:0] }
  transition:       2'00 13'------------0 ->       2'00 5'00100
  transition:       2'00 13'---000------1 ->       2'00 5'00100
  transition:       2'00 13'---1--------1 ->       2'00 5'00100
  transition:       2'00 13'--0--1------1 ->       2'00 5'00100
  transition:       2'00 13'--1--1000-0-1 ->       2'00 5'00100
  transition:       2'00 13'--1--1--1-0-1 ->       2'10 5'00110
  transition:       2'00 13'--1--1-1--0-1 ->       2'01 5'00101
  transition:       2'00 13'--1--11---0-1 ->       2'00 5'00100
  transition:       2'00 13'--1--1----1-1 ->       2'00 5'00100
  transition:       2'00 13'--0-1-------1 ->       2'00 5'00100
  transition:       2'00 13'001-1----0-01 ->       2'00 5'00100
  transition:       2'00 13'-11-1------01 ->       2'10 5'00110
  transition:       2'00 13'1-1-1------01 ->       2'01 5'00101
  transition:       2'00 13'--1-1----1-01 ->       2'00 5'00100
  transition:       2'00 13'--1-1------11 ->       2'00 5'00100
  transition:       2'10 13'------------0 ->       2'10 5'10010
  transition:       2'10 13'---000------1 ->       2'10 5'10010
  transition:       2'10 13'---1--------1 ->       2'00 5'10000
  transition:       2'10 13'--0--1------1 ->       2'10 5'10010
  transition:       2'10 13'--1--1000-0-1 ->       2'10 5'10010
  transition:       2'10 13'--1--1--1-0-1 ->       2'10 5'10010
  transition:       2'10 13'--1--1-1--0-1 ->       2'01 5'10001
  transition:       2'10 13'--1--11---0-1 ->       2'00 5'10000
  transition:       2'10 13'--1--1----1-1 ->       2'10 5'10010
  transition:       2'10 13'--0-1-------1 ->       2'10 5'10010
  transition:       2'10 13'001-1----0-01 ->       2'10 5'10010
  transition:       2'10 13'-11-1------01 ->       2'10 5'10010
  transition:       2'10 13'1-1-1------01 ->       2'01 5'10001
  transition:       2'10 13'--1-1----1-01 ->       2'00 5'10000
  transition:       2'10 13'--1-1------11 ->       2'10 5'10010
  transition:       2'01 13'------------0 ->       2'01 5'01001
  transition:       2'01 13'---000------1 ->       2'01 5'01001
  transition:       2'01 13'---1--------1 ->       2'00 5'01000
  transition:       2'01 13'--0--1------1 ->       2'01 5'01001
  transition:       2'01 13'--1--1000-0-1 ->       2'01 5'01001
  transition:       2'01 13'--1--1--1-0-1 ->       2'10 5'01010
  transition:       2'01 13'--1--1-1--0-1 ->       2'01 5'01001
  transition:       2'01 13'--1--11---0-1 ->       2'00 5'01000
  transition:       2'01 13'--1--1----1-1 ->       2'01 5'01001
  transition:       2'01 13'--0-1-------1 ->       2'01 5'01001
  transition:       2'01 13'001-1----0-01 ->       2'01 5'01001
  transition:       2'01 13'-11-1------01 ->       2'10 5'01010
  transition:       2'01 13'1-1-1------01 ->       2'01 5'01001
  transition:       2'01 13'--1-1----1-01 ->       2'00 5'01000
  transition:       2'01 13'--1-1------11 ->       2'01 5'01001
Extracting FSM `\state' from module `\spimemio'.
  found $dff cell for state register: $procdff$5099
  root of input selection tree: $0\state[3:0]
  found reset state: 4'0000 (guessed from mux tree)
  found ctrl input: $logic_or$./module/spimemio.v:192$786_Y
  found ctrl input: \jump
  found ctrl input: $procmux$1911_CMP
  found ctrl input: $procmux$1914_CMP
  found ctrl input: $procmux$1917_CMP
  found ctrl input: $procmux$1920_CMP
  found ctrl input: $procmux$1923_CMP
  found ctrl input: $procmux$1926_CMP
  found ctrl input: $procmux$1929_CMP
  found ctrl input: $procmux$1934_CMP
  found ctrl input: $procmux$1937_CMP
  found ctrl input: $procmux$1897_CMP
  found ctrl input: $procmux$1943_CMP
  found ctrl input: $procmux$1900_CMP
  found ctrl input: $procmux$1949_CMP
  found ctrl input: $logic_or$./module/spimemio.v:331$804_Y
  found ctrl input: \din_ready
  found state code: 4'1001
  found state code: 4'1100
  found state code: 4'1011
  found state code: 4'1010
  found ctrl input: $logic_or$./module/spimemio.v:291$800_Y
  found state code: 4'1000
  found state code: 4'0111
  found ctrl input: $logic_and$./module/spimemio.v:263$799_Y
  found state code: 4'0110
  found state code: 4'0101
  found ctrl input: \dout_valid
  found state code: 4'0100
  found state code: 4'0011
  found state code: 4'0010
  found state code: 4'0001
  found ctrl input: \config_cont
  found state code: 4'0000
  found ctrl output: $procmux$1949_CMP
  found ctrl output: $procmux$1943_CMP
  found ctrl output: $procmux$1937_CMP
  found ctrl output: $procmux$1934_CMP
  found ctrl output: $procmux$1929_CMP
  found ctrl output: $procmux$1926_CMP
  found ctrl output: $procmux$1923_CMP
  found ctrl output: $procmux$1920_CMP
  found ctrl output: $procmux$1917_CMP
  found ctrl output: $procmux$1914_CMP
  found ctrl output: $procmux$1911_CMP
  found ctrl output: $procmux$1900_CMP
  found ctrl output: $procmux$1897_CMP
  ctrl inputs: { $logic_or$./module/spimemio.v:331$804_Y $logic_or$./module/spimemio.v:291$800_Y $logic_and$./module/spimemio.v:263$799_Y $logic_or$./module/spimemio.v:192$786_Y \config_cont \jump \dout_valid \din_ready }
  ctrl outputs: { $0\state[3:0] $procmux$1897_CMP $procmux$1900_CMP $procmux$1911_CMP $procmux$1914_CMP $procmux$1917_CMP $procmux$1920_CMP $procmux$1923_CMP $procmux$1926_CMP $procmux$1929_CMP $procmux$1934_CMP $procmux$1937_CMP $procmux$1943_CMP $procmux$1949_CMP }
  transition:     4'0000 8'---0-0-0 ->     4'0000 17'00000000000000001
  transition:     4'0000 8'---0-0-1 ->     4'0001 17'00010000000000001
  transition:     4'0000 8'---001-- ->     4'0100 17'01000000000000001
  transition:     4'0000 8'---011-- ->     4'0101 17'01010000000000001
  transition:     4'0000 8'---1---- ->     4'0000 17'00000000000000001
  transition:     4'1000 8'---0-0-0 ->     4'1000 17'10000000001000000
  transition:     4'1000 8'---0-0-1 ->     4'1001 17'10010000001000000
  transition:     4'1000 8'---001-- ->     4'0100 17'01000000001000000
  transition:     4'1000 8'---011-- ->     4'0101 17'01010000001000000
  transition:     4'1000 8'---1---- ->     4'0000 17'00000000001000000
  transition:     4'0100 8'---0-0-0 ->     4'0100 17'01000000000000100
  transition:     4'0100 8'---0-0-1 ->     4'0101 17'01010000000000100
  transition:     4'0100 8'---001-- ->     4'0100 17'01000000000000100
  transition:     4'0100 8'---011-- ->     4'0101 17'01010000000000100
  transition:     4'0100 8'---1---- ->     4'0000 17'00000000000000100
  transition:     4'1100 8'0--0-0-- ->     4'1100 17'11000010000000000
  transition:     4'1100 8'1--0-0-0 ->     4'1100 17'11000010000000000
  transition:     4'1100 8'1--0-0-1 ->     4'1001 17'10010010000000000
  transition:     4'1100 8'---001-- ->     4'0100 17'01000010000000000
  transition:     4'1100 8'---011-- ->     4'0101 17'01010010000000000
  transition:     4'1100 8'---1---- ->     4'0000 17'00000010000000000
  transition:     4'0010 8'---0-0-0 ->     4'0010 17'00100000000000010
  transition:     4'0010 8'---0-0-1 ->     4'0011 17'00110000000000010
  transition:     4'0010 8'---001-- ->     4'0100 17'01000000000000010
  transition:     4'0010 8'---011-- ->     4'0101 17'01010000000000010
  transition:     4'0010 8'---1---- ->     4'0000 17'00000000000000010
  transition:     4'1010 8'---0-0-0 ->     4'1010 17'10100000100000000
  transition:     4'1010 8'---0-0-1 ->     4'1011 17'10110000100000000
  transition:     4'1010 8'---001-- ->     4'0100 17'01000000100000000
  transition:     4'1010 8'---011-- ->     4'0101 17'01010000100000000
  transition:     4'1010 8'---1---- ->     4'0000 17'00000000100000000
  transition:     4'0110 8'---0-0-0 ->     4'0110 17'01100000000010000
  transition:     4'0110 8'---0-0-1 ->     4'0111 17'01110000000010000
  transition:     4'0110 8'---001-- ->     4'0100 17'01000000000010000
  transition:     4'0110 8'---011-- ->     4'0101 17'01010000000010000
  transition:     4'0110 8'---1---- ->     4'0000 17'00000000000010000
  transition:     4'0001 8'---0-00- ->     4'0001 17'00010100000000000
  transition:     4'0001 8'---0-01- ->     4'0010 17'00100100000000000
  transition:     4'0001 8'---001-- ->     4'0100 17'01000100000000000
  transition:     4'0001 8'---011-- ->     4'0101 17'01010100000000000
  transition:     4'0001 8'---1---- ->     4'0000 17'00000100000000000
  transition:     4'1001 8'---0-0-0 ->     4'1001 17'10010000010000000
  transition:     4'1001 8'---0-0-1 ->     4'1010 17'10100000010000000
  transition:     4'1001 8'---001-- ->     4'0100 17'01000000010000000
  transition:     4'1001 8'---011-- ->     4'0101 17'01010000010000000
  transition:     4'1001 8'---1---- ->     4'0000 17'00000000010000000
  transition:     4'0101 8'--00-0-- ->     4'0101 17'01010000000001000
  transition:     4'0101 8'--10-0-0 ->     4'0101 17'01010000000001000
  transition:     4'0101 8'--10-0-1 ->     4'0110 17'01100000000001000
  transition:     4'0101 8'---001-- ->     4'0100 17'01000000000001000
  transition:     4'0101 8'---011-- ->     4'0101 17'01010000000001000
  transition:     4'0101 8'---1---- ->     4'0000 17'00000000000001000
  transition:     4'0011 8'---0-00- ->     4'0011 17'00111000000000000
  transition:     4'0011 8'---0-01- ->     4'0100 17'01001000000000000
  transition:     4'0011 8'---001-- ->     4'0100 17'01001000000000000
  transition:     4'0011 8'---011-- ->     4'0101 17'01011000000000000
  transition:     4'0011 8'---1---- ->     4'0000 17'00001000000000000
  transition:     4'1011 8'---0-0-0 ->     4'1011 17'10110001000000000
  transition:     4'1011 8'---0-0-1 ->     4'1100 17'11000001000000000
  transition:     4'1011 8'---001-- ->     4'0100 17'01000001000000000
  transition:     4'1011 8'---011-- ->     4'0101 17'01010001000000000
  transition:     4'1011 8'---1---- ->     4'0000 17'00000001000000000
  transition:     4'0111 8'---0-0-0 ->     4'0111 17'01110000000100000
  transition:     4'0111 8'-0-0-0-1 ->     4'1001 17'10010000000100000
  transition:     4'0111 8'-1-0-0-1 ->     4'1000 17'10000000000100000
  transition:     4'0111 8'---001-- ->     4'0100 17'01000000000100000
  transition:     4'0111 8'---011-- ->     4'0101 17'01010000000100000
  transition:     4'0111 8'---1---- ->     4'0000 17'00000000000100000

7.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\mem_wordsize$5418' from module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Optimizing FSM `$fsm$\cpu_state$5408' from module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
  Merging pattern 27'10101---------------------1 and 27'10111---------------------1 from group (0 0 16'0100000000000001).
  Merging pattern 27'01101---------------------1 and 27'01111---------------------1 from group (0 0 16'0100000000000001).
  Merging pattern 27'11101---------------------1 and 27'11111---------------------1 from group (0 0 16'0100000000000001).
  Merging pattern 27'10111---------------------1 and 27'10101---------------------1 from group (0 0 16'0100000000000001).
  Merging pattern 27'01111---------------------1 and 27'01101---------------------1 from group (0 0 16'0100000000000001).
  Merging pattern 27'11111---------------------1 and 27'11101---------------------1 from group (0 0 16'0100000000000001).
  Merging pattern 27'101-1---------------------1 and 27'111-1---------------------1 from group (0 0 16'0100000000000001).
  Merging pattern 27'111-1---------------------1 and 27'101-1---------------------1 from group (0 0 16'0100000000000001).
  Merging pattern 27'1-1-0---------------------1 and 27'1-1-1---------------------1 from group (0 0 16'0100000000000001).
  Merging pattern 27'1-1-1---------------------1 and 27'1-1-0---------------------1 from group (0 0 16'0100000000000001).
  Merging pattern 27'10101---------------------0 and 27'10111---------------------0 from group (0 1 16'0010000000000001).
  Merging pattern 27'01101---------------------0 and 27'01111---------------------0 from group (0 1 16'0010000000000001).
  Merging pattern 27'11101---------------------0 and 27'11111---------------------0 from group (0 1 16'0010000000000001).
  Merging pattern 27'10111---------------------0 and 27'10101---------------------0 from group (0 1 16'0010000000000001).
  Merging pattern 27'01111---------------------0 and 27'01101---------------------0 from group (0 1 16'0010000000000001).
  Merging pattern 27'11111---------------------0 and 27'11101---------------------0 from group (0 1 16'0010000000000001).
  Merging pattern 27'101-1---------------------0 and 27'111-1---------------------0 from group (0 1 16'0010000000000001).
  Merging pattern 27'111-1---------------------0 and 27'101-1---------------------0 from group (0 1 16'0010000000000001).
  Merging pattern 27'1-1-0---------------------0 and 27'1-1-1---------------------0 from group (0 1 16'0010000000000001).
  Merging pattern 27'1-1-1---------------------0 and 27'1-1-0---------------------0 from group (0 1 16'0010000000000001).
  Merging pattern 27'10101---------------------0 and 27'10111---------------------0 from group (1 1 16'1010000000000000).
  Merging pattern 27'01101---------------------0 and 27'01111---------------------0 from group (1 1 16'1010000000000000).
  Merging pattern 27'11101---------------------0 and 27'11111---------------------0 from group (1 1 16'1010000000000000).
  Merging pattern 27'10111---------------------0 and 27'10101---------------------0 from group (1 1 16'1010000000000000).
  Merging pattern 27'01111---------------------0 and 27'01101---------------------0 from group (1 1 16'1010000000000000).
  Merging pattern 27'11111---------------------0 and 27'11101---------------------0 from group (1 1 16'1010000000000000).
  Merging pattern 27'10101---------00-----1-1--1 and 27'10111---------00-----1-1--1 from group (1 1 16'1010000000000000).
  Merging pattern 27'01101---------00-----1-1--1 and 27'01111---------00-----1-1--1 from group (1 1 16'1010000000000000).
  Merging pattern 27'11101---------00-----1-1--1 and 27'11111---------00-----1-1--1 from group (1 1 16'1010000000000000).
  Merging pattern 27'10111---------00-----1-1--1 and 27'10101---------00-----1-1--1 from group (1 1 16'1010000000000000).
  Merging pattern 27'01111---------00-----1-1--1 and 27'01101---------00-----1-1--1 from group (1 1 16'1010000000000000).
  Merging pattern 27'11111---------00-----1-1--1 and 27'11101---------00-----1-1--1 from group (1 1 16'1010000000000000).
  Merging pattern 27'10101---------00-----0----1 and 27'10111---------00-----0----1 from group (1 1 16'1010000000000000).
  Merging pattern 27'01101---------00-----0----1 and 27'01111---------00-----0----1 from group (1 1 16'1010000000000000).
  Merging pattern 27'11101---------00-----0----1 and 27'11111---------00-----0----1 from group (1 1 16'1010000000000000).
  Merging pattern 27'10111---------00-----0----1 and 27'10101---------00-----0----1 from group (1 1 16'1010000000000000).
  Merging pattern 27'01111---------00-----0----1 and 27'01101---------00-----0----1 from group (1 1 16'1010000000000000).
  Merging pattern 27'11111---------00-----0----1 and 27'11101---------00-----0----1 from group (1 1 16'1010000000000000).
  Merging pattern 27'10101---------10----------1 and 27'10111---------10----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'01101---------10----------1 and 27'01111---------10----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'11101---------10----------1 and 27'11111---------10----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'10111---------10----------1 and 27'10101---------10----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'01111---------10----------1 and 27'01101---------10----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'11111---------10----------1 and 27'11101---------10----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'10101----------1----------1 and 27'10111----------1----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'01101----------1----------1 and 27'01111----------1----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'11101----------1----------1 and 27'11111----------1----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'10111----------1----------1 and 27'10101----------1----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'01111----------1----------1 and 27'01101----------1----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'11111----------1----------1 and 27'11101----------1----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'101-1---------------------0 and 27'111-1---------------------0 from group (1 1 16'1010000000000000).
  Merging pattern 27'111-1---------------------0 and 27'101-1---------------------0 from group (1 1 16'1010000000000000).
  Merging pattern 27'101-1---------00-----1-1--1 and 27'111-1---------00-----1-1--1 from group (1 1 16'1010000000000000).
  Merging pattern 27'111-1---------00-----1-1--1 and 27'101-1---------00-----1-1--1 from group (1 1 16'1010000000000000).
  Merging pattern 27'101-1---------00-----0----1 and 27'111-1---------00-----0----1 from group (1 1 16'1010000000000000).
  Merging pattern 27'111-1---------00-----0----1 and 27'101-1---------00-----0----1 from group (1 1 16'1010000000000000).
  Merging pattern 27'101-1---------10----------1 and 27'111-1---------10----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'111-1---------10----------1 and 27'101-1---------10----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'101-1----------1----------1 and 27'111-1----------1----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'111-1----------1----------1 and 27'101-1----------1----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'1-1-0---------------------0 and 27'1-1-1---------------------0 from group (1 1 16'1010000000000000).
  Merging pattern 27'1-1-1---------------------0 and 27'1-1-0---------------------0 from group (1 1 16'1010000000000000).
  Merging pattern 27'1-1-0---------00-----1-1--1 and 27'1-1-1---------00-----1-1--1 from group (1 1 16'1010000000000000).
  Merging pattern 27'1-1-1---------00-----1-1--1 and 27'1-1-0---------00-----1-1--1 from group (1 1 16'1010000000000000).
  Merging pattern 27'1-1-0---------00-----0----1 and 27'1-1-1---------00-----0----1 from group (1 1 16'1010000000000000).
  Merging pattern 27'1-1-1---------00-----0----1 and 27'1-1-0---------00-----0----1 from group (1 1 16'1010000000000000).
  Merging pattern 27'1-1-0---------10----------1 and 27'1-1-1---------10----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'1-1-1---------10----------1 and 27'1-1-0---------10----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'1-1-0----------1----------1 and 27'1-1-1----------1----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'1-1-1----------1----------1 and 27'1-1-0----------1----------1 from group (1 1 16'1010000000000000).
  Merging pattern 27'10101---------00-----1-0--1 and 27'10111---------00-----1-0--1 from group (1 2 16'1001000000000000).
  Merging pattern 27'01101---------00-----1-0--1 and 27'01111---------00-----1-0--1 from group (1 2 16'1001000000000000).
  Merging pattern 27'11101---------00-----1-0--1 and 27'11111---------00-----1-0--1 from group (1 2 16'1001000000000000).
  Merging pattern 27'10111---------00-----1-0--1 and 27'10101---------00-----1-0--1 from group (1 2 16'1001000000000000).
  Merging pattern 27'01111---------00-----1-0--1 and 27'01101---------00-----1-0--1 from group (1 2 16'1001000000000000).
  Merging pattern 27'11111---------00-----1-0--1 and 27'11101---------00-----1-0--1 from group (1 2 16'1001000000000000).
  Merging pattern 27'101-1---------00-----1-0--1 and 27'111-1---------00-----1-0--1 from group (1 2 16'1001000000000000).
  Merging pattern 27'111-1---------00-----1-0--1 and 27'101-1---------00-----1-0--1 from group (1 2 16'1001000000000000).
  Merging pattern 27'1-1-0---------00-----1-0--1 and 27'1-1-1---------00-----1-0--1 from group (1 2 16'1001000000000000).
  Merging pattern 27'1-1-1---------00-----1-0--1 and 27'1-1-0---------00-----1-0--1 from group (1 2 16'1001000000000000).
  Merging pattern 27'10101--------0--------1---1 and 27'10111--------0--------1---1 from group (2 0 16'0100000000000010).
  Merging pattern 27'01101--------0--------1---1 and 27'01111--------0--------1---1 from group (2 0 16'0100000000000010).
  Merging pattern 27'11101--------0--------1---1 and 27'11111--------0--------1---1 from group (2 0 16'0100000000000010).
  Merging pattern 27'10111--------0--------1---1 and 27'10101--------0--------1---1 from group (2 0 16'0100000000000010).
  Merging pattern 27'01111--------0--------1---1 and 27'01101--------0--------1---1 from group (2 0 16'0100000000000010).
  Merging pattern 27'11111--------0--------1---1 and 27'11101--------0--------1---1 from group (2 0 16'0100000000000010).
  Merging pattern 27'101-1--------0--------1---1 and 27'111-1--------0--------1---1 from group (2 0 16'0100000000000010).
  Merging pattern 27'111-1--------0--------1---1 and 27'101-1--------0--------1---1 from group (2 0 16'0100000000000010).
  Merging pattern 27'1-1-0--------0--------1---1 and 27'1-1-1--------0--------1---1 from group (2 0 16'0100000000000010).
  Merging pattern 27'1-1-1--------0--------1---1 and 27'1-1-0--------0--------1---1 from group (2 0 16'0100000000000010).
  Merging pattern 27'10101---------------------0 and 27'10111---------------------0 from group (2 1 16'0010000000000010).
  Merging pattern 27'01101---------------------0 and 27'01111---------------------0 from group (2 1 16'0010000000000010).
  Merging pattern 27'11101---------------------0 and 27'11111---------------------0 from group (2 1 16'0010000000000010).
  Merging pattern 27'10111---------------------0 and 27'10101---------------------0 from group (2 1 16'0010000000000010).
  Merging pattern 27'01111---------------------0 and 27'01101---------------------0 from group (2 1 16'0010000000000010).
  Merging pattern 27'11111---------------------0 and 27'11101---------------------0 from group (2 1 16'0010000000000010).
  Merging pattern 27'10101--------1--------1---1 and 27'10111--------1--------1---1 from group (2 1 16'0010000000000010).
  Merging pattern 27'01101--------1--------1---1 and 27'01111--------1--------1---1 from group (2 1 16'0010000000000010).
  Merging pattern 27'11101--------1--------1---1 and 27'11111--------1--------1---1 from group (2 1 16'0010000000000010).
  Merging pattern 27'10111--------1--------1---1 and 27'10101--------1--------1---1 from group (2 1 16'0010000000000010).
  Merging pattern 27'01111--------1--------1---1 and 27'01101--------1--------1---1 from group (2 1 16'0010000000000010).
  Merging pattern 27'11111--------1--------1---1 and 27'11101--------1--------1---1 from group (2 1 16'0010000000000010).
  Merging pattern 27'10101------------1--------1 and 27'10111------------1--------1 from group (2 1 16'0010000000000010).
  Merging pattern 27'01101------------1--------1 and 27'01111------------1--------1 from group (2 1 16'0010000000000010).
  Merging pattern 27'11101------------1--------1 and 27'11111------------1--------1 from group (2 1 16'0010000000000010).
  Merging pattern 27'10111------------1--------1 and 27'10101------------1--------1 from group (2 1 16'0010000000000010).
  Merging pattern 27'01111------------1--------1 and 27'01101------------1--------1 from group (2 1 16'0010000000000010).
  Merging pattern 27'11111------------1--------1 and 27'11101------------1--------1 from group (2 1 16'0010000000000010).
  Merging pattern 27'101-1---------------------0 and 27'111-1---------------------0 from group (2 1 16'0010000000000010).
  Merging pattern 27'111-1---------------------0 and 27'101-1---------------------0 from group (2 1 16'0010000000000010).
  Merging pattern 27'101-1--------1--------1---1 and 27'111-1--------1--------1---1 from group (2 1 16'0010000000000010).
  Merging pattern 27'111-1--------1--------1---1 and 27'101-1--------1--------1---1 from group (2 1 16'0010000000000010).
  Merging pattern 27'101-1------------1--------1 and 27'111-1------------1--------1 from group (2 1 16'0010000000000010).
  Merging pattern 27'111-1------------1--------1 and 27'101-1------------1--------1 from group (2 1 16'0010000000000010).
  Merging pattern 27'1-1-0---------------------0 and 27'1-1-1---------------------0 from group (2 1 16'0010000000000010).
  Merging pattern 27'1-1-1---------------------0 and 27'1-1-0---------------------0 from group (2 1 16'0010000000000010).
  Merging pattern 27'1-1-0--------1--------1---1 and 27'1-1-1--------1--------1---1 from group (2 1 16'0010000000000010).
  Merging pattern 27'1-1-1--------1--------1---1 and 27'1-1-0--------1--------1---1 from group (2 1 16'0010000000000010).
  Merging pattern 27'1-1-0------------1--------1 and 27'1-1-1------------1--------1 from group (2 1 16'0010000000000010).
  Merging pattern 27'1-1-1------------1--------1 and 27'1-1-0------------1--------1 from group (2 1 16'0010000000000010).
  Merging pattern 27'10101-----000---00--0-0---1 and 27'10111-----000---00--0-0---1 from group (2 3 16'0000010000000010).
  Merging pattern 27'01101-----000---00--0-0---1 and 27'01111-----000---00--0-0---1 from group (2 3 16'0000010000000010).
  Merging pattern 27'11101-----000---00--0-0---1 and 27'11111-----000---00--0-0---1 from group (2 3 16'0000010000000010).
  Merging pattern 27'10111-----000---00--0-0---1 and 27'10101-----000---00--0-0---1 from group (2 3 16'0000010000000010).
  Merging pattern 27'01111-----000---00--0-0---1 and 27'01101-----000---00--0-0---1 from group (2 3 16'0000010000000010).
  Merging pattern 27'11111-----000---00--0-0---1 and 27'11101-----000---00--0-0---1 from group (2 3 16'0000010000000010).
  Merging pattern 27'10101-----------1---------1 and 27'10111-----------1---------1 from group (2 3 16'0000010000000010).
  Merging pattern 27'01101-----------1---------1 and 27'01111-----------1---------1 from group (2 3 16'0000010000000010).
  Merging pattern 27'11101-----------1---------1 and 27'11111-----------1---------1 from group (2 3 16'0000010000000010).
  Merging pattern 27'10111-----------1---------1 and 27'10101-----------1---------1 from group (2 3 16'0000010000000010).
  Merging pattern 27'01111-----------1---------1 and 27'01101-----------1---------1 from group (2 3 16'0000010000000010).
  Merging pattern 27'11111-----------1---------1 and 27'11101-----------1---------1 from group (2 3 16'0000010000000010).
  Merging pattern 27'101-1-----000---00--0-0---1 and 27'111-1-----000---00--0-0---1 from group (2 3 16'0000010000000010).
  Merging pattern 27'111-1-----000---00--0-0---1 and 27'101-1-----000---00--0-0---1 from group (2 3 16'0000010000000010).
  Merging pattern 27'101-1-----------1---------1 and 27'111-1-----------1---------1 from group (2 3 16'0000010000000010).
  Merging pattern 27'111-1-----------1---------1 and 27'101-1-----------1---------1 from group (2 3 16'0000010000000010).
  Merging pattern 27'1-1-0-----000---00--0-0---1 and 27'1-1-1-----000---00--0-0---1 from group (2 3 16'0000010000000010).
  Merging pattern 27'1-1-1-----000---00--0-0---1 and 27'1-1-0-----000---00--0-0---1 from group (2 3 16'0000010000000010).
  Merging pattern 27'1-1-0-----------1---------1 and 27'1-1-1-----------1---------1 from group (2 3 16'0000010000000010).
  Merging pattern 27'1-1-1-----------1---------1 and 27'1-1-0-----------1---------1 from group (2 3 16'0000010000000010).
  Merging pattern 27'10101-----100---00----0---1 and 27'10111-----100---00----0---1 from group (2 4 16'0000001000000010).
  Merging pattern 27'01101-----100---00----0---1 and 27'01111-----100---00----0---1 from group (2 4 16'0000001000000010).
  Merging pattern 27'11101-----100---00----0---1 and 27'11111-----100---00----0---1 from group (2 4 16'0000001000000010).
  Merging pattern 27'10111-----100---00----0---1 and 27'10101-----100---00----0---1 from group (2 4 16'0000001000000010).
  Merging pattern 27'01111-----100---00----0---1 and 27'01101-----100---00----0---1 from group (2 4 16'0000001000000010).
  Merging pattern 27'11111-----100---00----0---1 and 27'11101-----100---00----0---1 from group (2 4 16'0000001000000010).
  Merging pattern 27'10101------1--------------1 and 27'10111------1--------------1 from group (2 4 16'0000001000000010).
  Merging pattern 27'01101------1--------------1 and 27'01111------1--------------1 from group (2 4 16'0000001000000010).
  Merging pattern 27'11101------1--------------1 and 27'11111------1--------------1 from group (2 4 16'0000001000000010).
  Merging pattern 27'10111------1--------------1 and 27'10101------1--------------1 from group (2 4 16'0000001000000010).
  Merging pattern 27'01111------1--------------1 and 27'01101------1--------------1 from group (2 4 16'0000001000000010).
  Merging pattern 27'11111------1--------------1 and 27'11101------1--------------1 from group (2 4 16'0000001000000010).
  Merging pattern 27'101-1-----100---00----0---1 and 27'111-1-----100---00----0---1 from group (2 4 16'0000001000000010).
  Merging pattern 27'111-1-----100---00----0---1 and 27'101-1-----100---00----0---1 from group (2 4 16'0000001000000010).
  Merging pattern 27'101-1------1--------------1 and 27'111-1------1--------------1 from group (2 4 16'0000001000000010).
  Merging pattern 27'111-1------1--------------1 and 27'101-1------1--------------1 from group (2 4 16'0000001000000010).
  Merging pattern 27'1-1-0-----100---00----0---1 and 27'1-1-1-----100---00----0---1 from group (2 4 16'0000001000000010).
  Merging pattern 27'1-1-1-----100---00----0---1 and 27'1-1-0-----100---00----0---1 from group (2 4 16'0000001000000010).
  Merging pattern 27'1-1-0------1--------------1 and 27'1-1-1------1--------------1 from group (2 4 16'0000001000000010).
  Merging pattern 27'1-1-1------1--------------1 and 27'1-1-0------1--------------1 from group (2 4 16'0000001000000010).
  Merging pattern 27'10101------00---00--1-0---1 and 27'10111------00---00--1-0---1 from group (2 5 16'0000000100000010).
  Merging pattern 27'01101------00---00--1-0---1 and 27'01111------00---00--1-0---1 from group (2 5 16'0000000100000010).
  Merging pattern 27'11101------00---00--1-0---1 and 27'11111------00---00--1-0---1 from group (2 5 16'0000000100000010).
  Merging pattern 27'10111------00---00--1-0---1 and 27'10101------00---00--1-0---1 from group (2 5 16'0000000100000010).
  Merging pattern 27'01111------00---00--1-0---1 and 27'01101------00---00--1-0---1 from group (2 5 16'0000000100000010).
  Merging pattern 27'11111------00---00--1-0---1 and 27'11101------00---00--1-0---1 from group (2 5 16'0000000100000010).
  Merging pattern 27'101-1------00---00--1-0---1 and 27'111-1------00---00--1-0---1 from group (2 5 16'0000000100000010).
  Merging pattern 27'111-1------00---00--1-0---1 and 27'101-1------00---00--1-0---1 from group (2 5 16'0000000100000010).
  Merging pattern 27'1-1-0------00---00--1-0---1 and 27'1-1-1------00---00--1-0---1 from group (2 5 16'0000000100000010).
  Merging pattern 27'1-1-1------00---00--1-0---1 and 27'1-1-0------00---00--1-0---1 from group (2 5 16'0000000100000010).
  Merging pattern 27'10101-------1-------------1 and 27'10111-------1-------------1 from group (2 6 16'0000000010000010).
  Merging pattern 27'01101-------1-------------1 and 27'01111-------1-------------1 from group (2 6 16'0000000010000010).
  Merging pattern 27'11101-------1-------------1 and 27'11111-------1-------------1 from group (2 6 16'0000000010000010).
  Merging pattern 27'10111-------1-------------1 and 27'10101-------1-------------1 from group (2 6 16'0000000010000010).
  Merging pattern 27'01111-------1-------------1 and 27'01101-------1-------------1 from group (2 6 16'0000000010000010).
  Merging pattern 27'11111-------1-------------1 and 27'11101-------1-------------1 from group (2 6 16'0000000010000010).
  Merging pattern 27'101-1-------1-------------1 and 27'111-1-------1-------------1 from group (2 6 16'0000000010000010).
  Merging pattern 27'111-1-------1-------------1 and 27'101-1-------1-------------1 from group (2 6 16'0000000010000010).
  Merging pattern 27'1-1-0-------1-------------1 and 27'1-1-1-------1-------------1 from group (2 6 16'0000000010000010).
  Merging pattern 27'1-1-1-------1-------------1 and 27'1-1-0-------1-------------1 from group (2 6 16'0000000010000010).
  Merging pattern 27'10101---------------------0 and 27'10111---------------------0 from group (3 1 16'0010000000001000).
  Merging pattern 27'01101---------------------0 and 27'01111---------------------0 from group (3 1 16'0010000000001000).
  Merging pattern 27'11101---------------------0 and 27'11111---------------------0 from group (3 1 16'0010000000001000).
  Merging pattern 27'10111---------------------0 and 27'10101---------------------0 from group (3 1 16'0010000000001000).
  Merging pattern 27'01111---------------------0 and 27'01101---------------------0 from group (3 1 16'0010000000001000).
  Merging pattern 27'11111---------------------0 and 27'11101---------------------0 from group (3 1 16'0010000000001000).
  Merging pattern 27'10101--------------1----1-1 and 27'10111--------------1----1-1 from group (3 1 16'0010000000001000).
  Merging pattern 27'01101--------------1----1-1 and 27'01111--------------1----1-1 from group (3 1 16'0010000000001000).
  Merging pattern 27'11101--------------1----1-1 and 27'11111--------------1----1-1 from group (3 1 16'0010000000001000).
  Merging pattern 27'10111--------------1----1-1 and 27'10101--------------1----1-1 from group (3 1 16'0010000000001000).
  Merging pattern 27'01111--------------1----1-1 and 27'01101--------------1----1-1 from group (3 1 16'0010000000001000).
  Merging pattern 27'11111--------------1----1-1 and 27'11101--------------1----1-1 from group (3 1 16'0010000000001000).
  Merging pattern 27'10101--------------0------1 and 27'10111--------------0------1 from group (3 1 16'0010000000001000).
  Merging pattern 27'01101--------------0------1 and 27'01111--------------0------1 from group (3 1 16'0010000000001000).
  Merging pattern 27'11101--------------0------1 and 27'11111--------------0------1 from group (3 1 16'0010000000001000).
  Merging pattern 27'10111--------------0------1 and 27'10101--------------0------1 from group (3 1 16'0010000000001000).
  Merging pattern 27'01111--------------0------1 and 27'01101--------------0------1 from group (3 1 16'0010000000001000).
  Merging pattern 27'11111--------------0------1 and 27'11101--------------0------1 from group (3 1 16'0010000000001000).
  Merging pattern 27'101-1---------------------0 and 27'111-1---------------------0 from group (3 1 16'0010000000001000).
  Merging pattern 27'111-1---------------------0 and 27'101-1---------------------0 from group (3 1 16'0010000000001000).
  Merging pattern 27'101-1--------------1----1-1 and 27'111-1--------------1----1-1 from group (3 1 16'0010000000001000).
  Merging pattern 27'111-1--------------1----1-1 and 27'101-1--------------1----1-1 from group (3 1 16'0010000000001000).
  Merging pattern 27'101-1--------------0------1 and 27'111-1--------------0------1 from group (3 1 16'0010000000001000).
  Merging pattern 27'111-1--------------0------1 and 27'101-1--------------0------1 from group (3 1 16'0010000000001000).
  Merging pattern 27'1-1-0---------------------0 and 27'1-1-1---------------------0 from group (3 1 16'0010000000001000).
  Merging pattern 27'1-1-1---------------------0 and 27'1-1-0---------------------0 from group (3 1 16'0010000000001000).
  Merging pattern 27'1-1-0--------------1----1-1 and 27'1-1-1--------------1----1-1 from group (3 1 16'0010000000001000).
  Merging pattern 27'1-1-1--------------1----1-1 and 27'1-1-0--------------1----1-1 from group (3 1 16'0010000000001000).
  Merging pattern 27'1-1-0--------------0------1 and 27'1-1-1--------------0------1 from group (3 1 16'0010000000001000).
  Merging pattern 27'1-1-1--------------0------1 and 27'1-1-0--------------0------1 from group (3 1 16'0010000000001000).
  Merging pattern 27'10101--------------1----0-1 and 27'10111--------------1----0-1 from group (3 3 16'0000010000001000).
  Merging pattern 27'01101--------------1----0-1 and 27'01111--------------1----0-1 from group (3 3 16'0000010000001000).
  Merging pattern 27'11101--------------1----0-1 and 27'11111--------------1----0-1 from group (3 3 16'0000010000001000).
  Merging pattern 27'10111--------------1----0-1 and 27'10101--------------1----0-1 from group (3 3 16'0000010000001000).
  Merging pattern 27'01111--------------1----0-1 and 27'01101--------------1----0-1 from group (3 3 16'0000010000001000).
  Merging pattern 27'11111--------------1----0-1 and 27'11101--------------1----0-1 from group (3 3 16'0000010000001000).
  Merging pattern 27'101-1--------------1----0-1 and 27'111-1--------------1----0-1 from group (3 3 16'0000010000001000).
  Merging pattern 27'111-1--------------1----0-1 and 27'101-1--------------1----0-1 from group (3 3 16'0000010000001000).
  Merging pattern 27'1-1-0--------------1----0-1 and 27'1-1-1--------------1----0-1 from group (3 3 16'0000010000001000).
  Merging pattern 27'1-1-1--------------1----0-1 and 27'1-1-0--------------1----0-1 from group (3 3 16'0000010000001000).
  Merging pattern 27'10101---------------------0 and 27'10111---------------------0 from group (4 1 16'0010000000010000).
  Merging pattern 27'01101---------------------0 and 27'01111---------------------0 from group (4 1 16'0010000000010000).
  Merging pattern 27'11101---------------------0 and 27'11111---------------------0 from group (4 1 16'0010000000010000).
  Merging pattern 27'10111---------------------0 and 27'10101---------------------0 from group (4 1 16'0010000000010000).
  Merging pattern 27'01111---------------------0 and 27'01101---------------------0 from group (4 1 16'0010000000010000).
  Merging pattern 27'11111---------------------0 and 27'11101---------------------0 from group (4 1 16'0010000000010000).
  Merging pattern 27'10101--1------------------1 and 27'10111--1------------------1 from group (4 1 16'0010000000010000).
  Merging pattern 27'01101--1------------------1 and 27'01111--1------------------1 from group (4 1 16'0010000000010000).
  Merging pattern 27'11101--1------------------1 and 27'11111--1------------------1 from group (4 1 16'0010000000010000).
  Merging pattern 27'10111--1------------------1 and 27'10101--1------------------1 from group (4 1 16'0010000000010000).
  Merging pattern 27'01111--1------------------1 and 27'01101--1------------------1 from group (4 1 16'0010000000010000).
  Merging pattern 27'11111--1------------------1 and 27'11101--1------------------1 from group (4 1 16'0010000000010000).
  Merging pattern 27'101-1---------------------0 and 27'111-1---------------------0 from group (4 1 16'0010000000010000).
  Merging pattern 27'111-1---------------------0 and 27'101-1---------------------0 from group (4 1 16'0010000000010000).
  Merging pattern 27'101-1--1------------------1 and 27'111-1--1------------------1 from group (4 1 16'0010000000010000).
  Merging pattern 27'111-1--1------------------1 and 27'101-1--1------------------1 from group (4 1 16'0010000000010000).
  Merging pattern 27'1-1-0---------------------0 and 27'1-1-1---------------------0 from group (4 1 16'0010000000010000).
  Merging pattern 27'1-1-1---------------------0 and 27'1-1-0---------------------0 from group (4 1 16'0010000000010000).
  Merging pattern 27'1-1-0--1------------------1 and 27'1-1-1--1------------------1 from group (4 1 16'0010000000010000).
  Merging pattern 27'1-1-1--1------------------1 and 27'1-1-0--1------------------1 from group (4 1 16'0010000000010000).
  Merging pattern 27'10101--0------------------1 and 27'10111--0------------------1 from group (4 4 16'0000001000010000).
  Merging pattern 27'01101--0------------------1 and 27'01111--0------------------1 from group (4 4 16'0000001000010000).
  Merging pattern 27'11101--0------------------1 and 27'11111--0------------------1 from group (4 4 16'0000001000010000).
  Merging pattern 27'10111--0------------------1 and 27'10101--0------------------1 from group (4 4 16'0000001000010000).
  Merging pattern 27'01111--0------------------1 and 27'01101--0------------------1 from group (4 4 16'0000001000010000).
  Merging pattern 27'11111--0------------------1 and 27'11101--0------------------1 from group (4 4 16'0000001000010000).
  Merging pattern 27'101-1--0------------------1 and 27'111-1--0------------------1 from group (4 4 16'0000001000010000).
  Merging pattern 27'111-1--0------------------1 and 27'101-1--0------------------1 from group (4 4 16'0000001000010000).
  Merging pattern 27'1-1-0--0------------------1 and 27'1-1-1--0------------------1 from group (4 4 16'0000001000010000).
  Merging pattern 27'1-1-1--0------------------1 and 27'1-1-0--0------------------1 from group (4 4 16'0000001000010000).
  Merging pattern 27'10101---------------------0 and 27'10111---------------------0 from group (5 1 16'0010000000100000).
  Merging pattern 27'01101---------------------0 and 27'01111---------------------0 from group (5 1 16'0010000000100000).
  Merging pattern 27'11101---------------------0 and 27'11111---------------------0 from group (5 1 16'0010000000100000).
  Merging pattern 27'10111---------------------0 and 27'10101---------------------0 from group (5 1 16'0010000000100000).
  Merging pattern 27'01111---------------------0 and 27'01101---------------------0 from group (5 1 16'0010000000100000).
  Merging pattern 27'11111---------------------0 and 27'11101---------------------0 from group (5 1 16'0010000000100000).
  Merging pattern 27'1010111-------------------1 and 27'1011111-------------------1 from group (5 1 16'0010000000100000).
  Merging pattern 27'0110111-------------------1 and 27'0111111-------------------1 from group (5 1 16'0010000000100000).
  Merging pattern 27'1110111-------------------1 and 27'1111111-------------------1 from group (5 1 16'0010000000100000).
  Merging pattern 27'1011111-------------------1 and 27'1010111-------------------1 from group (5 1 16'0010000000100000).
  Merging pattern 27'0111111-------------------1 and 27'0110111-------------------1 from group (5 1 16'0010000000100000).
  Merging pattern 27'1111111-------------------1 and 27'1110111-------------------1 from group (5 1 16'0010000000100000).
  Merging pattern 27'101-1---------------------0 and 27'111-1---------------------0 from group (5 1 16'0010000000100000).
  Merging pattern 27'111-1---------------------0 and 27'101-1---------------------0 from group (5 1 16'0010000000100000).
  Merging pattern 27'101-111-------------------1 and 27'111-111-------------------1 from group (5 1 16'0010000000100000).
  Merging pattern 27'111-111-------------------1 and 27'101-111-------------------1 from group (5 1 16'0010000000100000).
  Merging pattern 27'1-1-0---------------------0 and 27'1-1-1---------------------0 from group (5 1 16'0010000000100000).
  Merging pattern 27'1-1-1---------------------0 and 27'1-1-0---------------------0 from group (5 1 16'0010000000100000).
  Merging pattern 27'1-1-011-------------------1 and 27'1-1-111-------------------1 from group (5 1 16'0010000000100000).
  Merging pattern 27'1-1-111-------------------1 and 27'1-1-011-------------------1 from group (5 1 16'0010000000100000).
  Merging pattern 27'10101-0-------------------1 and 27'10111-0-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'01101-0-------------------1 and 27'01111-0-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'11101-0-------------------1 and 27'11111-0-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'10111-0-------------------1 and 27'10101-0-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'01111-0-------------------1 and 27'01101-0-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'11111-0-------------------1 and 27'11101-0-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'1010101-------------------1 and 27'1011101-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'0110101-------------------1 and 27'0111101-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'1110101-------------------1 and 27'1111101-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'1011101-------------------1 and 27'1010101-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'0111101-------------------1 and 27'0110101-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'1111101-------------------1 and 27'1110101-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'101-1-0-------------------1 and 27'111-1-0-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'111-1-0-------------------1 and 27'101-1-0-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'101-101-------------------1 and 27'111-101-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'111-101-------------------1 and 27'101-101-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'1-1-0-0-------------------1 and 27'1-1-1-0-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'1-1-1-0-------------------1 and 27'1-1-0-0-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'1-1-001-------------------1 and 27'1-1-101-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'1-1-101-------------------1 and 27'1-1-001-------------------1 from group (5 5 16'0000000100100000).
  Merging pattern 27'10101---------------------0 and 27'10111---------------------0 from group (6 1 16'0010000001000000).
  Merging pattern 27'01101---------------------0 and 27'01111---------------------0 from group (6 1 16'0010000001000000).
  Merging pattern 27'11101---------------------0 and 27'11111---------------------0 from group (6 1 16'0010000001000000).
  Merging pattern 27'10111---------------------0 and 27'10101---------------------0 from group (6 1 16'0010000001000000).
  Merging pattern 27'01111---------------------0 and 27'01101---------------------0 from group (6 1 16'0010000001000000).
  Merging pattern 27'11111---------------------0 and 27'11101---------------------0 from group (6 1 16'0010000001000000).
  Merging pattern 27'1010111-------------------1 and 27'1011111-------------------1 from group (6 1 16'0010000001000000).
  Merging pattern 27'0110111-------------------1 and 27'0111111-------------------1 from group (6 1 16'0010000001000000).
  Merging pattern 27'1110111-------------------1 and 27'1111111-------------------1 from group (6 1 16'0010000001000000).
  Merging pattern 27'1011111-------------------1 and 27'1010111-------------------1 from group (6 1 16'0010000001000000).
  Merging pattern 27'0111111-------------------1 and 27'0110111-------------------1 from group (6 1 16'0010000001000000).
  Merging pattern 27'1111111-------------------1 and 27'1110111-------------------1 from group (6 1 16'0010000001000000).
  Merging pattern 27'101-1---------------------0 and 27'111-1---------------------0 from group (6 1 16'0010000001000000).
  Merging pattern 27'111-1---------------------0 and 27'101-1---------------------0 from group (6 1 16'0010000001000000).
  Merging pattern 27'101-111-------------------1 and 27'111-111-------------------1 from group (6 1 16'0010000001000000).
  Merging pattern 27'111-111-------------------1 and 27'101-111-------------------1 from group (6 1 16'0010000001000000).
  Merging pattern 27'1-1-0---------------------0 and 27'1-1-1---------------------0 from group (6 1 16'0010000001000000).
  Merging pattern 27'1-1-1---------------------0 and 27'1-1-0---------------------0 from group (6 1 16'0010000001000000).
  Merging pattern 27'1-1-011-------------------1 and 27'1-1-111-------------------1 from group (6 1 16'0010000001000000).
  Merging pattern 27'1-1-111-------------------1 and 27'1-1-011-------------------1 from group (6 1 16'0010000001000000).
  Merging pattern 27'10101-0-------------------1 and 27'10111-0-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'01101-0-------------------1 and 27'01111-0-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'11101-0-------------------1 and 27'11111-0-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'10111-0-------------------1 and 27'10101-0-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'01111-0-------------------1 and 27'01101-0-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'11111-0-------------------1 and 27'11101-0-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'1010101-------------------1 and 27'1011101-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'0110101-------------------1 and 27'0111101-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'1110101-------------------1 and 27'1111101-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'1011101-------------------1 and 27'1010101-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'0111101-------------------1 and 27'0110101-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'1111101-------------------1 and 27'1110101-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'101-1-0-------------------1 and 27'111-1-0-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'111-1-0-------------------1 and 27'101-1-0-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'101-101-------------------1 and 27'111-101-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'111-101-------------------1 and 27'101-101-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'1-1-0-0-------------------1 and 27'1-1-1-0-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'1-1-1-0-------------------1 and 27'1-1-0-0-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'1-1-001-------------------1 and 27'1-1-101-------------------1 from group (6 6 16'0000000011000000).
  Merging pattern 27'1-1-101-------------------1 and 27'1-1-001-------------------1 from group (6 6 16'0000000011000000).
  Removing unused input signal $logic_and$./module/alphacore.v:1517$1441_Y.
  Removing unused input signal $logic_and$./module/alphacore.v:1508$1439_Y.
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$5395.
  Removing unused input signal \cpi_int_ready.
Optimizing FSM `$fsm$\state$5423' from module `\spimemio'.

7.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..
Removed 78 unused cells and 78 unused wires.
<suppressed ~80 debug messages>

7.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\cpu_state$5408' from module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
  Removing unused output signal $0\cpu_state[7:0] [0].
  Removing unused output signal $0\cpu_state[7:0] [1].
  Removing unused output signal $0\cpu_state[7:0] [2].
  Removing unused output signal $0\cpu_state[7:0] [3].
  Removing unused output signal $0\cpu_state[7:0] [4].
  Removing unused output signal $0\cpu_state[7:0] [5].
  Removing unused output signal $0\cpu_state[7:0] [6].
  Removing unused output signal $0\cpu_state[7:0] [7].
Optimizing FSM `$fsm$\mem_wordsize$5418' from module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
  Removing unused output signal $0\mem_wordsize[1:0] [0].
  Removing unused output signal $0\mem_wordsize[1:0] [1].
Optimizing FSM `$fsm$\state$5423' from module `\spimemio'.
  Removing unused output signal $0\state[3:0] [0].
  Removing unused output signal $0\state[3:0] [1].
  Removing unused output signal $0\state[3:0] [2].
  Removing unused output signal $0\state[3:0] [3].

7.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\cpu_state$5408' from module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  10000000 -> ------1
  01000000 -> -----1-
  00100000 -> ----1--
  00001000 -> ---1---
  00000100 -> --1----
  00000010 -> -1-----
  00000001 -> 1------
Recoding FSM `$fsm$\mem_wordsize$5418' from module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\state$5423' from module `\spimemio' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ------------1
  1000 -> -----------1-
  0100 -> ----------1--
  1100 -> ---------1---
  0010 -> --------1----
  1010 -> -------1-----
  0110 -> ------1------
  0001 -> -----1-------
  1001 -> ----1--------
  0101 -> ---1---------
  0011 -> --1----------
  1011 -> -1-----------
  0111 -> 1------------

7.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\cpu_state$5408' from module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore':
-------------------------------------

  Information on FSM $fsm$\cpu_state$5408 (\cpu_state):

  Number of input signals:   23
  Number of output signals:   8
  Number of state bits:       7

  Input signals:
    0: \resetn
    1: \mem_done
    2: \instr_jal
    3: \instr_trap
    4: \decoder_trigger
    5: \is_sb_sh_sw
    6: \is_beq_bne_blt_bge_bltu_bgeu
    7: $auto$opt_reduce.cc:134:opt_pmux$5315
    8: $auto$opt_reduce.cc:134:opt_pmux$5317
    9: $logic_and$./module/alphacore.v:1278$1391_Y
   10: $logic_and$./module/alphacore.v:1288$1399_Y
   11: $logic_and$./module/alphacore.v:1359$1414_Y
   12: $logic_and$./module/alphacore.v:1436$1428_Y
   13: $logic_and$./module/alphacore.v:1444$1429_Y
   14: $logic_and$./module/alphacore.v:1481$1434_Y
   15: $eq$./module/alphacore.v:1571$1456_Y
   16: $logic_or$./module/alphacore.v:1597$1474_Y
   17: $logic_and$./module/alphacore.v:1612$1478_Y
   18: $logic_and$./module/alphacore.v:1662$1492_Y
   19: $logic_and$./module/alphacore.v:1663$1495_Y
   20: $logic_and$./module/alphacore.v:1665$1499_Y
   21: $logic_and$./module/alphacore.v:1670$1502_Y
   22: $logic_and$./module/alphacore.v:1678$1508_Y

  Output signals:
    0: $procmux$2367_CMP
    1: $procmux$2365_CMP
    2: $procmux$2364_CMP
    3: $procmux$2363_CMP
    4: $procmux$2362_CMP
    5: $procmux$2361_CMP
    6: $procmux$2360_CMP
    7: $eq$./module/alphacore.v:1087$1323_Y

  State encoding:
    0:  7'------1
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 23'0---0-----------------1   ->     0 8'00000001
      1:     0 23'00-01-----------------1   ->     0 8'00000001
      2:     0 23'00111-----------------1   ->     0 8'00000001
      3:     0 23'011-1-----------------1   ->     0 8'00000001
      4:     0 23'1-1-------------------1   ->     0 8'00000001
      5:     0 23'00011------------------   ->     0 8'00000001
      6:     0 23'010-1------------------   ->     0 8'00000001
      7:     0 23'1-0--------------------   ->     0 8'00000001
      8:     0 23'0---0-----------------0   ->     1 8'00000001
      9:     0 23'00-01-----------------0   ->     1 8'00000001
     10:     0 23'00111-----------------0   ->     1 8'00000001
     11:     0 23'011-1-----------------0   ->     1 8'00000001
     12:     0 23'1-1-------------------0   ->     1 8'00000001
     13:     1 23'00011------------------   ->     0 8'10000000
     14:     1 23'010-1------------------   ->     0 8'10000000
     15:     1 23'1-0--------------------   ->     0 8'10000000
     16:     1 23'0---0-----------------0   ->     1 8'10000000
     17:     1 23'00-01-----------------0   ->     1 8'10000000
     18:     1 23'00111-----------------0   ->     1 8'10000000
     19:     1 23'011-1-----------------0   ->     1 8'10000000
     20:     1 23'1-1-------------------0   ->     1 8'10000000
     21:     1 23'0---0-------00----1-1-1   ->     1 8'10000000
     22:     1 23'00-01-------00----1-1-1   ->     1 8'10000000
     23:     1 23'00111-------00----1-1-1   ->     1 8'10000000
     24:     1 23'011-1-------00----1-1-1   ->     1 8'10000000
     25:     1 23'1-1---------00----1-1-1   ->     1 8'10000000
     26:     1 23'0---0-------00----0---1   ->     1 8'10000000
     27:     1 23'00-01-------00----0---1   ->     1 8'10000000
     28:     1 23'00111-------00----0---1   ->     1 8'10000000
     29:     1 23'011-1-------00----0---1   ->     1 8'10000000
     30:     1 23'1-1---------00----0---1   ->     1 8'10000000
     31:     1 23'0---0-------10--------1   ->     1 8'10000000
     32:     1 23'00-01-------10--------1   ->     1 8'10000000
     33:     1 23'00111-------10--------1   ->     1 8'10000000
     34:     1 23'011-1-------10--------1   ->     1 8'10000000
     35:     1 23'1-1---------10--------1   ->     1 8'10000000
     36:     1 23'0---0--------1--------1   ->     1 8'10000000
     37:     1 23'00-01--------1--------1   ->     1 8'10000000
     38:     1 23'00111--------1--------1   ->     1 8'10000000
     39:     1 23'011-1--------1--------1   ->     1 8'10000000
     40:     1 23'1-1----------1--------1   ->     1 8'10000000
     41:     1 23'0---0-------00----1-0-1   ->     2 8'10000000
     42:     1 23'00-01-------00----1-0-1   ->     2 8'10000000
     43:     1 23'00111-------00----1-0-1   ->     2 8'10000000
     44:     1 23'011-1-------00----1-0-1   ->     2 8'10000000
     45:     1 23'1-1---------00----1-0-1   ->     2 8'10000000
     46:     2 23'0---0------0-------1--1   ->     0 8'00000010
     47:     2 23'00-01------0-------1--1   ->     0 8'00000010
     48:     2 23'00111------0-------1--1   ->     0 8'00000010
     49:     2 23'011-1------0-------1--1   ->     0 8'00000010
     50:     2 23'1-1--------0-------1--1   ->     0 8'00000010
     51:     2 23'00011------------------   ->     0 8'00000010
     52:     2 23'010-1------------------   ->     0 8'00000010
     53:     2 23'1-0--------------------   ->     0 8'00000010
     54:     2 23'0---0-----------------0   ->     1 8'00000010
     55:     2 23'00-01-----------------0   ->     1 8'00000010
     56:     2 23'00111-----------------0   ->     1 8'00000010
     57:     2 23'011-1-----------------0   ->     1 8'00000010
     58:     2 23'1-1-------------------0   ->     1 8'00000010
     59:     2 23'0---0------1-------1--1   ->     1 8'00000010
     60:     2 23'00-01------1-------1--1   ->     1 8'00000010
     61:     2 23'00111------1-------1--1   ->     1 8'00000010
     62:     2 23'011-1------1-------1--1   ->     1 8'00000010
     63:     2 23'1-1--------1-------1--1   ->     1 8'00000010
     64:     2 23'0---0----------1------1   ->     1 8'00000010
     65:     2 23'00-01----------1------1   ->     1 8'00000010
     66:     2 23'00111----------1------1   ->     1 8'00000010
     67:     2 23'011-1----------1------1   ->     1 8'00000010
     68:     2 23'1-1------------1------1   ->     1 8'00000010
     69:     2 23'0---0---000---00-0-0--1   ->     3 8'00000010
     70:     2 23'00-01---000---00-0-0--1   ->     3 8'00000010
     71:     2 23'00111---000---00-0-0--1   ->     3 8'00000010
     72:     2 23'011-1---000---00-0-0--1   ->     3 8'00000010
     73:     2 23'1-1-----000---00-0-0--1   ->     3 8'00000010
     74:     2 23'0---0---------1-------1   ->     3 8'00000010
     75:     2 23'00-01---------1-------1   ->     3 8'00000010
     76:     2 23'00111---------1-------1   ->     3 8'00000010
     77:     2 23'011-1---------1-------1   ->     3 8'00000010
     78:     2 23'1-1-----------1-------1   ->     3 8'00000010
     79:     2 23'0---0---100---00---0--1   ->     4 8'00000010
     80:     2 23'00-01---100---00---0--1   ->     4 8'00000010
     81:     2 23'00111---100---00---0--1   ->     4 8'00000010
     82:     2 23'011-1---100---00---0--1   ->     4 8'00000010
     83:     2 23'1-1-----100---00---0--1   ->     4 8'00000010
     84:     2 23'0---0----1------------1   ->     4 8'00000010
     85:     2 23'00-01----1------------1   ->     4 8'00000010
     86:     2 23'00111----1------------1   ->     4 8'00000010
     87:     2 23'011-1----1------------1   ->     4 8'00000010
     88:     2 23'1-1------1------------1   ->     4 8'00000010
     89:     2 23'0---0----00---00-1-0--1   ->     5 8'00000010
     90:     2 23'00-01----00---00-1-0--1   ->     5 8'00000010
     91:     2 23'00111----00---00-1-0--1   ->     5 8'00000010
     92:     2 23'011-1----00---00-1-0--1   ->     5 8'00000010
     93:     2 23'1-1------00---00-1-0--1   ->     5 8'00000010
     94:     2 23'0---0-----1-----------1   ->     6 8'00000010
     95:     2 23'00-01-----1-----------1   ->     6 8'00000010
     96:     2 23'00111-----1-----------1   ->     6 8'00000010
     97:     2 23'011-1-----1-----------1   ->     6 8'00000010
     98:     2 23'1-1-------1-----------1   ->     6 8'00000010
     99:     3 23'00011------------------   ->     0 8'00001000
    100:     3 23'010-1------------------   ->     0 8'00001000
    101:     3 23'1-0--------------------   ->     0 8'00001000
    102:     3 23'0---0-----------------0   ->     1 8'00001000
    103:     3 23'00-01-----------------0   ->     1 8'00001000
    104:     3 23'00111-----------------0   ->     1 8'00001000
    105:     3 23'011-1-----------------0   ->     1 8'00001000
    106:     3 23'1-1-------------------0   ->     1 8'00001000
    107:     3 23'0---0-----------1----11   ->     1 8'00001000
    108:     3 23'00-01-----------1----11   ->     1 8'00001000
    109:     3 23'00111-----------1----11   ->     1 8'00001000
    110:     3 23'011-1-----------1----11   ->     1 8'00001000
    111:     3 23'1-1-------------1----11   ->     1 8'00001000
    112:     3 23'0---0-----------0-----1   ->     1 8'00001000
    113:     3 23'00-01-----------0-----1   ->     1 8'00001000
    114:     3 23'00111-----------0-----1   ->     1 8'00001000
    115:     3 23'011-1-----------0-----1   ->     1 8'00001000
    116:     3 23'1-1-------------0-----1   ->     1 8'00001000
    117:     3 23'0---0-----------1----01   ->     3 8'00001000
    118:     3 23'00-01-----------1----01   ->     3 8'00001000
    119:     3 23'00111-----------1----01   ->     3 8'00001000
    120:     3 23'011-1-----------1----01   ->     3 8'00001000
    121:     3 23'1-1-------------1----01   ->     3 8'00001000
    122:     4 23'00011------------------   ->     0 8'00010000
    123:     4 23'010-1------------------   ->     0 8'00010000
    124:     4 23'1-0--------------------   ->     0 8'00010000
    125:     4 23'0---0-----------------0   ->     1 8'00010000
    126:     4 23'00-01-----------------0   ->     1 8'00010000
    127:     4 23'00111-----------------0   ->     1 8'00010000
    128:     4 23'011-1-----------------0   ->     1 8'00010000
    129:     4 23'1-1-------------------0   ->     1 8'00010000
    130:     4 23'0---0--1--------------1   ->     1 8'00010000
    131:     4 23'00-01--1--------------1   ->     1 8'00010000
    132:     4 23'00111--1--------------1   ->     1 8'00010000
    133:     4 23'011-1--1--------------1   ->     1 8'00010000
    134:     4 23'1-1----1--------------1   ->     1 8'00010000
    135:     4 23'0---0--0--------------1   ->     4 8'00010000
    136:     4 23'00-01--0--------------1   ->     4 8'00010000
    137:     4 23'00111--0--------------1   ->     4 8'00010000
    138:     4 23'011-1--0--------------1   ->     4 8'00010000
    139:     4 23'1-1----0--------------1   ->     4 8'00010000
    140:     5 23'00011------------------   ->     0 8'00100000
    141:     5 23'010-1------------------   ->     0 8'00100000
    142:     5 23'1-0--------------------   ->     0 8'00100000
    143:     5 23'0---0-----------------0   ->     1 8'00100000
    144:     5 23'00-01-----------------0   ->     1 8'00100000
    145:     5 23'00111-----------------0   ->     1 8'00100000
    146:     5 23'011-1-----------------0   ->     1 8'00100000
    147:     5 23'1-1-------------------0   ->     1 8'00100000
    148:     5 23'0---011---------------1   ->     1 8'00100000
    149:     5 23'00-0111---------------1   ->     1 8'00100000
    150:     5 23'0011111---------------1   ->     1 8'00100000
    151:     5 23'011-111---------------1   ->     1 8'00100000
    152:     5 23'1-1--11---------------1   ->     1 8'00100000
    153:     5 23'0---0-0---------------1   ->     5 8'00100000
    154:     5 23'00-01-0---------------1   ->     5 8'00100000
    155:     5 23'00111-0---------------1   ->     5 8'00100000
    156:     5 23'011-1-0---------------1   ->     5 8'00100000
    157:     5 23'1-1---0---------------1   ->     5 8'00100000
    158:     5 23'0---001---------------1   ->     5 8'00100000
    159:     5 23'00-0101---------------1   ->     5 8'00100000
    160:     5 23'0011101---------------1   ->     5 8'00100000
    161:     5 23'011-101---------------1   ->     5 8'00100000
    162:     5 23'1-1--01---------------1   ->     5 8'00100000
    163:     6 23'00011------------------   ->     0 8'01000000
    164:     6 23'010-1------------------   ->     0 8'01000000
    165:     6 23'1-0--------------------   ->     0 8'01000000
    166:     6 23'0---0-----------------0   ->     1 8'01000000
    167:     6 23'00-01-----------------0   ->     1 8'01000000
    168:     6 23'00111-----------------0   ->     1 8'01000000
    169:     6 23'011-1-----------------0   ->     1 8'01000000
    170:     6 23'1-1-------------------0   ->     1 8'01000000
    171:     6 23'0---011---------------1   ->     1 8'01000000
    172:     6 23'00-0111---------------1   ->     1 8'01000000
    173:     6 23'0011111---------------1   ->     1 8'01000000
    174:     6 23'011-111---------------1   ->     1 8'01000000
    175:     6 23'1-1--11---------------1   ->     1 8'01000000
    176:     6 23'0---0-0---------------1   ->     6 8'01000000
    177:     6 23'00-01-0---------------1   ->     6 8'01000000
    178:     6 23'00111-0---------------1   ->     6 8'01000000
    179:     6 23'011-1-0---------------1   ->     6 8'01000000
    180:     6 23'1-1---0---------------1   ->     6 8'01000000
    181:     6 23'0---001---------------1   ->     6 8'01000000
    182:     6 23'00-0101---------------1   ->     6 8'01000000
    183:     6 23'0011101---------------1   ->     6 8'01000000
    184:     6 23'011-101---------------1   ->     6 8'01000000
    185:     6 23'1-1--01---------------1   ->     6 8'01000000

-------------------------------------

FSM `$fsm$\mem_wordsize$5418' from module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore':
-------------------------------------

  Information on FSM $fsm$\mem_wordsize$5418 (\mem_wordsize):

  Number of input signals:   13
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \resetn
    1: \mem_do_rdata
    2: \mem_do_wdata
    3: \instr_lw
    4: \instr_sb
    5: \instr_sh
    6: \instr_sw
    7: $procmux$2361_CMP
    8: $procmux$2360_CMP
    9: $eq$./module/alphacore.v:1087$1323_Y
   10: $logic_or$./module/alphacore.v:1597$1474_Y
   11: $logic_or$./module/alphacore.v:1626$1482_Y
   12: $logic_or$./module/alphacore.v:1627$1483_Y

  Output signals:
    0: $eq$./module/alphacore.v:1663$1493_Y
    1: $eq$./module/alphacore.v:1670$1500_Y
    2: $procmux$4993_CMP

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 13'------------0   ->     0 3'001
      1:     0 13'001-1----0-01   ->     0 3'001
      2:     0 13'--1-1----1-01   ->     0 3'001
      3:     0 13'--1-1------11   ->     0 3'001
      4:     0 13'--1--1000-0-1   ->     0 3'001
      5:     0 13'--1--11---0-1   ->     0 3'001
      6:     0 13'--1--1----1-1   ->     0 3'001
      7:     0 13'---000------1   ->     0 3'001
      8:     0 13'--0--1------1   ->     0 3'001
      9:     0 13'--0-1-------1   ->     0 3'001
     10:     0 13'---1--------1   ->     0 3'001
     11:     0 13'-11-1------01   ->     1 3'001
     12:     0 13'--1--1--1-0-1   ->     1 3'001
     13:     0 13'1-1-1------01   ->     2 3'001
     14:     0 13'--1--1-1--0-1   ->     2 3'001
     15:     1 13'--1-1----1-01   ->     0 3'100
     16:     1 13'--1--11---0-1   ->     0 3'100
     17:     1 13'---1--------1   ->     0 3'100
     18:     1 13'------------0   ->     1 3'100
     19:     1 13'001-1----0-01   ->     1 3'100
     20:     1 13'-11-1------01   ->     1 3'100
     21:     1 13'--1-1------11   ->     1 3'100
     22:     1 13'--1--1000-0-1   ->     1 3'100
     23:     1 13'--1--1--1-0-1   ->     1 3'100
     24:     1 13'--1--1----1-1   ->     1 3'100
     25:     1 13'---000------1   ->     1 3'100
     26:     1 13'--0--1------1   ->     1 3'100
     27:     1 13'--0-1-------1   ->     1 3'100
     28:     1 13'1-1-1------01   ->     2 3'100
     29:     1 13'--1--1-1--0-1   ->     2 3'100
     30:     2 13'--1-1----1-01   ->     0 3'010
     31:     2 13'--1--11---0-1   ->     0 3'010
     32:     2 13'---1--------1   ->     0 3'010
     33:     2 13'-11-1------01   ->     1 3'010
     34:     2 13'--1--1--1-0-1   ->     1 3'010
     35:     2 13'------------0   ->     2 3'010
     36:     2 13'001-1----0-01   ->     2 3'010
     37:     2 13'1-1-1------01   ->     2 3'010
     38:     2 13'--1-1------11   ->     2 3'010
     39:     2 13'--1--1000-0-1   ->     2 3'010
     40:     2 13'--1--1-1--0-1   ->     2 3'010
     41:     2 13'--1--1----1-1   ->     2 3'010
     42:     2 13'---000------1   ->     2 3'010
     43:     2 13'--0--1------1   ->     2 3'010
     44:     2 13'--0-1-------1   ->     2 3'010

-------------------------------------

FSM `$fsm$\state$5423' from module `spimemio':
-------------------------------------

  Information on FSM $fsm$\state$5423 (\state):

  Number of input signals:    8
  Number of output signals:  13
  Number of state bits:      13

  Input signals:
    0: \din_ready
    1: \dout_valid
    2: \jump
    3: \config_cont
    4: $logic_or$./module/spimemio.v:192$786_Y
    5: $logic_and$./module/spimemio.v:263$799_Y
    6: $logic_or$./module/spimemio.v:291$800_Y
    7: $logic_or$./module/spimemio.v:331$804_Y

  Output signals:
    0: $procmux$1949_CMP
    1: $procmux$1943_CMP
    2: $procmux$1937_CMP
    3: $procmux$1934_CMP
    4: $procmux$1929_CMP
    5: $procmux$1926_CMP
    6: $procmux$1923_CMP
    7: $procmux$1920_CMP
    8: $procmux$1917_CMP
    9: $procmux$1914_CMP
   10: $procmux$1911_CMP
   11: $procmux$1900_CMP
   12: $procmux$1897_CMP

  State encoding:
    0: 13'------------1  <RESET STATE>
    1: 13'-----------1-
    2: 13'----------1--
    3: 13'---------1---
    4: 13'--------1----
    5: 13'-------1-----
    6: 13'------1------
    7: 13'-----1-------
    8: 13'----1--------
    9: 13'---1---------
   10: 13'--1----------
   11: 13'-1-----------
   12: 13'1------------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 8'---0-0-0   ->     0 13'0000000000001
      1:     0 8'---1----   ->     0 13'0000000000001
      2:     0 8'---001--   ->     2 13'0000000000001
      3:     0 8'---0-0-1   ->     7 13'0000000000001
      4:     0 8'---011--   ->     9 13'0000000000001
      5:     1 8'---1----   ->     0 13'0000001000000
      6:     1 8'---0-0-0   ->     1 13'0000001000000
      7:     1 8'---001--   ->     2 13'0000001000000
      8:     1 8'---0-0-1   ->     8 13'0000001000000
      9:     1 8'---011--   ->     9 13'0000001000000
     10:     2 8'---1----   ->     0 13'0000000000100
     11:     2 8'---0-0-0   ->     2 13'0000000000100
     12:     2 8'---001--   ->     2 13'0000000000100
     13:     2 8'---0-0-1   ->     9 13'0000000000100
     14:     2 8'---011--   ->     9 13'0000000000100
     15:     3 8'---1----   ->     0 13'0010000000000
     16:     3 8'---001--   ->     2 13'0010000000000
     17:     3 8'1--0-0-0   ->     3 13'0010000000000
     18:     3 8'0--0-0--   ->     3 13'0010000000000
     19:     3 8'1--0-0-1   ->     8 13'0010000000000
     20:     3 8'---011--   ->     9 13'0010000000000
     21:     4 8'---1----   ->     0 13'0000000000010
     22:     4 8'---001--   ->     2 13'0000000000010
     23:     4 8'---0-0-0   ->     4 13'0000000000010
     24:     4 8'---011--   ->     9 13'0000000000010
     25:     4 8'---0-0-1   ->    10 13'0000000000010
     26:     5 8'---1----   ->     0 13'0000100000000
     27:     5 8'---001--   ->     2 13'0000100000000
     28:     5 8'---0-0-0   ->     5 13'0000100000000
     29:     5 8'---011--   ->     9 13'0000100000000
     30:     5 8'---0-0-1   ->    11 13'0000100000000
     31:     6 8'---1----   ->     0 13'0000000010000
     32:     6 8'---001--   ->     2 13'0000000010000
     33:     6 8'---0-0-0   ->     6 13'0000000010000
     34:     6 8'---011--   ->     9 13'0000000010000
     35:     6 8'---0-0-1   ->    12 13'0000000010000
     36:     7 8'---1----   ->     0 13'0100000000000
     37:     7 8'---001--   ->     2 13'0100000000000
     38:     7 8'---0-01-   ->     4 13'0100000000000
     39:     7 8'---0-00-   ->     7 13'0100000000000
     40:     7 8'---011--   ->     9 13'0100000000000
     41:     8 8'---1----   ->     0 13'0000010000000
     42:     8 8'---001--   ->     2 13'0000010000000
     43:     8 8'---0-0-1   ->     5 13'0000010000000
     44:     8 8'---0-0-0   ->     8 13'0000010000000
     45:     8 8'---011--   ->     9 13'0000010000000
     46:     9 8'---1----   ->     0 13'0000000001000
     47:     9 8'---001--   ->     2 13'0000000001000
     48:     9 8'--10-0-1   ->     6 13'0000000001000
     49:     9 8'--10-0-0   ->     9 13'0000000001000
     50:     9 8'--00-0--   ->     9 13'0000000001000
     51:     9 8'---011--   ->     9 13'0000000001000
     52:    10 8'---1----   ->     0 13'1000000000000
     53:    10 8'---0-01-   ->     2 13'1000000000000
     54:    10 8'---001--   ->     2 13'1000000000000
     55:    10 8'---011--   ->     9 13'1000000000000
     56:    10 8'---0-00-   ->    10 13'1000000000000
     57:    11 8'---1----   ->     0 13'0001000000000
     58:    11 8'---001--   ->     2 13'0001000000000
     59:    11 8'---0-0-1   ->     3 13'0001000000000
     60:    11 8'---011--   ->     9 13'0001000000000
     61:    11 8'---0-0-0   ->    11 13'0001000000000
     62:    12 8'---1----   ->     0 13'0000000100000
     63:    12 8'-1-0-0-1   ->     1 13'0000000100000
     64:    12 8'---001--   ->     2 13'0000000100000
     65:    12 8'-0-0-0-1   ->     8 13'0000000100000
     66:    12 8'---011--   ->     9 13'0000000100000
     67:    12 8'---0-0-0   ->    12 13'0000000100000

-------------------------------------

7.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\cpu_state$5408' from module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Mapping FSM `$fsm$\mem_wordsize$5418' from module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Mapping FSM `$fsm$\state$5423' from module `\spimemio'.

7.8. Executing OPT pass (performing simple optimizations).

7.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
<suppressed ~5 debug messages>
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
<suppressed ~14 debug messages>
Optimizing module spimemio_xfer.

7.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
<suppressed ~93 debug messages>
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
<suppressed ~51 debug messages>
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 48 cells.

7.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/5 on $pmux $procmux$2381.
    dead port 1/2 on $mux $procmux$2465.
    dead port 2/2 on $mux $procmux$2465.
    dead port 1/2 on $mux $procmux$2486.
    dead port 2/2 on $mux $procmux$2486.
    dead port 1/2 on $mux $procmux$2503.
    dead port 2/2 on $mux $procmux$2503.
    dead port 4/7 on $pmux $procmux$2928.
    dead port 1/2 on $mux $procmux$2939.
    dead port 2/2 on $mux $procmux$2939.
    dead port 1/2 on $mux $procmux$2941.
    dead port 2/2 on $mux $procmux$2941.
    dead port 2/4 on $pmux $procmux$2984.
    dead port 3/6 on $pmux $procmux$3170.
    dead port 1/2 on $mux $procmux$3184.
    dead port 2/2 on $mux $procmux$3184.
    dead port 1/2 on $mux $procmux$3186.
    dead port 2/2 on $mux $procmux$3186.
    dead port 2/5 on $pmux $procmux$3446.
    dead port 1/4 on $pmux $procmux$3456.
    dead port 2/4 on $pmux $procmux$3456.
    dead port 3/4 on $pmux $procmux$3456.
    dead port 4/4 on $pmux $procmux$3456.
    dead port 1/2 on $mux $procmux$3460.
    dead port 2/2 on $mux $procmux$3460.
    dead port 1/3 on $pmux $procmux$3652.
    dead port 1/2 on $mux $procmux$3811.
    dead port 2/2 on $mux $procmux$3811.
    dead port 1/2 on $mux $procmux$3814.
    dead port 2/2 on $mux $procmux$3814.
    dead port 1/2 on $mux $procmux$3816.
    dead port 2/2 on $mux $procmux$3816.
Running muxtree optimizer on module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc_regs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \simpleuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio_xfer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 32 multiplexer ports.
<suppressed ~276 debug messages>

7.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5308: { \cpu_state [6:4] \cpu_state [2:0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5306: \cpu_state [5:0]
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5304: { \cpu_state [6] \cpu_state [4:0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5302: { \cpu_state [6:2] \cpu_state [0] }
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
  Optimizing cells in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \alphasoc_regs.
  Optimizing cells in module \simpleuart.
  Optimizing cells in module \spimemio.
  Optimizing cells in module \spimemio_xfer.
Performed a total of 4 changes.

7.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 0 cells.

7.8.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$5275 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:147$957_Y, Q = \last_mem_valid, rval = 1'0).
Adding SRST signal on $procdff$5274 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$5019_Y, Q = \mem_la_firstword_reg, rval = 1'0).
Adding EN signal on $procdff$5273 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = \mem_rdata_latched [6:0], Q = \mem_rdata_q [6:0]).
Adding EN signal on $procdff$5271 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4651_Y, Q = \mem_16bit_buffer).
Adding SRST signal on $procdff$5270 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4672_Y, Q = \prefetched_high_word, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6246 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4663_Y, Q = \prefetched_high_word).
Adding SRST signal on $procdff$5269 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4686_Y, Q = \mem_la_secondword, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6254 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4682_Y, Q = \mem_la_secondword).
Adding EN signal on $procdff$5268 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $0\mem_state[1:0], Q = \mem_state).
Adding EN signal on $procdff$5267 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4721_Y, Q = \mem_wstrb).
Adding EN signal on $procdff$5266 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = \mem_la_wdata, Q = \mem_wdata).
Adding EN signal on $procdff$5265 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = \mem_la_addr, Q = \mem_addr).
Adding EN signal on $procdff$5264 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4741_Y, Q = \mem_instr).
Adding SRST signal on $auto$ff.cc:266:slice$6286 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4739_Y, Q = \mem_instr, rval = 1'0).
Adding EN signal on $procdff$5263 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $0\mem_valid[0:0], Q = \mem_valid).
Adding SRST signal on $procdff$5247 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $reduce_or$./module/alphacore.v:642$1035_Y, Q = \is_compare, rval = 1'0).
Adding EN signal on $procdff$5246 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4047_Y, Q = \is_alu_reg_reg).
Adding EN signal on $procdff$5245 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4083_Y, Q = \is_alu_reg_imm).
Adding SRST signal on $procdff$5243 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4095_Y, Q = \is_beq_bne_blt_bge_bltu_bgeu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6314 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4093_Y, Q = \is_beq_bne_blt_bge_bltu_bgeu).
Adding SRST signal on $procdff$5240 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $reduce_or$./module/alphacore.v:638$1031_Y, Q = \is_lui_auipc_jal_jalr_addi_add_sub, rval = 1'0).
Adding EN signal on $procdff$5239 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:888$1281_Y, Q = \is_sll_srl_sra).
Adding EN signal on $procdff$5238 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4108_Y, Q = \is_sb_sh_sw).
Adding EN signal on $procdff$5237 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_or$./module/alphacore.v:879$1270_Y, Q = \is_jalr_addi_slti_sltiu_xori_ori_andi).
Adding EN signal on $procdff$5236 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:873$1261_Y, Q = \is_slli_srli_srai).
Adding EN signal on $procdff$5235 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4128_Y, Q = \is_lb_lh_lw_lbu_lhu).
Adding EN signal on $procdff$5233 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4132_Y, Q = \compressed_instr).
Adding EN signal on $procdff$5232 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = { $procmux$3965_Y $procmux$4178_Y $procmux$3973_Y $procmux$3941_Y $procmux$3961_Y $procmux$3945_Y $procmux$3949_Y $procmux$3957_Y $procmux$3969_Y $procmux$3953_Y 1'0 }, Q = \decoded_imm_j).
Adding EN signal on $procdff$5231 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4141_Y, Q = \decoded_imm).
Adding EN signal on $procdff$5230 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4174_Y, Q = \decoded_rs2).
Adding EN signal on $procdff$5229 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = { $procmux$3937_Y $procmux$4024_Y }, Q = \decoded_rs1).
Adding EN signal on $procdff$5228 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4225_Y, Q = \decoded_rd).
Adding EN signal on $procdff$5227 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:871$1250_Y, Q = \instr_timer).
Adding EN signal on $procdff$5226 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:650$1050_Y, Q = \instr_waitirq).
Adding EN signal on $procdff$5225 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:870$1245_Y, Q = \instr_maskirq).
Adding EN signal on $procdff$5224 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:649$1046_Y, Q = \instr_retirq).
Adding EN signal on $procdff$5223 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:869$1241_Y, Q = \instr_setq).
Adding EN signal on $procdff$5222 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:868$1236_Y, Q = \instr_getq).
Adding SRST signal on $procdff$5221 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4241_Y, Q = \instr_fence, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6334 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:866$1231_Y, Q = \instr_fence).
Adding EN signal on $procdff$5220 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_or$./module/alphacore.v:864$1228_Y, Q = \instr_ecall_ebreak).
Adding EN signal on $procdff$5219 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:862$1220_Y, Q = \instr_rdinstrh).
Adding EN signal on $procdff$5218 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:861$1217_Y, Q = \instr_rdinstr).
Adding EN signal on $procdff$5217 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_or$./module/alphacore.v:859$1214_Y, Q = \instr_rdcycleh).
Adding EN signal on $procdff$5216 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_or$./module/alphacore.v:857$1207_Y, Q = \instr_rdcycle).
Adding SRST signal on $procdff$5215 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4255_Y, Q = \instr_and, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6341 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:855$1200_Y, Q = \instr_and).
Adding SRST signal on $procdff$5214 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4259_Y, Q = \instr_or, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6343 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:854$1196_Y, Q = \instr_or).
Adding SRST signal on $procdff$5213 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4263_Y, Q = \instr_sra, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6345 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:853$1192_Y, Q = \instr_sra).
Adding SRST signal on $procdff$5212 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4267_Y, Q = \instr_srl, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6347 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:852$1188_Y, Q = \instr_srl).
Adding SRST signal on $procdff$5211 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4271_Y, Q = \instr_xor, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6349 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:851$1184_Y, Q = \instr_xor).
Adding SRST signal on $procdff$5210 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4275_Y, Q = \instr_sltu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6351 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:850$1180_Y, Q = \instr_sltu).
Adding SRST signal on $procdff$5209 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4279_Y, Q = \instr_slt, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6353 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:849$1176_Y, Q = \instr_slt).
Adding SRST signal on $procdff$5208 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4283_Y, Q = \instr_sll, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6355 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:848$1172_Y, Q = \instr_sll).
Adding SRST signal on $procdff$5207 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4287_Y, Q = \instr_sub, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6357 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:847$1168_Y, Q = \instr_sub).
Adding SRST signal on $procdff$5206 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4291_Y, Q = \instr_add, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6359 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:846$1164_Y, Q = \instr_add).
Adding EN signal on $procdff$5205 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:844$1160_Y, Q = \instr_srai).
Adding EN signal on $procdff$5204 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:843$1156_Y, Q = \instr_srli).
Adding EN signal on $procdff$5203 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:842$1152_Y, Q = \instr_slli).
Adding SRST signal on $procdff$5202 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4301_Y, Q = \instr_andi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6364 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:840$1148_Y, Q = \instr_andi).
Adding SRST signal on $procdff$5201 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4305_Y, Q = \instr_ori, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6366 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:839$1146_Y, Q = \instr_ori).
Adding SRST signal on $procdff$5200 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4309_Y, Q = \instr_xori, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6368 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:838$1144_Y, Q = \instr_xori).
Adding SRST signal on $procdff$5199 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4313_Y, Q = \instr_sltiu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6370 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:837$1142_Y, Q = \instr_sltiu).
Adding SRST signal on $procdff$5198 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4317_Y, Q = \instr_slti, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6372 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:836$1140_Y, Q = \instr_slti).
Adding SRST signal on $procdff$5197 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4321_Y, Q = \instr_addi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6374 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:835$1138_Y, Q = \instr_addi).
Adding EN signal on $procdff$5196 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:833$1136_Y, Q = \instr_sw).
Adding EN signal on $procdff$5195 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:832$1134_Y, Q = \instr_sh).
Adding EN signal on $procdff$5194 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:831$1132_Y, Q = \instr_sb).
Adding EN signal on $procdff$5193 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:829$1130_Y, Q = \instr_lhu).
Adding EN signal on $procdff$5192 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:828$1128_Y, Q = \instr_lbu).
Adding EN signal on $procdff$5191 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:827$1126_Y, Q = \instr_lw).
Adding EN signal on $procdff$5190 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:826$1124_Y, Q = \instr_lh).
Adding EN signal on $procdff$5189 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:825$1122_Y, Q = \instr_lb).
Adding SRST signal on $procdff$5188 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4341_Y, Q = \instr_bgeu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6384 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:823$1120_Y, Q = \instr_bgeu).
Adding SRST signal on $procdff$5187 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4345_Y, Q = \instr_bltu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6386 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:822$1118_Y, Q = \instr_bltu).
Adding SRST signal on $procdff$5186 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4349_Y, Q = \instr_bge, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6388 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:821$1116_Y, Q = \instr_bge).
Adding SRST signal on $procdff$5185 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4353_Y, Q = \instr_blt, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6390 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:820$1114_Y, Q = \instr_blt).
Adding SRST signal on $procdff$5184 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4357_Y, Q = \instr_bne, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6392 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:819$1112_Y, Q = \instr_bne).
Adding SRST signal on $procdff$5183 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4361_Y, Q = \instr_beq, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6394 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:818$1110_Y, Q = \instr_beq).
Adding EN signal on $procdff$5182 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4374_Y, Q = \instr_jalr).
Adding EN signal on $procdff$5181 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4386_Y, Q = \instr_jal).
Adding EN signal on $procdff$5180 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $eq$./module/alphacore.v:646$1038_Y, Q = \instr_auipc).
Adding EN signal on $procdff$5179 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4406_Y, Q = \instr_lui).
Adding EN signal on $procdff$5178 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = 32'x, Q = \cpi_insn).
Adding SRST signal on $procdff$5172 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$2780_Y, Q = \do_waitirq, rval = 1'0).
Adding EN signal on $procdff$5170 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = 1'0, Q = \cpi_timeout).
Adding SRST signal on $procdff$5168 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3030_Y, Q = \latched_rd, rval = 5'00010).
Adding EN signal on $auto$ff.cc:266:slice$6411 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3030_Y, Q = \latched_rd).
Adding SRST signal on $procdff$5167 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3056_Y, Q = \latched_is_lb, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6419 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3056_Y, Q = \latched_is_lb).
Adding SRST signal on $procdff$5166 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3069_Y, Q = \latched_is_lh, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6429 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3069_Y, Q = \latched_is_lh).
Adding SRST signal on $procdff$5165 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3082_Y, Q = \latched_is_lu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6439 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3082_Y, Q = \latched_is_lu).
Adding SRST signal on $procdff$5164 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3097_Y, Q = \latched_trace, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6449 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = 1'0, Q = \latched_trace).
Adding EN signal on $procdff$5163 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = \compressed_instr, Q = \latched_compr).
Adding SRST signal on $procdff$5162 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3127_Y, Q = \latched_branch, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6458 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3127_Y, Q = \latched_branch).
Adding SRST signal on $procdff$5161 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3163_Y, Q = \latched_stalu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6466 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3163_Y, Q = \latched_stalu).
Adding SRST signal on $procdff$5160 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3170_Y, Q = \latched_store, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$6474 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3170_Y, Q = \latched_store).
Adding SRST signal on $procdff$5156 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3224_Y, Q = \irq_state, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$6482 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $ternary$./module/alphacore.v:1280$1395_Y, Q = \irq_state).
Adding SRST signal on $procdff$5149 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$2794_Y, Q = \decoder_pseudo_trigger, rval = 1'0).
Adding SRST signal on $procdff$5146 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3432_Y, Q = \mem_do_wdata, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$6489 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = 1'0, Q = \mem_do_wdata).
Adding SRST signal on $procdff$5145 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3436_Y, Q = \mem_do_rdata, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$6491 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = 1'0, Q = \mem_do_rdata).
Adding SRST signal on $procdff$5144 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3507_Y, Q = \mem_do_rinst, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$6493 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3507_Y, Q = \mem_do_rinst).
Adding SRST signal on $procdff$5143 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3532_Y, Q = \mem_do_prefetch, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6509 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $logic_and$./module/alphacore.v:1313$1409_Y, Q = \mem_do_prefetch).
Adding SRST signal on $procdff$5141 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3580_Y, Q = \timer, rval = 0).
Adding SRST signal on $procdff$5139 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3598_Y, Q = \irq_mask, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:266:slice$6520 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = \cpuregs_rs1, Q = \irq_mask).
Adding SRST signal on $procdff$5138 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3617_Y, Q = \irq_active, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6524 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3617_Y, Q = \irq_active).
Adding SRST signal on $procdff$5137 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3642_Y, Q = \irq_delay, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6534 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = \irq_active, Q = \irq_delay).
Adding SRST signal on $procdff$5135 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$2928_Y, Q = \reg_out, rval = 1024).
Adding EN signal on $procdff$5134 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3655_Y, Q = \reg_op2).
Adding EN signal on $procdff$5133 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3678_Y [31], Q = \reg_op1 [31]).
Adding EN signal on $procdff$5133 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3678_Y [30:0], Q = \reg_op1 [30:0]).
Adding SRST signal on $procdff$5132 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3742_Y, Q = \reg_next_pc, rval = 1048576).
Adding EN signal on $auto$ff.cc:266:slice$6588 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3740_Y, Q = \reg_next_pc).
Adding SRST signal on $procdff$5131 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3754_Y, Q = \reg_pc, rval = 1048576).
Adding EN signal on $auto$ff.cc:266:slice$6590 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $3\current_pc[31:0], Q = \reg_pc).
Adding SRST signal on $procdff$5130 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3774_Y, Q = \count_instr, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$6592 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $add$./module/alphacore.v:1304$1405_Y, Q = \count_instr).
Adding SRST signal on $procdff$5129 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $add$./module/alphacore.v:1173$1351_Y, Q = \count_cycle, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$5127 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$2764_Y, Q = \trace_valid, rval = 1'0).
Adding SRST signal on $procdff$5126 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3793_Y, Q = \eoi, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$6604 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3793_Y, Q = \eoi).
Adding SRST signal on $procdff$5125 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3818_Y, Q = \cpi_valid, rval = 1'0).
Adding SRST signal on $procdff$5124 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$3012_Y, Q = \trap, rval = 1'0).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6450 ($sdffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6410 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 1 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 2 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 3 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 4 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 5 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 6 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 7 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 8 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 9 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 10 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 11 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 12 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 13 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 14 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 15 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 16 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 17 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 18 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 19 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 20 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 21 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 22 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 23 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 24 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 25 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 26 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 27 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 28 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 29 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 30 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 31 on $auto$ff.cc:266:slice$6400 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6323 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Adding SRST signal on $procdff$5123 ($dff) from module simpleuart (D = { $procmux$2283_Y $procmux$2288_Y $procmux$2293_Y $procmux$2298_Y }, Q = \cfg_divider, rval = 1).
Adding EN signal on $auto$ff.cc:266:slice$6617 ($sdff) from module simpleuart (D = \reg_div_di [7:0], Q = \cfg_divider [7:0]).
Adding EN signal on $auto$ff.cc:266:slice$6617 ($sdff) from module simpleuart (D = \reg_div_di [15:8], Q = \cfg_divider [15:8]).
Adding EN signal on $auto$ff.cc:266:slice$6617 ($sdff) from module simpleuart (D = \reg_div_di [23:16], Q = \cfg_divider [23:16]).
Adding EN signal on $auto$ff.cc:266:slice$6617 ($sdff) from module simpleuart (D = \reg_div_di [31:24], Q = \cfg_divider [31:24]).
Adding SRST signal on $procdff$5122 ($dff) from module simpleuart (D = $procmux$2244_Y, Q = \recv_buf_valid, rval = 1'0).
Adding SRST signal on $procdff$5121 ($dff) from module simpleuart (D = $procmux$2252_Y, Q = \recv_buf_data, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$6623 ($sdff) from module simpleuart (D = \recv_pattern, Q = \recv_buf_data).
Adding SRST signal on $procdff$5120 ($dff) from module simpleuart (D = $procmux$2260_Y, Q = \recv_pattern, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$6627 ($sdff) from module simpleuart (D = { \ser_rx \recv_pattern [7:1] }, Q = \recv_pattern).
Adding SRST signal on $procdff$5119 ($dff) from module simpleuart (D = $procmux$2230_Y, Q = \recv_divcnt, rval = 0).
Adding SRST signal on $procdff$5118 ($dff) from module simpleuart (D = $procmux$2272_Y, Q = \recv_state, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$6634 ($sdff) from module simpleuart (D = $procmux$2272_Y, Q = \recv_state).
Adding SRST signal on $procdff$5117 ($dff) from module simpleuart (D = $procmux$2200_Y, Q = \send_dummy, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$6646 ($sdff) from module simpleuart (D = $procmux$2200_Y, Q = \send_dummy).
Adding SRST signal on $procdff$5116 ($dff) from module simpleuart (D = $add$./module/simpleuart.v:93$744_Y, Q = \send_divcnt, rval = 0).
Adding SRST signal on $procdff$5115 ($dff) from module simpleuart (D = $procmux$2211_Y, Q = \send_bitcnt, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$6655 ($sdff) from module simpleuart (D = $procmux$2211_Y, Q = \send_bitcnt).
Adding SRST signal on $procdff$5114 ($dff) from module simpleuart (D = $procmux$2219_Y [8:0], Q = \send_pattern [8:0], rval = 9'111111111).
Adding SRST signal on $procdff$5114 ($dff) from module simpleuart (D = $procmux$2216_Y [9], Q = \send_pattern [9], rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$6664 ($sdff) from module simpleuart (D = 1'1, Q = \send_pattern [9]).
Adding EN signal on $auto$ff.cc:266:slice$6659 ($sdff) from module simpleuart (D = $procmux$2219_Y [8:0], Q = \send_pattern [8:0]).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$6669 ($sdffe) from module simpleuart.
Adding SRST signal on $procdff$5113 ($dff) from module spimemio (D = $procmux$2141_Y, Q = \config_do, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$6673 ($sdff) from module spimemio (D = \cfgreg_di [3:0], Q = \config_do).
Adding SRST signal on $procdff$5112 ($dff) from module spimemio (D = $procmux$2146_Y, Q = \config_clk, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6675 ($sdff) from module spimemio (D = \cfgreg_di [4], Q = \config_clk).
Adding SRST signal on $procdff$5111 ($dff) from module spimemio (D = $procmux$2151_Y, Q = \config_csb, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6677 ($sdff) from module spimemio (D = \cfgreg_di [5], Q = \config_csb).
Adding SRST signal on $procdff$5110 ($dff) from module spimemio (D = $procmux$2156_Y, Q = \config_oe, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$6679 ($sdff) from module spimemio (D = \cfgreg_di [11:8], Q = \config_oe).
Adding SRST signal on $procdff$5109 ($dff) from module spimemio (D = $procmux$2161_Y, Q = \config_dummy, rval = 4'1000).
Adding EN signal on $auto$ff.cc:266:slice$6681 ($sdff) from module spimemio (D = \cfgreg_di [19:16], Q = \config_dummy).
Adding SRST signal on $procdff$5108 ($dff) from module spimemio (D = $procmux$2166_Y, Q = \config_cont, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6683 ($sdff) from module spimemio (D = \cfgreg_di [20], Q = \config_cont).
Adding SRST signal on $procdff$5107 ($dff) from module spimemio (D = $procmux$2171_Y, Q = \config_qspi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6685 ($sdff) from module spimemio (D = \cfgreg_di [21], Q = \config_qspi).
Adding SRST signal on $procdff$5106 ($dff) from module spimemio (D = $procmux$2176_Y, Q = \config_ddr, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6687 ($sdff) from module spimemio (D = \cfgreg_di [22], Q = \config_ddr).
Adding SRST signal on $procdff$5105 ($dff) from module spimemio (D = $procmux$2181_Y, Q = \config_en, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$6689 ($sdff) from module spimemio (D = \cfgreg_di [31], Q = \config_en).
Adding SRST signal on $procdff$5104 ($dff) from module spimemio (D = $logic_or$./module/spimemio.v:81$764_Y, Q = \softreset, rval = 1'1).
Adding EN signal on $procdff$5098 ($dff) from module spimemio (D = $procmux$1970_Y, Q = \rd_inc).
Adding SRST signal on $auto$ff.cc:266:slice$6692 ($dffe) from module spimemio (D = $procmux$1958_Y, Q = \rd_inc, rval = 1'0).
Adding EN signal on $procdff$5097 ($dff) from module spimemio (D = $procmux$1977_Y, Q = \rd_wait).
Adding SRST signal on $auto$ff.cc:266:slice$6702 ($dffe) from module spimemio (D = $procmux$1975_Y, Q = \rd_wait, rval = 1'0).
Adding SRST signal on $procdff$5096 ($dff) from module spimemio (D = $procmux$1982_Y, Q = \rd_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6710 ($sdff) from module spimemio (D = 1'1, Q = \rd_valid).
Adding EN signal on $procdff$5095 ($dff) from module spimemio (D = $ternary$./module/spimemio.v:207$797_Y [23:0], Q = \rd_addr).
Adding EN signal on $procdff$5094 ($dff) from module spimemio (D = \dout_data, Q = \buffer [7:0]).
Adding EN signal on $procdff$5094 ($dff) from module spimemio (D = \dout_data, Q = \buffer [15:8]).
Adding EN signal on $procdff$5094 ($dff) from module spimemio (D = \dout_data, Q = \buffer [23:16]).
Adding SRST signal on $procdff$5093 ($dff) from module spimemio (D = $procmux$2041_Y, Q = \din_rd, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6734 ($sdff) from module spimemio (D = 1'1, Q = \din_rd).
Adding SRST signal on $procdff$5092 ($dff) from module spimemio (D = $procmux$2062_Y, Q = \din_ddr, rval = 1'0).
Adding SRST signal on $procdff$5091 ($dff) from module spimemio (D = $procmux$2081_Y, Q = \din_qspi, rval = 1'0).
Adding EN signal on $procdff$5090 ($dff) from module spimemio (D = 1'0, Q = \din_cont).
Adding SRST signal on $procdff$5089 ($dff) from module spimemio (D = $procmux$2091_Y, Q = \din_tag, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$6743 ($sdff) from module spimemio (D = $procmux$2091_Y, Q = \din_tag).
Adding EN signal on $procdff$5088 ($dff) from module spimemio (D = $procmux$2110_Y, Q = \din_data).
Adding SRST signal on $procdff$5087 ($dff) from module spimemio (D = $procmux$1998_Y, Q = \din_valid, rval = 1'0).
Adding SRST signal on $procdff$5086 ($dff) from module spimemio (D = $procmux$1896_Y, Q = \xfer_resetn, rval = 1'0).
Adding EN signal on $procdff$5085 ($dff) from module spimemio (D = { \dout_data \buffer }, Q = \rdata).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6742 ($dffe) from module spimemio.
Adding SRST signal on $procdff$5082 ($dff) from module spimemio_xfer (D = \fetch, Q = \last_fetch, rval = 1'1).
Adding SRST signal on $procdff$5081 ($dff) from module spimemio_xfer (D = \next_fetch, Q = \fetch, rval = 1'1).
Adding SRST signal on $procdff$5080 ($dff) from module spimemio_xfer (D = $procmux$1533_Y, Q = \xfer_tag, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$6775 ($sdff) from module spimemio_xfer (D = \din_tag, Q = \xfer_tag).
Adding SRST signal on $procdff$5079 ($dff) from module spimemio_xfer (D = $procmux$1538_Y, Q = \xfer_rd, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6777 ($sdff) from module spimemio_xfer (D = \din_rd, Q = \xfer_rd).
Adding SRST signal on $procdff$5078 ($dff) from module spimemio_xfer (D = $procmux$1543_Y, Q = \xfer_qspi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6779 ($sdff) from module spimemio_xfer (D = \din_qspi, Q = \xfer_qspi).
Adding SRST signal on $procdff$5076 ($dff) from module spimemio_xfer (D = $procmux$1556_Y, Q = \dummy_count, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$6781 ($sdff) from module spimemio_xfer (D = $procmux$1556_Y, Q = \dummy_count).
Adding SRST signal on $procdff$5075 ($dff) from module spimemio_xfer (D = $procmux$1566_Y [3], Q = \count [3], rval = 1'0).
Adding SRST signal on $procdff$5075 ($dff) from module spimemio_xfer (D = $procmux$1564_Y [2:0], Q = \count [2:0], rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$6786 ($sdff) from module spimemio_xfer (D = $2\next_count[3:0] [2:0], Q = \count [2:0]).
Adding EN signal on $auto$ff.cc:266:slice$6785 ($sdff) from module spimemio_xfer (D = $procmux$1566_Y [3], Q = \count [3]).
Adding EN signal on $procdff$5074 ($dff) from module spimemio_xfer (D = $2\next_ibuffer[7:0], Q = \ibuffer).
Adding EN signal on $procdff$5073 ($dff) from module spimemio_xfer (D = $procmux$1584_Y, Q = \obuffer).
Adding SRST signal on $procdff$5072 ($dff) from module spimemio_xfer (D = $procmux$1589_Y, Q = \xfer_ddr, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6839 ($sdff) from module spimemio_xfer (D = \din_ddr, Q = \xfer_ddr).
Adding SRST signal on $procdff$5071 ($dff) from module spimemio_xfer (D = $procmux$1594_Y, Q = \xfer_dspi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6841 ($sdff) from module spimemio_xfer (D = \din_dspi, Q = \xfer_dspi).
Adding SRST signal on $procdff$5070 ($dff) from module spimemio_xfer (D = $procmux$1602_Y, Q = \flash_clk, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6843 ($sdff) from module spimemio_xfer (D = $procmux$1602_Y, Q = \flash_clk).
Adding SRST signal on $procdff$5069 ($dff) from module spimemio_xfer (D = $procmux$1609_Y, Q = \flash_csb, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$6851 ($sdff) from module spimemio_xfer (D = 1'0, Q = \flash_csb).

7.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..
Removed 302 unused cells and 383 unused wires.
<suppressed ~311 debug messages>

7.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
<suppressed ~21 debug messages>
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
<suppressed ~4 debug messages>
Optimizing module spimemio.
<suppressed ~4 debug messages>
Optimizing module spimemio_xfer.
<suppressed ~6 debug messages>

7.8.9. Rerunning OPT passes. (Maybe there is more to do..)

7.8.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$2747.
    dead port 2/2 on $mux $procmux$2747.
Running muxtree optimizer on module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc_regs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \simpleuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio_xfer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 2 multiplexer ports.
<suppressed ~170 debug messages>

7.8.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
  Optimizing cells in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \alphasoc_regs.
  Optimizing cells in module \simpleuart.
  Optimizing cells in module \spimemio.
  Optimizing cells in module \spimemio_xfer.
Performed a total of 0 changes.

7.8.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
<suppressed ~111 debug messages>
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
<suppressed ~3 debug messages>
Finding identical cells in module `\spimemio'.
<suppressed ~33 debug messages>
Finding identical cells in module `\spimemio_xfer'.
<suppressed ~24 debug messages>
Removed a total of 57 cells.

7.8.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $auto$ff.cc:266:slice$6614 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (conecting SRST instead).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6614 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6601 ($sdff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 0 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 1 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 2 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 3 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 4 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 5 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 6 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 7 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 8 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 9 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 10 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 11 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 12 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 13 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 14 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 15 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 16 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 17 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 18 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 19 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 20 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 21 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 22 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 23 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 24 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 25 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 26 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 27 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 28 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 29 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 30 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 31 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 32 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 33 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 34 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 1-bit at position 35 on $procdff$5128 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.

7.8.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..
Removed 4 unused cells and 68 unused wires.
<suppressed ~8 debug messages>

7.8.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
Optimizing module spimemio_xfer.

7.8.16. Rerunning OPT passes. (Maybe there is more to do..)

7.8.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc_regs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \simpleuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio_xfer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~169 debug messages>

7.8.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
  Optimizing cells in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \alphasoc_regs.
  Optimizing cells in module \simpleuart.
  Optimizing cells in module \spimemio.
  Optimizing cells in module \spimemio_xfer.
Performed a total of 0 changes.

7.8.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 0 cells.

7.8.20. Executing OPT_DFF pass (perform DFF optimizations).

7.8.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..

7.8.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
Optimizing module spimemio_xfer.

7.8.23. Finished OPT passes. (There is nothing left to do.)

7.9. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5711 ($eq).
Removed top 1 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5967 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5672 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5963 ($eq).
Removed top 2 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5668 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5664 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5959 ($eq).
Removed top 2 bits (of 4) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5660 ($eq).
Removed top 3 bits (of 5) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5955 ($eq).
Removed top 1 bits (of 2) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$opt_dff.cc:195:make_patterns_logic$6529 ($ne).
Removed top 1 bits (of 9) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5723 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5947 ($eq).
Removed top 2 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5943 ($eq).
Removed top 2 bits (of 5) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5500 ($eq).
Removed top 3 bits (of 5) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5467 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5939 ($eq).
Removed top 2 bits (of 10) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5719 ($eq).
Removed top 1 bits (of 5) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5496 ($eq).
Removed top 3 bits (of 4) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5935 ($eq).
Removed top 2 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5494 ($eq).
Removed top 2 bits (of 3) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5463 ($eq).
Removed top 3 bits (of 5) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5492 ($eq).
Removed top 1 bits (of 4) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5485 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5927 ($eq).
Removed top 3 bits (of 5) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5483 ($eq).
Removed top 2 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5923 ($eq).
Removed top 1 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5455 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5919 ($eq).
Removed top 1 bits (of 5) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5475 ($eq).
Removed top 3 bits (of 9) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5715 ($eq).
Removed top 2 bits (of 4) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5915 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5652 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5592 ($eq).
Removed top 2 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5588 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5644 ($eq).
Removed top 1 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5512 ($eq).
Removed top 1 bits (of 2) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$opt_dff.cc:195:make_patterns_logic$6463 ($ne).
Removed top 2 bits (of 4) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5640 ($eq).
Removed top 1 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5632 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5628 ($eq).
Removed top 2 bits (of 5) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5732 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5624 ($eq).
Removed top 2 bits (of 5) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5620 ($eq).
Removed top 5 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$opt_dff.cc:195:make_patterns_logic$6554 ($ne).
Removed top 1 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5612 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$opt_dff.cc:195:make_patterns_logic$6556 ($ne).
Removed top 2 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5608 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5604 ($eq).
Removed top 1 bits (of 2) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$opt_dff.cc:195:make_patterns_logic$6564 ($ne).
Removed top 2 bits (of 4) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5600 ($eq).
Removed top 3 bits (of 5) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5443 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5447 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5451 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5504 ($eq).
Removed top 1 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5698 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5692 ($eq).
Removed top 1 bits (of 2) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$opt_dff.cc:195:make_patterns_logic$6609 ($ne).
Removed top 3 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5686 ($eq).
Removed top 2 bits (of 5) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5680 ($eq).
Removed top 2 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5471 ($eq).
Removed top 2 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5648 ($eq).
Removed top 2 bits (of 8) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5508 ($eq).
Removed top 3 bits (of 4) from port A of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$shl$./module/alphacore.v:169$960 ($shl).
Removed top 3 bits (of 5) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:215$964 ($eq).
Removed top 1 bits (of 2) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:228$966 ($eq).
Removed top 1 bits (of 3) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:236$968 ($eq).
Removed top 1 bits (of 2) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:238$970 ($eq).
Removed top 9 bits (of 10) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5752 ($eq).
Removed top 1 bits (of 7) from mux cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$ternary$./module/alphacore.v:241$974 ($mux).
Removed top 30 bits (of 32) from mux cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$ternary$./module/alphacore.v:367$1018 ($mux).
Removed top 1 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:645$1037 ($eq).
Removed top 2 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:646$1038 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:649$1043 ($eq).
Removed top 5 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:649$1044 ($eq).
Removed top 4 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:650$1048 ($eq).
Removed top 5 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:653$1052 ($eq).
Removed top 1 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:654$1053 ($eq).
Removed top 2 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:655$1054 ($eq).
Removed top 1 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:656$1055 ($eq).
Removed top 3 bits (of 12) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5756 ($eq).
Removed top 28 bits (of 32) from port A of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$add$./module/alphacore.v:686$1068 ($add).
Removed top 27 bits (of 32) from port Y of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$add$./module/alphacore.v:686$1068 ($add).
Removed top 28 bits (of 32) from port A of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$add$./module/alphacore.v:690$1069 ($add).
Removed top 27 bits (of 32) from port Y of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$add$./module/alphacore.v:690$1069 ($add).
Removed top 2 bits (of 8) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5740 ($eq).
Removed top 2 bits (of 13) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5760 ($eq).
Removed top 1 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5744 ($eq).
Removed top 1 bits (of 12) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5764 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5845 ($eq).
Removed top 2 bits (of 3) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:819$1111 ($eq).
Removed top 1 bits (of 3) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:827$1125 ($eq).
Removed top 2 bits (of 4) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5772 ($eq).
Removed top 1 bits (of 3) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:837$1141 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5776 ($eq).
Removed top 2 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5780 ($eq).
Removed top 1 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:844$1159 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5784 ($eq).
Removed top 2 bits (of 9) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5793 ($eq).
Removed top 3 bits (of 11) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5797 ($eq).
Removed top 2 bits (of 12) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5801 ($eq).
Removed top 1 bits (of 11) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5805 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:866$1229 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:868$1232 ($eq).
Removed top 6 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:869$1238 ($eq).
Removed top 5 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:870$1243 ($eq).
Removed top 4 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:871$1247 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5817 ($eq).
Removed top 2 bits (of 4) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5813 ($eq).
Removed top 2 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5821 ($eq).
Removed top 6 bits (of 9) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5854 ($eq).
Removed top 1 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5825 ($eq).
Removed top 29 bits (of 32) from mux cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$ternary$./module/alphacore.v:1091$1324 ($mux).
Removed top 29 bits (of 32) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$add$./module/alphacore.v:1091$1325 ($add).
Removed top 31 bits (of 32) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$add$./module/alphacore.v:1173$1351 ($add).
Removed top 31 bits (of 32) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$sub$./module/alphacore.v:1183$1356 ($sub).
Removed top 1 bits (of 2) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$eq$./module/alphacore.v:1281$1393 ($eq).
Removed top 29 bits (of 32) from mux cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$ternary$./module/alphacore.v:1286$1396 ($mux).
Removed top 29 bits (of 32) from mux cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$ternary$./module/alphacore.v:1292$1401 ($mux).
Removed top 29 bits (of 32) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$add$./module/alphacore.v:1292$1402 ($add).
Removed top 3 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5736 ($eq).
Removed top 31 bits (of 32) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$add$./module/alphacore.v:1304$1405 ($add).
Removed top 3 bits (of 11) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5858 ($eq).
Removed top 3 bits (of 4) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5833 ($eq).
Removed top 29 bits (of 32) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$ge$./module/alphacore.v:1575$1457 ($ge).
Removed top 29 bits (of 32) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$sub$./module/alphacore.v:1582$1465 ($sub).
Removed top 27 bits (of 32) from port Y of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$sub$./module/alphacore.v:1582$1465 ($sub).
Removed top 31 bits (of 32) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$sub$./module/alphacore.v:1590$1472 ($sub).
Removed top 27 bits (of 32) from port Y of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$sub$./module/alphacore.v:1590$1472 ($sub).
Removed top 2 bits (of 12) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5862 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5837 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5584 ($eq).
Removed top 1 bits (of 11) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5866 ($eq).
Removed top 2 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5841 ($eq).
Removed top 1 bits (of 33) from port Y of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$sshr$./module/alphacore.v:1023$1526 ($sshr).
Removed top 2 bits (of 4) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$opt_dff.cc:195:make_patterns_logic$6506 ($ne).
Removed top 1 bits (of 4) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$opt_dff.cc:195:make_patterns_logic$6504 ($ne).
Removed top 1 bits (of 3) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$opt_dff.cc:195:make_patterns_logic$6241 ($ne).
Removed top 1 bits (of 2) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$opt_dff.cc:195:make_patterns_logic$6304 ($ne).
Removed top 3 bits (of 4) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5580 ($eq).
Removed top 1 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$opt_dff.cc:195:make_patterns_logic$6502 ($ne).
Removed top 4 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5520 ($eq).
Removed top 3 bits (of 9) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5524 ($eq).
Removed top 1 bits (of 8) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5572 ($eq).
Removed top 2 bits (of 10) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5528 ($eq).
Removed top 2 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$6060 ($eq).
Removed top 2 bits (of 9) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5568 ($eq).
Removed top 1 bits (of 9) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5532 ($eq).
Removed top 3 bits (of 8) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5564 ($eq).
Removed top 5 bits (of 6) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5560 ($eq).
Removed top 4 bits (of 5) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$opt_dff.cc:195:make_patterns_logic$6500 ($ne).
Removed top 2 bits (of 5) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5540 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5544 ($eq).
Removed top 1 bits (of 7) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5552 ($eq).
Removed top 3 bits (of 4) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$6080 ($eq).
Removed top 1 bits (of 3) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$6084 ($eq).
Removed top 1 bits (of 3) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$6088 ($eq).
Removed top 1 bits (of 3) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$procmux$3930_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$procmux$3932_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$procmux$3935_CMP0 ($eq).
Removed top 2 bits (of 4) from mux cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$procmux$3993 ($mux).
Removed top 1 bits (of 9) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$opt_dff.cc:195:make_patterns_logic$6498 ($ne).
Removed top 2 bits (of 3) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$procmux$4217_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$procmux$4656_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$opt_dff.cc:195:make_patterns_logic$6264 ($ne).
Removed top 2 bits (of 6) from mux cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$procmux$4971 ($mux).
Removed top 1 bits (of 2) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$procmux$4990_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$opt_dff.cc:195:make_patterns_logic$6426 ($ne).
Removed top 2 bits (of 8) from port B of cell $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$auto$fsm_map.cc:77:implement_pattern_cache$5548 ($eq).
Removed top 27 bits (of 32) from wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$add$./module/alphacore.v:686$1068_Y.
Removed top 2 bits (of 4) from wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$procmux$3993_Y.
Removed top 27 bits (of 32) from wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$sub$./module/alphacore.v:1582$1465_Y.
Removed top 27 bits (of 32) from wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$sub$./module/alphacore.v:1590$1472_Y.
Removed top 29 bits (of 32) from wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$ternary$./module/alphacore.v:1091$1324_Y.
Removed top 29 bits (of 32) from wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$ternary$./module/alphacore.v:1286$1396_Y.
Removed top 29 bits (of 32) from wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$ternary$./module/alphacore.v:1292$1401_Y.
Removed top 1 bits (of 7) from wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$ternary$./module/alphacore.v:241$974_Y.
Removed top 30 bits (of 32) from wire $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.$ternary$./module/alphacore.v:367$1018_Y.
Removed top 14 address bits (of 22) from memory init port $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$auto$proc_memwr.cc:45:proc_memwr$5293 (mem).
Removed top 14 address bits (of 22) from memory init port $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$auto$proc_memwr.cc:45:proc_memwr$5294 (mem).
Removed top 14 address bits (of 22) from memory init port $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$auto$proc_memwr.cc:45:proc_memwr$5295 (mem).
Removed top 14 address bits (of 22) from memory init port $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$auto$proc_memwr.cc:45:proc_memwr$5296 (mem).
Removed top 14 address bits (of 22) from memory read port $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$memrd$\mem$./module/alphasoc_mem.v:13$871 (mem).
Removed top 14 bits (of 22) from mux cell $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$procmux$5031 ($mux).
Removed top 14 bits (of 22) from mux cell $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$procmux$5040 ($mux).
Removed top 14 bits (of 22) from mux cell $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$procmux$5049 ($mux).
Removed top 14 bits (of 22) from mux cell $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$procmux$5058 ($mux).
Removed top 14 bits (of 22) from wire $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$0$memwr$\mem$./module/alphasoc_mem.v:14$854_ADDR[21:0]$859.
Removed top 24 bits (of 32) from wire $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$0$memwr$\mem$./module/alphasoc_mem.v:14$854_EN[31:0]$861.
Removed top 14 bits (of 22) from wire $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.$0$memwr$\mem$./module/alphasoc_mem.v:15$855_ADDR[21:0]$862.
Removed top 7 bits (of 8) from port B of cell alphasoc.$gt$./module/alphasoc.v:72$2 ($gt).
Removed top 6 bits (of 32) from port B of cell alphasoc.$eq$./module/alphasoc.v:77$4 ($eq).
Removed top 6 bits (of 32) from port B of cell alphasoc.$eq$./module/alphasoc.v:80$6 ($eq).
Removed top 6 bits (of 32) from port B of cell alphasoc.$eq$./module/alphasoc.v:83$8 ($eq).
Removed top 21 bits (of 32) from port B of cell alphasoc.$ge$./module/alphasoc.v:114$25 ($ge).
Removed top 6 bits (of 32) from port B of cell alphasoc.$lt$./module/alphasoc.v:114$27 ($lt).
Removed top 21 bits (of 32) from port B of cell alphasoc.$lt$./module/alphasoc.v:161$37 ($lt).
Removed top 24 bits (of 32) from wire alphasoc.irq.
Removed top 1 bits (of 2) from port B of cell simpleuart.$auto$opt_dff.cc:195:make_patterns_logic$6641 ($ne).
Removed top 1 bits (of 2) from port B of cell simpleuart.$auto$opt_dff.cc:195:make_patterns_logic$6643 ($ne).
Removed top 3 bits (of 4) from port B of cell simpleuart.$procmux$2234_CMP0 ($eq).
Removed top 1 bits (of 10) from mux cell simpleuart.$procmux$2219 ($mux).
Removed top 1 bits (of 10) from mux cell simpleuart.$procmux$2216 ($mux).
Removed top 31 bits (of 32) from port B of cell simpleuart.$add$./module/simpleuart.v:55$735 ($add).
Removed top 31 bits (of 32) from port B of cell simpleuart.$add$./module/simpleuart.v:80$741 ($add).
Removed top 28 bits (of 32) from port Y of cell simpleuart.$add$./module/simpleuart.v:80$741 ($add).
Removed top 31 bits (of 32) from port B of cell simpleuart.$add$./module/simpleuart.v:93$744 ($add).
Removed top 31 bits (of 32) from port B of cell simpleuart.$sub$./module/simpleuart.v:113$752 ($sub).
Removed top 28 bits (of 32) from port Y of cell simpleuart.$sub$./module/simpleuart.v:113$752 ($sub).
Removed top 28 bits (of 32) from wire simpleuart.$add$./module/simpleuart.v:80$741_Y.
Removed top 1 bits (of 10) from wire simpleuart.$procmux$2216_Y.
Removed top 1 bits (of 10) from wire simpleuart.$procmux$2219_Y.
Removed top 28 bits (of 32) from wire simpleuart.$sub$./module/simpleuart.v:113$752_Y.
Removed top 1 bits (of 10) from wire simpleuart.send_pattern.
Removed top 1 bits (of 2) from port B of cell spimemio.$procmux$2125_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell spimemio.$eq$./module/spimemio.v:202$787 ($eq).
Removed top 2 bits (of 4) from port B of cell spimemio.$eq$./module/spimemio.v:203$789 ($eq).
Removed top 2 bits (of 4) from port B of cell spimemio.$eq$./module/spimemio.v:204$791 ($eq).
Removed top 1 bits (of 4) from port B of cell spimemio.$eq$./module/spimemio.v:205$793 ($eq).
Removed top 29 bits (of 32) from port B of cell spimemio.$add$./module/spimemio.v:207$795 ($add).
Removed top 7 bits (of 32) from port Y of cell spimemio.$add$./module/spimemio.v:207$795 ($add).
Removed top 8 bits (of 32) from mux cell spimemio.$ternary$./module/spimemio.v:207$797 ($mux).
Removed top 1 bits (of 8) from mux cell spimemio.$ternary$./module/spimemio.v:297$802 ($mux).
Removed top 2 bits (of 3) from port B of cell spimemio.$auto$fsm_map.cc:77:implement_pattern_cache$6121 ($eq).
Removed top 2 bits (of 3) from port B of cell spimemio.$auto$fsm_map.cc:77:implement_pattern_cache$6141 ($eq).
Removed top 3 bits (of 4) from port B of cell spimemio.$auto$fsm_map.cc:77:implement_pattern_cache$6177 ($eq).
Removed top 1 bits (of 3) from port B of cell spimemio.$auto$fsm_map.cc:77:implement_pattern_cache$6202 ($eq).
Removed top 2 bits (of 3) from port B of cell spimemio.$auto$fsm_map.cc:77:implement_pattern_cache$6227 ($eq).
Removed top 7 bits (of 32) from port B of cell spimemio.$ne$./module/spimemio.v:53$759 ($ne).
Removed top 7 bits (of 32) from wire spimemio.$add$./module/spimemio.v:207$795_Y.
Removed top 8 bits (of 32) from wire spimemio.$ternary$./module/spimemio.v:207$797_Y.
Removed top 1 bits (of 8) from wire spimemio.$ternary$./module/spimemio.v:297$802_Y.
Removed top 1 bits (of 2) from port B of cell spimemio_xfer.$procmux$1623_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell spimemio_xfer.$sub$./module/spimemio.v:452$817 ($sub).
Removed top 1 bits (of 4) from port B of cell spimemio_xfer.$sub$./module/spimemio.v:472$824 ($sub).
Removed top 2 bits (of 4) from port B of cell spimemio_xfer.$sub$./module/spimemio.v:505$836 ($sub).
Removed top 28 bits (of 32) from mux cell spimemio_xfer.$ternary$./module/spimemio.v:548$853 ($mux).
Removed top 1 bits (of 6) from port B of cell spimemio_xfer.$auto$opt_dff.cc:195:make_patterns_logic$6828 ($ne).
Removed top 1 bits (of 6) from port B of cell spimemio_xfer.$auto$opt_dff.cc:195:make_patterns_logic$6826 ($ne).
Removed top 1 bits (of 9) from port B of cell spimemio_xfer.$auto$opt_dff.cc:195:make_patterns_logic$6824 ($ne).
Removed top 1 bits (of 2) from port B of cell spimemio_xfer.$auto$opt_dff.cc:195:make_patterns_logic$6806 ($ne).
Removed top 3 bits (of 4) from port B of cell spimemio_xfer.$auto$opt_dff.cc:195:make_patterns_logic$6804 ($ne).
Removed top 1 bits (of 8) from port B of cell spimemio_xfer.$auto$opt_dff.cc:195:make_patterns_logic$6800 ($ne).
Removed top 3 bits (of 4) from wire spimemio_xfer.$reduce_or$./module/spimemio.v:452$816_Y.
Removed top 28 bits (of 32) from wire spimemio_xfer.$ternary$./module/spimemio.v:548$853_Y.

7.10. Executing PEEPOPT pass (run peephole optimizers).

7.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..
Removed 0 unused cells and 24 unused wires.
<suppressed ~6 debug messages>

7.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore:
  creating $macc model for $add$./module/alphacore.v:1018$1518 ($add).
  creating $macc model for $add$./module/alphacore.v:1091$1325 ($add).
  creating $macc model for $add$./module/alphacore.v:1173$1351 ($add).
  creating $macc model for $add$./module/alphacore.v:1292$1402 ($add).
  creating $macc model for $add$./module/alphacore.v:1304$1405 ($add).
  creating $macc model for $add$./module/alphacore.v:1309$1406 ($add).
  creating $macc model for $add$./module/alphacore.v:134$946 ($add).
  creating $macc model for $add$./module/alphacore.v:1546$1451 ($add).
  creating $macc model for $add$./module/alphacore.v:1609$1476 ($add).
  creating $macc model for $add$./module/alphacore.v:686$1068 ($add).
  creating $macc model for $add$./module/alphacore.v:690$1069 ($add).
  creating $macc model for $sub$./module/alphacore.v:1018$1517 ($sub).
  creating $macc model for $sub$./module/alphacore.v:1183$1356 ($sub).
  creating $macc model for $sub$./module/alphacore.v:1582$1465 ($sub).
  creating $macc model for $sub$./module/alphacore.v:1590$1472 ($sub).
  creating $alu model for $macc $sub$./module/alphacore.v:1590$1472.
  creating $alu model for $macc $sub$./module/alphacore.v:1582$1465.
  creating $alu model for $macc $sub$./module/alphacore.v:1183$1356.
  creating $alu model for $macc $sub$./module/alphacore.v:1018$1517.
  creating $alu model for $macc $add$./module/alphacore.v:690$1069.
  creating $alu model for $macc $add$./module/alphacore.v:686$1068.
  creating $alu model for $macc $add$./module/alphacore.v:1609$1476.
  creating $alu model for $macc $add$./module/alphacore.v:1546$1451.
  creating $alu model for $macc $add$./module/alphacore.v:134$946.
  creating $alu model for $macc $add$./module/alphacore.v:1309$1406.
  creating $alu model for $macc $add$./module/alphacore.v:1304$1405.
  creating $alu model for $macc $add$./module/alphacore.v:1292$1402.
  creating $alu model for $macc $add$./module/alphacore.v:1173$1351.
  creating $alu model for $macc $add$./module/alphacore.v:1091$1325.
  creating $alu model for $macc $add$./module/alphacore.v:1018$1518.
  creating $alu model for $ge$./module/alphacore.v:1575$1457 ($ge): new $alu
  creating $alu model for $lt$./module/alphacore.v:1020$1521 ($lt): new $alu
  creating $alu model for $lt$./module/alphacore.v:1021$1522 ($lt): new $alu
  creating $alu model for $eq$./module/alphacore.v:1019$1520 ($eq): merged with $lt$./module/alphacore.v:1021$1522.
  creating $alu cell for $ge$./module/alphacore.v:1575$1457: $auto$alumacc.cc:485:replace_alu$6879
  creating $alu cell for $lt$./module/alphacore.v:1021$1522, $eq$./module/alphacore.v:1019$1520: $auto$alumacc.cc:485:replace_alu$6888
  creating $alu cell for $lt$./module/alphacore.v:1020$1521: $auto$alumacc.cc:485:replace_alu$6899
  creating $alu cell for $add$./module/alphacore.v:1018$1518: $auto$alumacc.cc:485:replace_alu$6912
  creating $alu cell for $add$./module/alphacore.v:1091$1325: $auto$alumacc.cc:485:replace_alu$6915
  creating $alu cell for $add$./module/alphacore.v:1173$1351: $auto$alumacc.cc:485:replace_alu$6918
  creating $alu cell for $add$./module/alphacore.v:1292$1402: $auto$alumacc.cc:485:replace_alu$6921
  creating $alu cell for $add$./module/alphacore.v:1304$1405: $auto$alumacc.cc:485:replace_alu$6924
  creating $alu cell for $add$./module/alphacore.v:1309$1406: $auto$alumacc.cc:485:replace_alu$6927
  creating $alu cell for $add$./module/alphacore.v:134$946: $auto$alumacc.cc:485:replace_alu$6930
  creating $alu cell for $add$./module/alphacore.v:1546$1451: $auto$alumacc.cc:485:replace_alu$6933
  creating $alu cell for $add$./module/alphacore.v:1609$1476: $auto$alumacc.cc:485:replace_alu$6936
  creating $alu cell for $add$./module/alphacore.v:686$1068: $auto$alumacc.cc:485:replace_alu$6939
  creating $alu cell for $add$./module/alphacore.v:690$1069: $auto$alumacc.cc:485:replace_alu$6942
  creating $alu cell for $sub$./module/alphacore.v:1018$1517: $auto$alumacc.cc:485:replace_alu$6945
  creating $alu cell for $sub$./module/alphacore.v:1183$1356: $auto$alumacc.cc:485:replace_alu$6948
  creating $alu cell for $sub$./module/alphacore.v:1582$1465: $auto$alumacc.cc:485:replace_alu$6951
  creating $alu cell for $sub$./module/alphacore.v:1590$1472: $auto$alumacc.cc:485:replace_alu$6954
  created 18 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module alphasoc:
  creating $alu model for $ge$./module/alphasoc.v:114$25 ($ge): new $alu
  creating $alu model for $gt$./module/alphasoc.v:72$2 ($gt): new $alu
  creating $alu model for $lt$./module/alphasoc.v:114$27 ($lt): new $alu
  creating $alu model for $lt$./module/alphasoc.v:161$37 ($lt): merged with $ge$./module/alphasoc.v:114$25.
  creating $alu model for $eq$./module/alphasoc.v:77$4 ($eq): merged with $lt$./module/alphasoc.v:114$27.
  creating $alu cell for $lt$./module/alphasoc.v:114$27, $eq$./module/alphasoc.v:77$4: $auto$alumacc.cc:485:replace_alu$6960
  creating $alu cell for $gt$./module/alphasoc.v:72$2: $auto$alumacc.cc:485:replace_alu$6971
  creating $alu cell for $ge$./module/alphasoc.v:114$25, $lt$./module/alphasoc.v:161$37: $auto$alumacc.cc:485:replace_alu$6976
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module alphasoc_regs:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module simpleuart:
  creating $macc model for $add$./module/simpleuart.v:55$735 ($add).
  creating $macc model for $add$./module/simpleuart.v:80$741 ($add).
  creating $macc model for $add$./module/simpleuart.v:93$744 ($add).
  creating $macc model for $sub$./module/simpleuart.v:113$752 ($sub).
  creating $alu model for $macc $sub$./module/simpleuart.v:113$752.
  creating $alu model for $macc $add$./module/simpleuart.v:93$744.
  creating $alu model for $macc $add$./module/simpleuart.v:80$741.
  creating $alu model for $macc $add$./module/simpleuart.v:55$735.
  creating $alu model for $gt$./module/simpleuart.v:111$750 ($gt): new $alu
  creating $alu model for $gt$./module/simpleuart.v:65$738 ($gt): new $alu
  creating $alu model for $gt$./module/simpleuart.v:71$739 ($gt): new $alu
  creating $alu cell for $gt$./module/simpleuart.v:71$739: $auto$alumacc.cc:485:replace_alu$6992
  creating $alu cell for $gt$./module/simpleuart.v:65$738: $auto$alumacc.cc:485:replace_alu$6997
  creating $alu cell for $gt$./module/simpleuart.v:111$750: $auto$alumacc.cc:485:replace_alu$7002
  creating $alu cell for $add$./module/simpleuart.v:55$735: $auto$alumacc.cc:485:replace_alu$7007
  creating $alu cell for $add$./module/simpleuart.v:80$741: $auto$alumacc.cc:485:replace_alu$7010
  creating $alu cell for $add$./module/simpleuart.v:93$744: $auto$alumacc.cc:485:replace_alu$7013
  creating $alu cell for $sub$./module/simpleuart.v:113$752: $auto$alumacc.cc:485:replace_alu$7016
  created 7 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module spimemio:
  creating $macc model for $add$./module/spimemio.v:207$795 ($add).
  creating $alu model for $macc $add$./module/spimemio.v:207$795.
  creating $alu cell for $add$./module/spimemio.v:207$795: $auto$alumacc.cc:485:replace_alu$7019
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module spimemio_xfer:
  creating $macc model for $sub$./module/spimemio.v:452$817 ($sub).
  creating $macc model for $sub$./module/spimemio.v:472$824 ($sub).
  creating $macc model for $sub$./module/spimemio.v:505$836 ($sub).
  creating $macc model for $sub$./module/spimemio.v:535$846 ($sub).
  creating $alu model for $macc $sub$./module/spimemio.v:535$846.
  creating $alu model for $macc $sub$./module/spimemio.v:505$836.
  creating $alu model for $macc $sub$./module/spimemio.v:472$824.
  creating $alu model for $macc $sub$./module/spimemio.v:452$817.
  creating $alu cell for $sub$./module/spimemio.v:452$817: $auto$alumacc.cc:485:replace_alu$7022
  creating $alu cell for $sub$./module/spimemio.v:472$824: $auto$alumacc.cc:485:replace_alu$7025
  creating $alu cell for $sub$./module/spimemio.v:505$836: $auto$alumacc.cc:485:replace_alu$7028
  creating $alu cell for $sub$./module/spimemio.v:535$846: $auto$alumacc.cc:485:replace_alu$7031
  created 4 $alu and 0 $macc cells.

7.13. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$./module/alphacore.v:1023$1526 ($sshr):
    Found 1 activation_patterns using ctrl signal $logic_or$./module/alphacore.v:1060$1315_Y.
    No candidates found.
  Analyzing resource sharing options for $shl$./module/alphacore.v:1022$1523 ($shl):
    Found 1 activation_patterns using ctrl signal $logic_or$./module/alphacore.v:1058$1312_Y.
    No candidates found.

7.14. Executing OPT pass (performing simple optimizations).

7.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
<suppressed ~2 debug messages>
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
<suppressed ~6 debug messages>
Optimizing module spimemio.
Optimizing module spimemio_xfer.

7.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

7.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc_regs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \simpleuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio_xfer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~168 debug messages>

7.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
  Optimizing cells in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \alphasoc_regs.
  Optimizing cells in module \simpleuart.
  Optimizing cells in module \spimemio.
  Optimizing cells in module \spimemio_xfer.
Performed a total of 0 changes.

7.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 0 cells.

7.14.6. Executing OPT_DFF pass (perform DFF optimizations).

7.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..
Removed 0 unused cells and 15 unused wires.
<suppressed ~4 debug messages>

7.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
Optimizing module spimemio_xfer.

7.14.9. Rerunning OPT passes. (Maybe there is more to do..)

7.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc_regs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \simpleuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio_xfer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~168 debug messages>

7.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
  Optimizing cells in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \alphasoc_regs.
  Optimizing cells in module \simpleuart.
  Optimizing cells in module \spimemio.
  Optimizing cells in module \spimemio_xfer.
Performed a total of 0 changes.

7.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 0 cells.

7.14.13. Executing OPT_DFF pass (perform DFF optimizations).

7.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..

7.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
Optimizing module spimemio_xfer.

7.14.16. Finished OPT passes. (There is nothing left to do.)

7.15. Executing MEMORY pass.

7.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 96 transformations.

7.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 6 transformations.

7.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.mem write port 0.
  Analyzing $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.mem write port 1.
  Analyzing $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.mem write port 2.
  Analyzing $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.mem write port 3.
  Analyzing alphasoc_regs.regs write port 0.

7.15.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

7.15.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\mem'[0] in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000': merging output FF to cell.
    Write port 0: non-transparent.
    Write port 1: non-transparent.
    Write port 2: non-transparent.
    Write port 3: non-transparent.
Checking read port `\regs'[0] in module `\alphasoc_regs': no output FF found.
Checking read port `\regs'[1] in module `\alphasoc_regs': no output FF found.
Checking read port address `\regs'[0] in module `\alphasoc_regs': no address FF found.
Checking read port address `\regs'[1] in module `\alphasoc_regs': no address FF found.

7.15.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..
Removed 1 unused cells and 33 unused wires.
<suppressed ~2 debug messages>

7.15.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.mem by address:
  Merging ports 0, 1 (address \addr [7:0]).
  Merging ports 0, 2 (address \addr [7:0]).
  Merging ports 0, 3 (address \addr [7:0]).
Consolidating read ports of memory alphasoc_regs.regs by address:

7.15.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

7.15.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

7.15.10. Executing MEMORY_COLLECT pass (generating $mem cells).

7.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..

7.17. Executing OPT pass (performing simple optimizations).

7.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
<suppressed ~243 debug messages>
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
<suppressed ~8 debug messages>
Optimizing module alphasoc.
<suppressed ~2 debug messages>
Optimizing module alphasoc_regs.
<suppressed ~3 debug messages>
Optimizing module simpleuart.
<suppressed ~8 debug messages>
Optimizing module spimemio.
<suppressed ~15 debug messages>
Optimizing module spimemio_xfer.
<suppressed ~39 debug messages>

7.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
<suppressed ~6 debug messages>
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
<suppressed ~3 debug messages>
Removed a total of 3 cells.

7.17.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$6294 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4751_Y, Q = \mem_valid, rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6258 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $procmux$4693_Y, Q = \mem_state, rval = 2'00).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6332 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Adding EN signal on $auto$ff.cc:266:slice$6714 ($dffe) from module spimemio (D = $auto$wreduce.cc:461:run$6872 [1:0], Q = \rd_addr [1:0]).

7.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..
Removed 28 unused cells and 184 unused wires.
<suppressed ~39 debug messages>

7.17.5. Rerunning OPT passes. (Removed registers in this run.)

7.17.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
<suppressed ~2 debug messages>
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
<suppressed ~1 debug messages>
Optimizing module spimemio.
<suppressed ~1 debug messages>
Optimizing module spimemio_xfer.

7.17.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 0 cells.

7.17.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$5136 ($dff) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore (D = $0\reg_sh[4:0] [1:0], Q = \reg_sh [1:0]).

7.17.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..

7.17.10. Rerunning OPT passes. (Removed registers in this run.)

7.17.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
Optimizing module spimemio_xfer.

7.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 0 cells.

7.17.13. Executing OPT_DFF pass (perform DFF optimizations).

7.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..

7.17.15. Finished fast OPT passes.

7.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \mem in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000:
  created 256 $dff cells and 0 static cells of width 32.
Extracted data FF from read port 0 of $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.mem: $\mem$rdreg[0]
  read interface: 1 $dff and 255 $mux cells.
  write interface: 1024 write mux blocks.
Mapping memory \regs in module \alphasoc_regs:
  created 32 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 62 $mux cells.
  write interface: 32 write mux blocks.

7.19. Executing OPT pass (performing simple optimizations).

7.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
<suppressed ~16 debug messages>
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
<suppressed ~10 debug messages>
Optimizing module simpleuart.
Optimizing module spimemio.
Optimizing module spimemio_xfer.

7.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 0 cells.

7.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc_regs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \simpleuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio_xfer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1183 debug messages>

7.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
    Consolidated identical input bits for $pmux cell $procmux$2920:
      Old ports: A=\mem_rdata_word, B={ \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15:0] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7:0] }, Y=$procmux$2920_Y
      New ports: A=\mem_rdata_word [31:8], B={ \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15:7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] }, Y=$procmux$2920_Y [31:8]
      New connections: $procmux$2920_Y [7:0] = \mem_rdata_word [7:0]
    New ctrl vector for $pmux cell $procmux$3170: { \cpu_state [3] $auto$opt_reduce.cc:134:opt_pmux$13608 }
    New ctrl vector for $pmux cell $procmux$3678: { \cpu_state [4] $auto$opt_reduce.cc:134:opt_pmux$13610 }
    New ctrl vector for $pmux cell $procmux$3913: { $procmux$3932_CMP $procmux$3914_CMP }
    New ctrl vector for $pmux cell $procmux$3915: { $procmux$3912_CMP $procmux$3930_CMP }
    Consolidated identical input bits for $mux cell $procmux$3965:
      Old ports: A={ \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] }, B={ \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] }, Y=$procmux$3965_Y
      New ports: A=\mem_rdata_latched [31], B=\mem_rdata_latched [12], Y=$procmux$3965_Y [0]
      New connections: $procmux$3965_Y [11:1] = { $procmux$3965_Y [0] $procmux$3965_Y [0] $procmux$3965_Y [0] $procmux$3965_Y [0] $procmux$3965_Y [0] $procmux$3965_Y [0] $procmux$3965_Y [0] $procmux$3965_Y [0] $procmux$3965_Y [0] $procmux$3965_Y [0] $procmux$3965_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$3993:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:461:run$6854 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:461:run$6854 [1]
      New connections: $auto$wreduce.cc:461:run$6854 [0] = 1'0
    Consolidated identical input bits for $mux cell $procmux$4171:
      Old ports: A=5'00000, B={ 2'01 \mem_rdata_latched [4:2] }, Y=$procmux$4171_Y
      New ports: A=4'0000, B={ 1'1 \mem_rdata_latched [4:2] }, Y=$procmux$4171_Y [3:0]
      New connections: $procmux$4171_Y [4] = 1'0
    Consolidated identical input bits for $mux cell $procmux$4178:
      Old ports: A=\mem_rdata_latched [19:12], B={ \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] }, Y=$procmux$4178_Y
      New ports: A=\mem_rdata_latched [19:13], B={ \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] }, Y=$procmux$4178_Y [7:1]
      New connections: $procmux$4178_Y [0] = \mem_rdata_latched [12]
    Consolidated identical input bits for $mux cell $procmux$4203:
      Old ports: A=5'00000, B={ 2'01 \mem_rdata_latched [9:7] }, Y=$procmux$4203_Y
      New ports: A=4'0000, B={ 1'1 \mem_rdata_latched [9:7] }, Y=$procmux$4203_Y [3:0]
      New connections: $procmux$4203_Y [4] = 1'0
    Consolidated identical input bits for $mux cell $procmux$4221:
      Old ports: A=5'00000, B={ 2'01 \mem_rdata_latched [4:2] }, Y=$procmux$4221_Y
      New ports: A=4'0000, B={ 1'1 \mem_rdata_latched [4:2] }, Y=$procmux$4221_Y [3:0]
      New connections: $procmux$4221_Y [4] = 1'0
    New ctrl vector for $pmux cell $procmux$4693: { $procmux$4656_CMP $auto$opt_reduce.cc:134:opt_pmux$13612 }
    Consolidated identical input bits for $mux cell $procmux$4845:
      Old ports: A={ \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] }, B={ \mem_rdata_latched [6] 4'0000 }, Y=$procmux$4845_Y
      New ports: A={ \mem_rdata_latched [12] \mem_rdata_latched [12] }, B={ \mem_rdata_latched [6] 1'0 }, Y={ $procmux$4845_Y [4] $procmux$4845_Y [0] }
      New connections: $procmux$4845_Y [3:1] = { $procmux$4845_Y [0] $procmux$4845_Y [0] $procmux$4845_Y [0] }
    Consolidated identical input bits for $pmux cell $procmux$4987:
      Old ports: A={ 24'000000000000000000000000 \mem_rdata [7:0] }, B={ 24'000000000000000000000000 \mem_rdata [15:8] 24'000000000000000000000000 \mem_rdata [23:16] 24'000000000000000000000000 \mem_rdata [31:24] }, Y=$3\mem_rdata_word[31:0]
      New ports: A=\mem_rdata [7:0], B={ \mem_rdata [15:8] \mem_rdata [23:16] \mem_rdata [31:24] }, Y=$3\mem_rdata_word[31:0] [7:0]
      New connections: $3\mem_rdata_word[31:0] [31:8] = 24'000000000000000000000000
    Consolidated identical input bits for $mux cell $procmux$4996:
      Old ports: A={ 16'0000000000000000 \mem_rdata [15:0] }, B={ 16'0000000000000000 \mem_rdata [31:16] }, Y=$2\mem_rdata_word[31:0]
      New ports: A=\mem_rdata [15:0], B=\mem_rdata [31:16], Y=$2\mem_rdata_word[31:0] [15:0]
      New connections: $2\mem_rdata_word[31:0] [31:16] = 16'0000000000000000
    Consolidated identical input bits for $pmux cell $procmux$5012:
      Old ports: A=\reg_op2, B={ \reg_op2 [15:0] \reg_op2 [15:0] \reg_op2 [7:0] \reg_op2 [7:0] \reg_op2 [7:0] \reg_op2 [7:0] }, Y=\mem_la_wdata
      New ports: A=\reg_op2 [31:8], B={ \reg_op2 [15:0] \reg_op2 [15:0] \reg_op2 [7:0] \reg_op2 [7:0] }, Y=\mem_la_wdata [31:8]
      New connections: \mem_la_wdata [7:0] = \reg_op2 [7:0]
    Consolidated identical input bits for $mux cell $ternary$./module/alphacore.v:1091$1324:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:461:run$6857 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:461:run$6857 [2:1]
      New connections: $auto$wreduce.cc:461:run$6857 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$./module/alphacore.v:1281$1394:
      Old ports: A=2'00, B=2'10, Y=$ternary$./module/alphacore.v:1281$1394_Y
      New ports: A=1'0, B=1'1, Y=$ternary$./module/alphacore.v:1281$1394_Y [1]
      New connections: $ternary$./module/alphacore.v:1281$1394_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$./module/alphacore.v:1286$1396:
      Old ports: A=3'011, B=3'100, Y=$auto$wreduce.cc:461:run$6858 [2:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:461:run$6858 [2] $auto$wreduce.cc:461:run$6858 [0] }
      New connections: $auto$wreduce.cc:461:run$6858 [1] = $auto$wreduce.cc:461:run$6858 [0]
    Consolidated identical input bits for $mux cell $ternary$./module/alphacore.v:1292$1401:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:461:run$6859 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:461:run$6859 [2:1]
      New connections: $auto$wreduce.cc:461:run$6859 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$./module/alphacore.v:134$947:
      Old ports: A={ \reg_op1 [31:2] 2'00 }, B={ $add$./module/alphacore.v:134$946_Y 2'00 }, Y=\mem_la_addr
      New ports: A=\reg_op1 [31:2], B=$add$./module/alphacore.v:134$946_Y, Y=\mem_la_addr [31:2]
      New connections: \mem_la_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$./module/alphacore.v:161$959:
      Old ports: A=4'0011, B=4'1100, Y=$ternary$./module/alphacore.v:161$959_Y
      New ports: A=2'01, B=2'10, Y={ $ternary$./module/alphacore.v:161$959_Y [2] $ternary$./module/alphacore.v:161$959_Y [0] }
      New connections: { $ternary$./module/alphacore.v:161$959_Y [3] $ternary$./module/alphacore.v:161$959_Y [1] } = { $ternary$./module/alphacore.v:161$959_Y [2] $ternary$./module/alphacore.v:161$959_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$./module/alphacore.v:241$974:
      Old ports: A=6'000000, B=6'100000, Y=$auto$wreduce.cc:461:run$6860 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:461:run$6860 [5]
      New connections: $auto$wreduce.cc:461:run$6860 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$./module/alphacore.v:367$1018:
      Old ports: A=2'11, B=2'00, Y=$auto$wreduce.cc:461:run$6861 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$6861 [0]
      New connections: $auto$wreduce.cc:461:run$6861 [1] = $auto$wreduce.cc:461:run$6861 [0]
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$13607: { \cpu_state [6] \cpu_state [4] \cpu_state [2] }
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
    Consolidated identical input bits for $mux cell $procmux$4205:
      Old ports: A=$procmux$4203_Y, B={ 2'01 \mem_rdata_latched [9:7] }, Y=$procmux$4205_Y
      New ports: A=$procmux$4203_Y [3:0], B={ 1'1 \mem_rdata_latched [9:7] }, Y=$procmux$4205_Y [3:0]
      New connections: $procmux$4205_Y [4] = 1'0
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
    Consolidated identical input bits for $mux cell $procmux$4207:
      Old ports: A=$procmux$4205_Y, B={ 2'01 \mem_rdata_latched [9:7] }, Y=$procmux$4207_Y
      New ports: A=$procmux$4205_Y [3:0], B={ 1'1 \mem_rdata_latched [9:7] }, Y=$procmux$4207_Y [3:0]
      New connections: $procmux$4207_Y [4] = 1'0
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
  Optimizing cells in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \alphasoc_regs.
  Optimizing cells in module \simpleuart.
    Consolidated identical input bits for $mux cell $ternary$./module/simpleuart.v:34$730:
      Old ports: A=32'11111111111111111111111111111111, B={ 24'000000000000000000000000 \recv_buf_data }, Y=\reg_dat_do
      New ports: A=9'111111111, B={ 1'0 \recv_buf_data }, Y=\reg_dat_do [8:0]
      New connections: \reg_dat_do [31:9] = { \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] \reg_dat_do [8] }
  Optimizing cells in module \simpleuart.
  Optimizing cells in module \spimemio.
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$7094: { $auto$opt_dff.cc:194:make_patterns_logic$7091 $auto$rtlil.cc:2412:Not$6696 $logic_and$./module/spimemio.v:205$794_Y }
    Consolidated identical input bits for $pmux cell $procmux$2091:
      Old ports: A=4'0000, B=20'00000001001000110100, Y=$procmux$2091_Y
      New ports: A=3'000, B=15'000001010011100, Y=$procmux$2091_Y [2:0]
      New connections: $procmux$2091_Y [3] = 1'0
    New ctrl vector for $pmux cell $procmux$2091: { \state [8] \state [5] \state [11] \state [3] }
    Consolidated identical input bits for $pmux cell $procmux$2122:
      Old ports: A=8'11101101, B=24'111010111011101100000011, Y=$procmux$2122_Y
      New ports: A=5'10110, B=15'101010110100001, Y={ $procmux$2122_Y [6] $procmux$2122_Y [4:1] }
      New connections: { $procmux$2122_Y [7] $procmux$2122_Y [5] $procmux$2122_Y [0] } = { $procmux$2122_Y [3] $procmux$2122_Y [3] 1'1 }
    Consolidated identical input bits for $mux cell $ternary$./module/spimemio.v:297$802:
      Old ports: A=7'1111111, B=7'0100101, Y=$auto$wreduce.cc:461:run$6873 [6:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$6873 [1]
      New connections: { $auto$wreduce.cc:461:run$6873 [6:2] $auto$wreduce.cc:461:run$6873 [0] } = { $auto$wreduce.cc:461:run$6873 [1] 1'1 $auto$wreduce.cc:461:run$6873 [1] $auto$wreduce.cc:461:run$6873 [1] 2'11 }
  Optimizing cells in module \spimemio.
    Consolidated identical input bits for $mux cell $procmux$2112:
      Old ports: A={ 1'1 $auto$wreduce.cc:461:run$6873 [6:0] }, B={ 4'0000 \config_dummy }, Y=$procmux$2112_Y
      New ports: A={ 1'1 $auto$wreduce.cc:461:run$6873 [1] $auto$wreduce.cc:461:run$6873 [1] 1'1 $auto$wreduce.cc:461:run$6873 [1] 1'1 }, B={ 2'00 \config_dummy }, Y=$procmux$2112_Y [5:0]
      New connections: $procmux$2112_Y [7:6] = $procmux$2112_Y [5:4]
  Optimizing cells in module \spimemio.
  Optimizing cells in module \spimemio_xfer.
    Consolidated identical input bits for $mux cell $procmux$1617:
      Old ports: A=\count, B={ $sub$./module/spimemio.v:505$836_Y [3:1] \count [0] }, Y=$5\next_count[3:0]
      New ports: A=\count [3:1], B=$sub$./module/spimemio.v:505$836_Y [3:1], Y=$5\next_count[3:0] [3:1]
      New connections: $5\next_count[3:0] [0] = \count [0]
    Consolidated identical input bits for $mux cell $procmux$1658:
      Old ports: A=\count, B={ $sub$./module/spimemio.v:472$824_Y [3:2] \count [1:0] }, Y=$4\next_count[3:0]
      New ports: A=\count [3:2], B=$sub$./module/spimemio.v:472$824_Y [3:2], Y=$4\next_count[3:0] [3:2]
      New connections: $4\next_count[3:0] [1:0] = \count [1:0]
    New ctrl vector for $pmux cell $procmux$1746: { $procmux$1624_CMP $auto$opt_reduce.cc:134:opt_pmux$13614 }
    Consolidated identical input bits for $pmux cell $procmux$1756:
      Old ports: A={ \obuffer [5:0] 2'00 }, B={ \obuffer [6:0] 1'0 \obuffer [3:0] 4'0000 \obuffer [3:0] 4'0000 }, Y=\next_obuffer
      New ports: A={ \obuffer [5:0] 1'0 }, B={ \obuffer [6:0] \obuffer [3:0] 3'000 \obuffer [3:0] 3'000 }, Y=\next_obuffer [7:1]
      New connections: \next_obuffer [0] = 1'0
    New ctrl vector for $pmux cell $procmux$1756: { $procmux$1624_CMP $auto$opt_reduce.cc:134:opt_pmux$13616 }
  Optimizing cells in module \spimemio_xfer.
Performed a total of 39 changes.

7.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
<suppressed ~12 debug messages>
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
<suppressed ~6 debug messages>
Removed a total of 6 cells.

7.19.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $ternary$./module/alphacore.v:1018$1519 in front of them:
        $auto$alumacc.cc:485:replace_alu$6945
        $auto$alumacc.cc:485:replace_alu$6912

    Found cells that share an operand and can be merged by moving the $pmux $procmux$1998 in front of them:
        $procmux$1996
        $procmux$2020

7.19.7. Executing OPT_DFF pass (perform DFF optimizations).

7.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..
Removed 0 unused cells and 635 unused wires.
<suppressed ~5 debug messages>

7.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
<suppressed ~7 debug messages>
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
<suppressed ~2 debug messages>
Optimizing module spimemio_xfer.

7.19.10. Rerunning OPT passes. (Maybe there is more to do..)

7.19.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc_regs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \simpleuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio_xfer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1187 debug messages>

7.19.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
    Consolidated identical input bits for $mux cell $procmux$3729:
      Old ports: A=$add$./module/alphacore.v:1292$1402_Y, B={ $add$./module/alphacore.v:1309$1406_Y [31:1] $3\current_pc[31:0] [0] }, Y=$procmux$3729_Y
      New ports: A=$add$./module/alphacore.v:1292$1402_Y [31:1], B=$add$./module/alphacore.v:1309$1406_Y [31:1], Y=$procmux$3729_Y [31:1]
      New connections: $procmux$3729_Y [0] = $3\current_pc[31:0] [0]
    Consolidated identical input bits for $mux cell $procmux$3735:
      Old ports: A=$3\current_pc[31:0], B=$add$./module/alphacore.v:1292$1402_Y, Y=$procmux$3735_Y
      New ports: A=$3\current_pc[31:0] [31:1], B=$add$./module/alphacore.v:1292$1402_Y [31:1], Y=$procmux$3735_Y [31:1]
      New connections: $procmux$3735_Y [0] = $3\current_pc[31:0] [0]
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
    Consolidated identical input bits for $mux cell $procmux$3731:
      Old ports: A=$3\current_pc[31:0], B=$procmux$3729_Y, Y=$procmux$3731_Y
      New ports: A=$3\current_pc[31:0] [31:1], B=$procmux$3729_Y [31:1], Y=$procmux$3731_Y [31:1]
      New connections: $procmux$3731_Y [0] = $3\current_pc[31:0] [0]
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
    Consolidated identical input bits for $mux cell $procmux$3737:
      Old ports: A=$procmux$3731_Y, B=$procmux$3735_Y, Y=$procmux$3737_Y
      New ports: A=$procmux$3731_Y [31:1], B=$procmux$3735_Y [31:1], Y=$procmux$3737_Y [31:1]
      New connections: $procmux$3737_Y [0] = $3\current_pc[31:0] [0]
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
    Consolidated identical input bits for $mux cell $procmux$3740:
      Old ports: A=$procmux$3737_Y, B=$3\current_pc[31:0], Y=$procmux$3740_Y
      New ports: A=$procmux$3737_Y [31:1], B=$3\current_pc[31:0] [31:1], Y=$procmux$3740_Y [31:1]
      New connections: $procmux$3740_Y [0] = $3\current_pc[31:0] [0]
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
  Optimizing cells in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \alphasoc_regs.
  Optimizing cells in module \simpleuart.
  Optimizing cells in module \spimemio.
    New ctrl vector for $pmux cell $procmux$1998: { $auto$opt_reduce.cc:134:opt_pmux$5407 $auto$opt_reduce.cc:134:opt_pmux$13628 }
  Optimizing cells in module \spimemio.
  Optimizing cells in module \spimemio_xfer.
Performed a total of 6 changes.

7.19.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 0 cells.

7.19.14. Executing OPT_SHARE pass.

7.19.15. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6281 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$6281 ($dffe) from module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Adding EN signal on $memory\mem[9]$7118 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[9] [31:24]).
Adding EN signal on $memory\mem[9]$7118 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[9] [23:16]).
Adding EN signal on $memory\mem[9]$7118 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[9] [15:8]).
Adding EN signal on $memory\mem[9]$7118 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[9] [7:0]).
Adding EN signal on $memory\mem[99]$7298 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[99] [7:0]).
Adding EN signal on $memory\mem[99]$7298 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[99] [15:8]).
Adding EN signal on $memory\mem[99]$7298 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[99] [23:16]).
Adding EN signal on $memory\mem[99]$7298 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[99] [31:24]).
Adding EN signal on $memory\mem[98]$7296 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[98] [7:0]).
Adding EN signal on $memory\mem[98]$7296 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[98] [15:8]).
Adding EN signal on $memory\mem[98]$7296 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[98] [23:16]).
Adding EN signal on $memory\mem[98]$7296 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[98] [31:24]).
Adding EN signal on $memory\mem[97]$7294 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[97] [7:0]).
Adding EN signal on $memory\mem[97]$7294 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[97] [15:8]).
Adding EN signal on $memory\mem[97]$7294 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[97] [23:16]).
Adding EN signal on $memory\mem[97]$7294 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[97] [31:24]).
Adding EN signal on $memory\mem[96]$7292 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[96] [7:0]).
Adding EN signal on $memory\mem[96]$7292 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[96] [15:8]).
Adding EN signal on $memory\mem[96]$7292 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[96] [23:16]).
Adding EN signal on $memory\mem[96]$7292 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[96] [31:24]).
Adding EN signal on $memory\mem[95]$7290 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[95] [31:24]).
Adding EN signal on $memory\mem[95]$7290 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[95] [23:16]).
Adding EN signal on $memory\mem[95]$7290 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[95] [15:8]).
Adding EN signal on $memory\mem[95]$7290 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[95] [7:0]).
Adding EN signal on $memory\mem[94]$7288 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[94] [7:0]).
Adding EN signal on $memory\mem[94]$7288 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[94] [15:8]).
Adding EN signal on $memory\mem[94]$7288 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[94] [31:24]).
Adding EN signal on $memory\mem[94]$7288 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[94] [23:16]).
Adding EN signal on $memory\mem[93]$7286 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[93] [7:0]).
Adding EN signal on $memory\mem[93]$7286 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[93] [15:8]).
Adding EN signal on $memory\mem[93]$7286 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[93] [23:16]).
Adding EN signal on $memory\mem[93]$7286 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[93] [31:24]).
Adding EN signal on $memory\mem[92]$7284 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[92] [7:0]).
Adding EN signal on $memory\mem[92]$7284 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[92] [15:8]).
Adding EN signal on $memory\mem[92]$7284 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[92] [23:16]).
Adding EN signal on $memory\mem[92]$7284 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[92] [31:24]).
Adding EN signal on $memory\mem[91]$7282 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[91] [15:8]).
Adding EN signal on $memory\mem[91]$7282 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[91] [23:16]).
Adding EN signal on $memory\mem[91]$7282 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[91] [31:24]).
Adding EN signal on $memory\mem[91]$7282 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[91] [7:0]).
Adding EN signal on $memory\mem[90]$7280 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[90] [7:0]).
Adding EN signal on $memory\mem[90]$7280 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[90] [15:8]).
Adding EN signal on $memory\mem[90]$7280 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[90] [23:16]).
Adding EN signal on $memory\mem[90]$7280 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[90] [31:24]).
Adding EN signal on $memory\mem[8]$7116 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[8] [31:24]).
Adding EN signal on $memory\mem[8]$7116 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[8] [23:16]).
Adding EN signal on $memory\mem[8]$7116 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[8] [15:8]).
Adding EN signal on $memory\mem[8]$7116 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[8] [7:0]).
Adding EN signal on $memory\mem[89]$7278 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[89] [7:0]).
Adding EN signal on $memory\mem[89]$7278 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[89] [15:8]).
Adding EN signal on $memory\mem[89]$7278 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[89] [23:16]).
Adding EN signal on $memory\mem[89]$7278 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[89] [31:24]).
Adding EN signal on $memory\mem[88]$7276 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[88] [7:0]).
Adding EN signal on $memory\mem[88]$7276 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[88] [15:8]).
Adding EN signal on $memory\mem[88]$7276 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[88] [23:16]).
Adding EN signal on $memory\mem[88]$7276 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[88] [31:24]).
Adding EN signal on $memory\mem[87]$7274 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[87] [23:16]).
Adding EN signal on $memory\mem[87]$7274 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[87] [31:24]).
Adding EN signal on $memory\mem[87]$7274 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[87] [15:8]).
Adding EN signal on $memory\mem[87]$7274 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[87] [7:0]).
Adding EN signal on $memory\mem[86]$7272 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[86] [7:0]).
Adding EN signal on $memory\mem[86]$7272 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[86] [15:8]).
Adding EN signal on $memory\mem[86]$7272 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[86] [23:16]).
Adding EN signal on $memory\mem[86]$7272 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[86] [31:24]).
Adding EN signal on $memory\mem[85]$7270 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[85] [7:0]).
Adding EN signal on $memory\mem[85]$7270 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[85] [15:8]).
Adding EN signal on $memory\mem[85]$7270 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[85] [23:16]).
Adding EN signal on $memory\mem[85]$7270 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[85] [31:24]).
Adding EN signal on $memory\mem[84]$7268 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[84] [15:8]).
Adding EN signal on $memory\mem[84]$7268 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[84] [23:16]).
Adding EN signal on $memory\mem[84]$7268 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[84] [31:24]).
Adding EN signal on $memory\mem[84]$7268 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[84] [7:0]).
Adding EN signal on $memory\mem[83]$7266 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[83] [31:24]).
Adding EN signal on $memory\mem[83]$7266 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[83] [23:16]).
Adding EN signal on $memory\mem[83]$7266 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[83] [15:8]).
Adding EN signal on $memory\mem[83]$7266 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[83] [7:0]).
Adding EN signal on $memory\mem[82]$7264 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[82] [31:24]).
Adding EN signal on $memory\mem[82]$7264 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[82] [23:16]).
Adding EN signal on $memory\mem[82]$7264 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[82] [15:8]).
Adding EN signal on $memory\mem[82]$7264 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[82] [7:0]).
Adding EN signal on $memory\mem[81]$7262 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[81] [31:24]).
Adding EN signal on $memory\mem[81]$7262 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[81] [23:16]).
Adding EN signal on $memory\mem[81]$7262 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[81] [15:8]).
Adding EN signal on $memory\mem[81]$7262 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[81] [7:0]).
Adding EN signal on $memory\mem[80]$7260 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[80] [31:24]).
Adding EN signal on $memory\mem[80]$7260 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[80] [23:16]).
Adding EN signal on $memory\mem[80]$7260 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[80] [15:8]).
Adding EN signal on $memory\mem[80]$7260 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[80] [7:0]).
Adding EN signal on $memory\mem[7]$7114 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[7] [31:24]).
Adding EN signal on $memory\mem[7]$7114 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[7] [23:16]).
Adding EN signal on $memory\mem[7]$7114 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[7] [15:8]).
Adding EN signal on $memory\mem[7]$7114 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[7] [7:0]).
Adding EN signal on $memory\mem[79]$7258 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[79] [31:24]).
Adding EN signal on $memory\mem[79]$7258 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[79] [23:16]).
Adding EN signal on $memory\mem[79]$7258 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[79] [15:8]).
Adding EN signal on $memory\mem[79]$7258 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[79] [7:0]).
Adding EN signal on $memory\mem[78]$7256 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[78] [31:24]).
Adding EN signal on $memory\mem[78]$7256 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[78] [23:16]).
Adding EN signal on $memory\mem[78]$7256 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[78] [15:8]).
Adding EN signal on $memory\mem[78]$7256 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[78] [7:0]).
Adding EN signal on $memory\mem[77]$7254 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[77] [31:24]).
Adding EN signal on $memory\mem[77]$7254 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[77] [23:16]).
Adding EN signal on $memory\mem[77]$7254 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[77] [15:8]).
Adding EN signal on $memory\mem[77]$7254 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[77] [7:0]).
Adding EN signal on $memory\mem[76]$7252 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[76] [31:24]).
Adding EN signal on $memory\mem[76]$7252 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[76] [23:16]).
Adding EN signal on $memory\mem[76]$7252 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[76] [15:8]).
Adding EN signal on $memory\mem[76]$7252 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[76] [7:0]).
Adding EN signal on $memory\mem[75]$7250 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[75] [31:24]).
Adding EN signal on $memory\mem[75]$7250 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[75] [23:16]).
Adding EN signal on $memory\mem[75]$7250 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[75] [15:8]).
Adding EN signal on $memory\mem[75]$7250 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[75] [7:0]).
Adding EN signal on $memory\mem[74]$7248 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[74] [31:24]).
Adding EN signal on $memory\mem[74]$7248 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[74] [23:16]).
Adding EN signal on $memory\mem[74]$7248 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[74] [15:8]).
Adding EN signal on $memory\mem[74]$7248 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[74] [7:0]).
Adding EN signal on $memory\mem[73]$7246 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[73] [31:24]).
Adding EN signal on $memory\mem[73]$7246 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[73] [23:16]).
Adding EN signal on $memory\mem[73]$7246 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[73] [15:8]).
Adding EN signal on $memory\mem[73]$7246 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[73] [7:0]).
Adding EN signal on $memory\mem[72]$7244 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[72] [31:24]).
Adding EN signal on $memory\mem[72]$7244 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[72] [23:16]).
Adding EN signal on $memory\mem[72]$7244 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[72] [15:8]).
Adding EN signal on $memory\mem[72]$7244 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[72] [7:0]).
Adding EN signal on $memory\mem[71]$7242 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[71] [31:24]).
Adding EN signal on $memory\mem[71]$7242 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[71] [23:16]).
Adding EN signal on $memory\mem[71]$7242 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[71] [15:8]).
Adding EN signal on $memory\mem[71]$7242 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[71] [7:0]).
Adding EN signal on $memory\mem[70]$7240 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[70] [31:24]).
Adding EN signal on $memory\mem[70]$7240 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[70] [23:16]).
Adding EN signal on $memory\mem[70]$7240 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[70] [15:8]).
Adding EN signal on $memory\mem[70]$7240 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[70] [7:0]).
Adding EN signal on $memory\mem[6]$7112 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[6] [31:24]).
Adding EN signal on $memory\mem[6]$7112 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[6] [23:16]).
Adding EN signal on $memory\mem[6]$7112 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[6] [15:8]).
Adding EN signal on $memory\mem[6]$7112 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[6] [7:0]).
Adding EN signal on $memory\mem[69]$7238 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[69] [31:24]).
Adding EN signal on $memory\mem[69]$7238 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[69] [23:16]).
Adding EN signal on $memory\mem[69]$7238 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[69] [15:8]).
Adding EN signal on $memory\mem[69]$7238 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[69] [7:0]).
Adding EN signal on $memory\mem[68]$7236 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[68] [23:16]).
Adding EN signal on $memory\mem[68]$7236 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[68] [15:8]).
Adding EN signal on $memory\mem[68]$7236 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[68] [31:24]).
Adding EN signal on $memory\mem[68]$7236 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[68] [7:0]).
Adding EN signal on $memory\mem[67]$7234 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[67] [15:8]).
Adding EN signal on $memory\mem[67]$7234 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[67] [7:0]).
Adding EN signal on $memory\mem[67]$7234 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[67] [31:24]).
Adding EN signal on $memory\mem[67]$7234 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[67] [23:16]).
Adding EN signal on $memory\mem[66]$7232 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[66] [31:24]).
Adding EN signal on $memory\mem[66]$7232 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[66] [23:16]).
Adding EN signal on $memory\mem[66]$7232 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[66] [15:8]).
Adding EN signal on $memory\mem[66]$7232 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[66] [7:0]).
Adding EN signal on $memory\mem[65]$7230 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[65] [31:24]).
Adding EN signal on $memory\mem[65]$7230 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[65] [23:16]).
Adding EN signal on $memory\mem[65]$7230 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[65] [15:8]).
Adding EN signal on $memory\mem[65]$7230 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[65] [7:0]).
Adding EN signal on $memory\mem[64]$7228 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[64] [31:24]).
Adding EN signal on $memory\mem[64]$7228 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[64] [23:16]).
Adding EN signal on $memory\mem[64]$7228 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[64] [15:8]).
Adding EN signal on $memory\mem[64]$7228 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[64] [7:0]).
Adding EN signal on $memory\mem[63]$7226 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[63] [31:24]).
Adding EN signal on $memory\mem[63]$7226 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[63] [23:16]).
Adding EN signal on $memory\mem[63]$7226 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[63] [15:8]).
Adding EN signal on $memory\mem[63]$7226 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[63] [7:0]).
Adding EN signal on $memory\mem[62]$7224 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[62] [31:24]).
Adding EN signal on $memory\mem[62]$7224 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[62] [23:16]).
Adding EN signal on $memory\mem[62]$7224 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[62] [15:8]).
Adding EN signal on $memory\mem[62]$7224 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[62] [7:0]).
Adding EN signal on $memory\mem[61]$7222 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[61] [7:0]).
Adding EN signal on $memory\mem[61]$7222 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[61] [31:24]).
Adding EN signal on $memory\mem[61]$7222 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[61] [23:16]).
Adding EN signal on $memory\mem[61]$7222 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[61] [15:8]).
Adding EN signal on $memory\mem[60]$7220 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[60] [31:24]).
Adding EN signal on $memory\mem[60]$7220 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[60] [23:16]).
Adding EN signal on $memory\mem[60]$7220 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[60] [15:8]).
Adding EN signal on $memory\mem[60]$7220 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[60] [7:0]).
Adding EN signal on $memory\mem[5]$7110 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[5] [31:24]).
Adding EN signal on $memory\mem[5]$7110 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[5] [23:16]).
Adding EN signal on $memory\mem[5]$7110 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[5] [15:8]).
Adding EN signal on $memory\mem[5]$7110 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[5] [7:0]).
Adding EN signal on $memory\mem[59]$7218 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[59] [23:16]).
Adding EN signal on $memory\mem[59]$7218 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[59] [15:8]).
Adding EN signal on $memory\mem[59]$7218 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[59] [7:0]).
Adding EN signal on $memory\mem[59]$7218 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[59] [31:24]).
Adding EN signal on $memory\mem[58]$7216 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[58] [23:16]).
Adding EN signal on $memory\mem[58]$7216 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[58] [31:24]).
Adding EN signal on $memory\mem[58]$7216 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[58] [15:8]).
Adding EN signal on $memory\mem[58]$7216 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[58] [7:0]).
Adding EN signal on $memory\mem[57]$7214 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[57] [31:24]).
Adding EN signal on $memory\mem[57]$7214 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[57] [23:16]).
Adding EN signal on $memory\mem[57]$7214 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[57] [15:8]).
Adding EN signal on $memory\mem[57]$7214 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[57] [7:0]).
Adding EN signal on $memory\mem[56]$7212 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[56] [15:8]).
Adding EN signal on $memory\mem[56]$7212 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[56] [31:24]).
Adding EN signal on $memory\mem[56]$7212 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[56] [23:16]).
Adding EN signal on $memory\mem[56]$7212 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[56] [7:0]).
Adding EN signal on $memory\mem[55]$7210 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[55] [7:0]).
Adding EN signal on $memory\mem[55]$7210 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[55] [15:8]).
Adding EN signal on $memory\mem[55]$7210 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[55] [23:16]).
Adding EN signal on $memory\mem[55]$7210 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[55] [31:24]).
Adding EN signal on $memory\mem[54]$7208 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[54] [7:0]).
Adding EN signal on $memory\mem[54]$7208 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[54] [15:8]).
Adding EN signal on $memory\mem[54]$7208 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[54] [23:16]).
Adding EN signal on $memory\mem[54]$7208 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[54] [31:24]).
Adding EN signal on $memory\mem[53]$7206 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[53] [7:0]).
Adding EN signal on $memory\mem[53]$7206 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[53] [15:8]).
Adding EN signal on $memory\mem[53]$7206 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[53] [23:16]).
Adding EN signal on $memory\mem[53]$7206 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[53] [31:24]).
Adding EN signal on $memory\mem[52]$7204 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[52] [7:0]).
Adding EN signal on $memory\mem[52]$7204 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[52] [15:8]).
Adding EN signal on $memory\mem[52]$7204 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[52] [23:16]).
Adding EN signal on $memory\mem[52]$7204 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[52] [31:24]).
Adding EN signal on $memory\mem[51]$7202 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[51] [23:16]).
Adding EN signal on $memory\mem[51]$7202 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[51] [31:24]).
Adding EN signal on $memory\mem[51]$7202 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[51] [7:0]).
Adding EN signal on $memory\mem[51]$7202 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[51] [15:8]).
Adding EN signal on $memory\mem[50]$7200 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[50] [15:8]).
Adding EN signal on $memory\mem[50]$7200 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[50] [23:16]).
Adding EN signal on $memory\mem[50]$7200 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[50] [31:24]).
Adding EN signal on $memory\mem[50]$7200 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[50] [7:0]).
Adding EN signal on $memory\mem[4]$7108 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[4] [31:24]).
Adding EN signal on $memory\mem[4]$7108 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[4] [23:16]).
Adding EN signal on $memory\mem[4]$7108 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[4] [15:8]).
Adding EN signal on $memory\mem[4]$7108 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[4] [7:0]).
Adding EN signal on $memory\mem[49]$7198 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[49] [31:24]).
Adding EN signal on $memory\mem[49]$7198 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[49] [23:16]).
Adding EN signal on $memory\mem[49]$7198 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[49] [15:8]).
Adding EN signal on $memory\mem[49]$7198 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[49] [7:0]).
Adding EN signal on $memory\mem[48]$7196 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[48] [31:24]).
Adding EN signal on $memory\mem[48]$7196 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[48] [23:16]).
Adding EN signal on $memory\mem[48]$7196 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[48] [15:8]).
Adding EN signal on $memory\mem[48]$7196 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[48] [7:0]).
Adding EN signal on $memory\mem[47]$7194 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[47] [31:24]).
Adding EN signal on $memory\mem[47]$7194 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[47] [23:16]).
Adding EN signal on $memory\mem[47]$7194 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[47] [15:8]).
Adding EN signal on $memory\mem[47]$7194 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[47] [7:0]).
Adding EN signal on $memory\mem[46]$7192 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[46] [31:24]).
Adding EN signal on $memory\mem[46]$7192 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[46] [23:16]).
Adding EN signal on $memory\mem[46]$7192 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[46] [15:8]).
Adding EN signal on $memory\mem[46]$7192 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[46] [7:0]).
Adding EN signal on $memory\mem[45]$7190 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[45] [31:24]).
Adding EN signal on $memory\mem[45]$7190 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[45] [23:16]).
Adding EN signal on $memory\mem[45]$7190 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[45] [15:8]).
Adding EN signal on $memory\mem[45]$7190 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[45] [7:0]).
Adding EN signal on $memory\mem[44]$7188 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[44] [31:24]).
Adding EN signal on $memory\mem[44]$7188 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[44] [23:16]).
Adding EN signal on $memory\mem[44]$7188 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[44] [15:8]).
Adding EN signal on $memory\mem[44]$7188 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[44] [7:0]).
Adding EN signal on $memory\mem[43]$7186 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[43] [31:24]).
Adding EN signal on $memory\mem[43]$7186 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[43] [23:16]).
Adding EN signal on $memory\mem[43]$7186 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[43] [15:8]).
Adding EN signal on $memory\mem[43]$7186 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[43] [7:0]).
Adding EN signal on $memory\mem[42]$7184 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[42] [31:24]).
Adding EN signal on $memory\mem[42]$7184 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[42] [23:16]).
Adding EN signal on $memory\mem[42]$7184 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[42] [15:8]).
Adding EN signal on $memory\mem[42]$7184 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[42] [7:0]).
Adding EN signal on $memory\mem[41]$7182 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[41] [31:24]).
Adding EN signal on $memory\mem[41]$7182 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[41] [23:16]).
Adding EN signal on $memory\mem[41]$7182 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[41] [15:8]).
Adding EN signal on $memory\mem[41]$7182 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[41] [7:0]).
Adding EN signal on $memory\mem[40]$7180 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[40] [31:24]).
Adding EN signal on $memory\mem[40]$7180 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[40] [23:16]).
Adding EN signal on $memory\mem[40]$7180 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[40] [15:8]).
Adding EN signal on $memory\mem[40]$7180 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[40] [7:0]).
Adding EN signal on $memory\mem[3]$7106 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[3] [31:24]).
Adding EN signal on $memory\mem[3]$7106 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[3] [23:16]).
Adding EN signal on $memory\mem[3]$7106 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[3] [15:8]).
Adding EN signal on $memory\mem[3]$7106 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[3] [7:0]).
Adding EN signal on $memory\mem[39]$7178 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[39] [31:24]).
Adding EN signal on $memory\mem[39]$7178 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[39] [23:16]).
Adding EN signal on $memory\mem[39]$7178 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[39] [15:8]).
Adding EN signal on $memory\mem[39]$7178 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[39] [7:0]).
Adding EN signal on $memory\mem[38]$7176 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[38] [31:24]).
Adding EN signal on $memory\mem[38]$7176 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[38] [23:16]).
Adding EN signal on $memory\mem[38]$7176 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[38] [15:8]).
Adding EN signal on $memory\mem[38]$7176 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[38] [7:0]).
Adding EN signal on $memory\mem[37]$7174 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[37] [31:24]).
Adding EN signal on $memory\mem[37]$7174 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[37] [23:16]).
Adding EN signal on $memory\mem[37]$7174 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[37] [15:8]).
Adding EN signal on $memory\mem[37]$7174 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[37] [7:0]).
Adding EN signal on $memory\mem[36]$7172 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[36] [31:24]).
Adding EN signal on $memory\mem[36]$7172 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[36] [23:16]).
Adding EN signal on $memory\mem[36]$7172 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[36] [15:8]).
Adding EN signal on $memory\mem[36]$7172 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[36] [7:0]).
Adding EN signal on $memory\mem[35]$7170 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[35] [31:24]).
Adding EN signal on $memory\mem[35]$7170 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[35] [23:16]).
Adding EN signal on $memory\mem[35]$7170 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[35] [15:8]).
Adding EN signal on $memory\mem[35]$7170 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[35] [7:0]).
Adding EN signal on $memory\mem[34]$7168 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[34] [31:24]).
Adding EN signal on $memory\mem[34]$7168 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[34] [23:16]).
Adding EN signal on $memory\mem[34]$7168 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[34] [15:8]).
Adding EN signal on $memory\mem[34]$7168 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[34] [7:0]).
Adding EN signal on $memory\mem[33]$7166 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[33] [31:24]).
Adding EN signal on $memory\mem[33]$7166 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[33] [23:16]).
Adding EN signal on $memory\mem[33]$7166 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[33] [15:8]).
Adding EN signal on $memory\mem[33]$7166 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[33] [7:0]).
Adding EN signal on $memory\mem[32]$7164 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[32] [31:24]).
Adding EN signal on $memory\mem[32]$7164 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[32] [23:16]).
Adding EN signal on $memory\mem[32]$7164 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[32] [15:8]).
Adding EN signal on $memory\mem[32]$7164 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[32] [7:0]).
Adding EN signal on $memory\mem[31]$7162 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[31] [31:24]).
Adding EN signal on $memory\mem[31]$7162 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[31] [23:16]).
Adding EN signal on $memory\mem[31]$7162 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[31] [15:8]).
Adding EN signal on $memory\mem[31]$7162 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[31] [7:0]).
Adding EN signal on $memory\mem[30]$7160 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[30] [31:24]).
Adding EN signal on $memory\mem[30]$7160 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[30] [23:16]).
Adding EN signal on $memory\mem[30]$7160 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[30] [15:8]).
Adding EN signal on $memory\mem[30]$7160 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[30] [7:0]).
Adding EN signal on $memory\mem[2]$7104 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[2] [31:24]).
Adding EN signal on $memory\mem[2]$7104 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[2] [23:16]).
Adding EN signal on $memory\mem[2]$7104 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[2] [15:8]).
Adding EN signal on $memory\mem[2]$7104 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[2] [7:0]).
Adding EN signal on $memory\mem[29]$7158 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[29] [31:24]).
Adding EN signal on $memory\mem[29]$7158 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[29] [23:16]).
Adding EN signal on $memory\mem[29]$7158 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[29] [15:8]).
Adding EN signal on $memory\mem[29]$7158 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[29] [7:0]).
Adding EN signal on $memory\mem[28]$7156 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[28] [31:24]).
Adding EN signal on $memory\mem[28]$7156 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[28] [23:16]).
Adding EN signal on $memory\mem[28]$7156 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[28] [15:8]).
Adding EN signal on $memory\mem[28]$7156 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[28] [7:0]).
Adding EN signal on $memory\mem[27]$7154 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[27] [31:24]).
Adding EN signal on $memory\mem[27]$7154 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[27] [23:16]).
Adding EN signal on $memory\mem[27]$7154 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[27] [15:8]).
Adding EN signal on $memory\mem[27]$7154 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[27] [7:0]).
Adding EN signal on $memory\mem[26]$7152 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[26] [31:24]).
Adding EN signal on $memory\mem[26]$7152 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[26] [23:16]).
Adding EN signal on $memory\mem[26]$7152 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[26] [15:8]).
Adding EN signal on $memory\mem[26]$7152 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[26] [7:0]).
Adding EN signal on $memory\mem[25]$7150 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[25] [31:24]).
Adding EN signal on $memory\mem[25]$7150 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[25] [23:16]).
Adding EN signal on $memory\mem[25]$7150 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[25] [15:8]).
Adding EN signal on $memory\mem[25]$7150 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[25] [7:0]).
Adding EN signal on $memory\mem[255]$7610 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[255] [7:0]).
Adding EN signal on $memory\mem[255]$7610 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[255] [15:8]).
Adding EN signal on $memory\mem[255]$7610 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[255] [23:16]).
Adding EN signal on $memory\mem[255]$7610 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[255] [31:24]).
Adding EN signal on $memory\mem[254]$7608 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[254] [7:0]).
Adding EN signal on $memory\mem[254]$7608 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[254] [15:8]).
Adding EN signal on $memory\mem[254]$7608 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[254] [23:16]).
Adding EN signal on $memory\mem[254]$7608 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[254] [31:24]).
Adding EN signal on $memory\mem[253]$7606 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[253] [7:0]).
Adding EN signal on $memory\mem[253]$7606 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[253] [15:8]).
Adding EN signal on $memory\mem[253]$7606 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[253] [23:16]).
Adding EN signal on $memory\mem[253]$7606 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[253] [31:24]).
Adding EN signal on $memory\mem[252]$7604 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[252] [7:0]).
Adding EN signal on $memory\mem[252]$7604 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[252] [15:8]).
Adding EN signal on $memory\mem[252]$7604 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[252] [23:16]).
Adding EN signal on $memory\mem[252]$7604 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[252] [31:24]).
Adding EN signal on $memory\mem[251]$7602 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[251] [7:0]).
Adding EN signal on $memory\mem[251]$7602 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[251] [15:8]).
Adding EN signal on $memory\mem[251]$7602 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[251] [23:16]).
Adding EN signal on $memory\mem[251]$7602 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[251] [31:24]).
Adding EN signal on $memory\mem[250]$7600 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[250] [7:0]).
Adding EN signal on $memory\mem[250]$7600 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[250] [15:8]).
Adding EN signal on $memory\mem[250]$7600 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[250] [23:16]).
Adding EN signal on $memory\mem[250]$7600 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[250] [31:24]).
Adding EN signal on $memory\mem[24]$7148 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[24] [31:24]).
Adding EN signal on $memory\mem[24]$7148 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[24] [23:16]).
Adding EN signal on $memory\mem[24]$7148 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[24] [15:8]).
Adding EN signal on $memory\mem[24]$7148 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[24] [7:0]).
Adding EN signal on $memory\mem[249]$7598 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[249] [7:0]).
Adding EN signal on $memory\mem[249]$7598 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[249] [15:8]).
Adding EN signal on $memory\mem[249]$7598 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[249] [23:16]).
Adding EN signal on $memory\mem[249]$7598 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[249] [31:24]).
Adding EN signal on $memory\mem[248]$7596 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[248] [7:0]).
Adding EN signal on $memory\mem[248]$7596 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[248] [15:8]).
Adding EN signal on $memory\mem[248]$7596 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[248] [23:16]).
Adding EN signal on $memory\mem[248]$7596 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[248] [31:24]).
Adding EN signal on $memory\mem[247]$7594 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[247] [7:0]).
Adding EN signal on $memory\mem[247]$7594 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[247] [15:8]).
Adding EN signal on $memory\mem[247]$7594 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[247] [23:16]).
Adding EN signal on $memory\mem[247]$7594 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[247] [31:24]).
Adding EN signal on $memory\mem[246]$7592 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[246] [7:0]).
Adding EN signal on $memory\mem[246]$7592 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[246] [15:8]).
Adding EN signal on $memory\mem[246]$7592 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[246] [23:16]).
Adding EN signal on $memory\mem[246]$7592 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[246] [31:24]).
Adding EN signal on $memory\mem[245]$7590 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[245] [7:0]).
Adding EN signal on $memory\mem[245]$7590 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[245] [15:8]).
Adding EN signal on $memory\mem[245]$7590 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[245] [23:16]).
Adding EN signal on $memory\mem[245]$7590 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[245] [31:24]).
Adding EN signal on $memory\mem[244]$7588 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[244] [7:0]).
Adding EN signal on $memory\mem[244]$7588 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[244] [15:8]).
Adding EN signal on $memory\mem[244]$7588 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[244] [23:16]).
Adding EN signal on $memory\mem[244]$7588 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[244] [31:24]).
Adding EN signal on $memory\mem[243]$7586 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[243] [7:0]).
Adding EN signal on $memory\mem[243]$7586 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[243] [15:8]).
Adding EN signal on $memory\mem[243]$7586 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[243] [23:16]).
Adding EN signal on $memory\mem[243]$7586 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[243] [31:24]).
Adding EN signal on $memory\mem[242]$7584 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[242] [7:0]).
Adding EN signal on $memory\mem[242]$7584 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[242] [15:8]).
Adding EN signal on $memory\mem[242]$7584 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[242] [23:16]).
Adding EN signal on $memory\mem[242]$7584 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[242] [31:24]).
Adding EN signal on $memory\mem[241]$7582 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[241] [7:0]).
Adding EN signal on $memory\mem[241]$7582 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[241] [15:8]).
Adding EN signal on $memory\mem[241]$7582 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[241] [23:16]).
Adding EN signal on $memory\mem[241]$7582 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[241] [31:24]).
Adding EN signal on $memory\mem[240]$7580 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[240] [7:0]).
Adding EN signal on $memory\mem[240]$7580 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[240] [15:8]).
Adding EN signal on $memory\mem[240]$7580 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[240] [23:16]).
Adding EN signal on $memory\mem[240]$7580 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[240] [31:24]).
Adding EN signal on $memory\mem[23]$7146 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[23] [31:24]).
Adding EN signal on $memory\mem[23]$7146 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[23] [23:16]).
Adding EN signal on $memory\mem[23]$7146 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[23] [15:8]).
Adding EN signal on $memory\mem[23]$7146 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[23] [7:0]).
Adding EN signal on $memory\mem[239]$7578 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[239] [7:0]).
Adding EN signal on $memory\mem[239]$7578 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[239] [15:8]).
Adding EN signal on $memory\mem[239]$7578 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[239] [23:16]).
Adding EN signal on $memory\mem[239]$7578 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[239] [31:24]).
Adding EN signal on $memory\mem[238]$7576 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[238] [7:0]).
Adding EN signal on $memory\mem[238]$7576 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[238] [15:8]).
Adding EN signal on $memory\mem[238]$7576 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[238] [23:16]).
Adding EN signal on $memory\mem[238]$7576 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[238] [31:24]).
Adding EN signal on $memory\mem[237]$7574 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[237] [7:0]).
Adding EN signal on $memory\mem[237]$7574 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[237] [15:8]).
Adding EN signal on $memory\mem[237]$7574 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[237] [23:16]).
Adding EN signal on $memory\mem[237]$7574 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[237] [31:24]).
Adding EN signal on $memory\mem[236]$7572 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[236] [7:0]).
Adding EN signal on $memory\mem[236]$7572 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[236] [15:8]).
Adding EN signal on $memory\mem[236]$7572 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[236] [23:16]).
Adding EN signal on $memory\mem[236]$7572 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[236] [31:24]).
Adding EN signal on $memory\mem[235]$7570 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[235] [7:0]).
Adding EN signal on $memory\mem[235]$7570 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[235] [15:8]).
Adding EN signal on $memory\mem[235]$7570 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[235] [23:16]).
Adding EN signal on $memory\mem[235]$7570 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[235] [31:24]).
Adding EN signal on $memory\mem[234]$7568 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[234] [7:0]).
Adding EN signal on $memory\mem[234]$7568 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[234] [15:8]).
Adding EN signal on $memory\mem[234]$7568 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[234] [23:16]).
Adding EN signal on $memory\mem[234]$7568 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[234] [31:24]).
Adding EN signal on $memory\mem[233]$7566 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[233] [7:0]).
Adding EN signal on $memory\mem[233]$7566 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[233] [15:8]).
Adding EN signal on $memory\mem[233]$7566 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[233] [23:16]).
Adding EN signal on $memory\mem[233]$7566 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[233] [31:24]).
Adding EN signal on $memory\mem[232]$7564 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[232] [7:0]).
Adding EN signal on $memory\mem[232]$7564 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[232] [15:8]).
Adding EN signal on $memory\mem[232]$7564 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[232] [23:16]).
Adding EN signal on $memory\mem[232]$7564 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[232] [31:24]).
Adding EN signal on $memory\mem[231]$7562 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[231] [7:0]).
Adding EN signal on $memory\mem[231]$7562 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[231] [15:8]).
Adding EN signal on $memory\mem[231]$7562 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[231] [23:16]).
Adding EN signal on $memory\mem[231]$7562 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[231] [31:24]).
Adding EN signal on $memory\mem[230]$7560 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[230] [7:0]).
Adding EN signal on $memory\mem[230]$7560 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[230] [15:8]).
Adding EN signal on $memory\mem[230]$7560 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[230] [23:16]).
Adding EN signal on $memory\mem[230]$7560 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[230] [31:24]).
Adding EN signal on $memory\mem[22]$7144 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[22] [31:24]).
Adding EN signal on $memory\mem[22]$7144 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[22] [23:16]).
Adding EN signal on $memory\mem[22]$7144 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[22] [15:8]).
Adding EN signal on $memory\mem[22]$7144 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[22] [7:0]).
Adding EN signal on $memory\mem[229]$7558 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[229] [7:0]).
Adding EN signal on $memory\mem[229]$7558 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[229] [15:8]).
Adding EN signal on $memory\mem[229]$7558 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[229] [23:16]).
Adding EN signal on $memory\mem[229]$7558 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[229] [31:24]).
Adding EN signal on $memory\mem[228]$7556 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[228] [7:0]).
Adding EN signal on $memory\mem[228]$7556 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[228] [15:8]).
Adding EN signal on $memory\mem[228]$7556 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[228] [23:16]).
Adding EN signal on $memory\mem[228]$7556 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[228] [31:24]).
Adding EN signal on $memory\mem[227]$7554 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[227] [7:0]).
Adding EN signal on $memory\mem[227]$7554 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[227] [15:8]).
Adding EN signal on $memory\mem[227]$7554 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[227] [23:16]).
Adding EN signal on $memory\mem[227]$7554 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[227] [31:24]).
Adding EN signal on $memory\mem[226]$7552 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[226] [7:0]).
Adding EN signal on $memory\mem[226]$7552 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[226] [15:8]).
Adding EN signal on $memory\mem[226]$7552 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[226] [23:16]).
Adding EN signal on $memory\mem[226]$7552 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[226] [31:24]).
Adding EN signal on $memory\mem[225]$7550 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[225] [7:0]).
Adding EN signal on $memory\mem[225]$7550 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[225] [15:8]).
Adding EN signal on $memory\mem[225]$7550 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[225] [23:16]).
Adding EN signal on $memory\mem[225]$7550 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[225] [31:24]).
Adding EN signal on $memory\mem[224]$7548 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[224] [7:0]).
Adding EN signal on $memory\mem[224]$7548 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[224] [15:8]).
Adding EN signal on $memory\mem[224]$7548 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[224] [23:16]).
Adding EN signal on $memory\mem[224]$7548 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[224] [31:24]).
Adding EN signal on $memory\mem[223]$7546 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[223] [7:0]).
Adding EN signal on $memory\mem[223]$7546 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[223] [15:8]).
Adding EN signal on $memory\mem[223]$7546 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[223] [23:16]).
Adding EN signal on $memory\mem[223]$7546 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[223] [31:24]).
Adding EN signal on $memory\mem[222]$7544 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[222] [7:0]).
Adding EN signal on $memory\mem[222]$7544 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[222] [15:8]).
Adding EN signal on $memory\mem[222]$7544 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[222] [23:16]).
Adding EN signal on $memory\mem[222]$7544 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[222] [31:24]).
Adding EN signal on $memory\mem[221]$7542 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[221] [7:0]).
Adding EN signal on $memory\mem[221]$7542 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[221] [15:8]).
Adding EN signal on $memory\mem[221]$7542 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[221] [23:16]).
Adding EN signal on $memory\mem[221]$7542 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[221] [31:24]).
Adding EN signal on $memory\mem[220]$7540 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[220] [7:0]).
Adding EN signal on $memory\mem[220]$7540 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[220] [15:8]).
Adding EN signal on $memory\mem[220]$7540 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[220] [23:16]).
Adding EN signal on $memory\mem[220]$7540 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[220] [31:24]).
Adding EN signal on $memory\mem[21]$7142 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[21] [31:24]).
Adding EN signal on $memory\mem[21]$7142 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[21] [23:16]).
Adding EN signal on $memory\mem[21]$7142 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[21] [15:8]).
Adding EN signal on $memory\mem[21]$7142 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[21] [7:0]).
Adding EN signal on $memory\mem[219]$7538 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[219] [7:0]).
Adding EN signal on $memory\mem[219]$7538 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[219] [15:8]).
Adding EN signal on $memory\mem[219]$7538 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[219] [23:16]).
Adding EN signal on $memory\mem[219]$7538 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[219] [31:24]).
Adding EN signal on $memory\mem[218]$7536 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[218] [7:0]).
Adding EN signal on $memory\mem[218]$7536 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[218] [15:8]).
Adding EN signal on $memory\mem[218]$7536 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[218] [23:16]).
Adding EN signal on $memory\mem[218]$7536 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[218] [31:24]).
Adding EN signal on $memory\mem[217]$7534 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[217] [7:0]).
Adding EN signal on $memory\mem[217]$7534 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[217] [15:8]).
Adding EN signal on $memory\mem[217]$7534 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[217] [23:16]).
Adding EN signal on $memory\mem[217]$7534 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[217] [31:24]).
Adding EN signal on $memory\mem[216]$7532 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[216] [7:0]).
Adding EN signal on $memory\mem[216]$7532 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[216] [15:8]).
Adding EN signal on $memory\mem[216]$7532 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[216] [23:16]).
Adding EN signal on $memory\mem[216]$7532 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[216] [31:24]).
Adding EN signal on $memory\mem[215]$7530 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[215] [7:0]).
Adding EN signal on $memory\mem[215]$7530 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[215] [15:8]).
Adding EN signal on $memory\mem[215]$7530 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[215] [23:16]).
Adding EN signal on $memory\mem[215]$7530 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[215] [31:24]).
Adding EN signal on $memory\mem[214]$7528 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[214] [7:0]).
Adding EN signal on $memory\mem[214]$7528 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[214] [15:8]).
Adding EN signal on $memory\mem[214]$7528 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[214] [23:16]).
Adding EN signal on $memory\mem[214]$7528 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[214] [31:24]).
Adding EN signal on $memory\mem[213]$7526 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[213] [7:0]).
Adding EN signal on $memory\mem[213]$7526 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[213] [15:8]).
Adding EN signal on $memory\mem[213]$7526 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[213] [23:16]).
Adding EN signal on $memory\mem[213]$7526 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[213] [31:24]).
Adding EN signal on $memory\mem[212]$7524 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[212] [7:0]).
Adding EN signal on $memory\mem[212]$7524 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[212] [15:8]).
Adding EN signal on $memory\mem[212]$7524 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[212] [23:16]).
Adding EN signal on $memory\mem[212]$7524 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[212] [31:24]).
Adding EN signal on $memory\mem[211]$7522 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[211] [7:0]).
Adding EN signal on $memory\mem[211]$7522 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[211] [15:8]).
Adding EN signal on $memory\mem[211]$7522 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[211] [23:16]).
Adding EN signal on $memory\mem[211]$7522 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[211] [31:24]).
Adding EN signal on $memory\mem[210]$7520 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[210] [7:0]).
Adding EN signal on $memory\mem[210]$7520 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[210] [15:8]).
Adding EN signal on $memory\mem[210]$7520 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[210] [23:16]).
Adding EN signal on $memory\mem[210]$7520 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[210] [31:24]).
Adding EN signal on $memory\mem[20]$7140 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[20] [31:24]).
Adding EN signal on $memory\mem[20]$7140 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[20] [23:16]).
Adding EN signal on $memory\mem[20]$7140 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[20] [15:8]).
Adding EN signal on $memory\mem[20]$7140 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[20] [7:0]).
Adding EN signal on $memory\mem[209]$7518 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[209] [7:0]).
Adding EN signal on $memory\mem[209]$7518 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[209] [15:8]).
Adding EN signal on $memory\mem[209]$7518 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[209] [23:16]).
Adding EN signal on $memory\mem[209]$7518 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[209] [31:24]).
Adding EN signal on $memory\mem[208]$7516 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[208] [7:0]).
Adding EN signal on $memory\mem[208]$7516 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[208] [15:8]).
Adding EN signal on $memory\mem[208]$7516 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[208] [23:16]).
Adding EN signal on $memory\mem[208]$7516 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[208] [31:24]).
Adding EN signal on $memory\mem[207]$7514 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[207] [7:0]).
Adding EN signal on $memory\mem[207]$7514 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[207] [15:8]).
Adding EN signal on $memory\mem[207]$7514 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[207] [23:16]).
Adding EN signal on $memory\mem[207]$7514 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[207] [31:24]).
Adding EN signal on $memory\mem[206]$7512 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[206] [7:0]).
Adding EN signal on $memory\mem[206]$7512 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[206] [15:8]).
Adding EN signal on $memory\mem[206]$7512 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[206] [23:16]).
Adding EN signal on $memory\mem[206]$7512 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[206] [31:24]).
Adding EN signal on $memory\mem[205]$7510 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[205] [7:0]).
Adding EN signal on $memory\mem[205]$7510 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[205] [15:8]).
Adding EN signal on $memory\mem[205]$7510 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[205] [23:16]).
Adding EN signal on $memory\mem[205]$7510 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[205] [31:24]).
Adding EN signal on $memory\mem[204]$7508 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[204] [7:0]).
Adding EN signal on $memory\mem[204]$7508 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[204] [15:8]).
Adding EN signal on $memory\mem[204]$7508 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[204] [23:16]).
Adding EN signal on $memory\mem[204]$7508 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[204] [31:24]).
Adding EN signal on $memory\mem[203]$7506 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[203] [7:0]).
Adding EN signal on $memory\mem[203]$7506 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[203] [15:8]).
Adding EN signal on $memory\mem[203]$7506 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[203] [23:16]).
Adding EN signal on $memory\mem[203]$7506 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[203] [31:24]).
Adding EN signal on $memory\mem[202]$7504 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[202] [7:0]).
Adding EN signal on $memory\mem[202]$7504 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[202] [15:8]).
Adding EN signal on $memory\mem[202]$7504 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[202] [23:16]).
Adding EN signal on $memory\mem[202]$7504 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[202] [31:24]).
Adding EN signal on $memory\mem[201]$7502 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[201] [7:0]).
Adding EN signal on $memory\mem[201]$7502 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[201] [15:8]).
Adding EN signal on $memory\mem[201]$7502 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[201] [23:16]).
Adding EN signal on $memory\mem[201]$7502 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[201] [31:24]).
Adding EN signal on $memory\mem[200]$7500 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[200] [7:0]).
Adding EN signal on $memory\mem[200]$7500 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[200] [15:8]).
Adding EN signal on $memory\mem[200]$7500 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[200] [23:16]).
Adding EN signal on $memory\mem[200]$7500 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[200] [31:24]).
Adding EN signal on $memory\mem[1]$7102 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[1] [31:24]).
Adding EN signal on $memory\mem[1]$7102 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[1] [23:16]).
Adding EN signal on $memory\mem[1]$7102 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[1] [15:8]).
Adding EN signal on $memory\mem[1]$7102 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[1] [7:0]).
Adding EN signal on $memory\mem[19]$7138 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[19] [31:24]).
Adding EN signal on $memory\mem[19]$7138 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[19] [23:16]).
Adding EN signal on $memory\mem[19]$7138 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[19] [15:8]).
Adding EN signal on $memory\mem[19]$7138 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[19] [7:0]).
Adding EN signal on $memory\mem[199]$7498 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[199] [7:0]).
Adding EN signal on $memory\mem[199]$7498 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[199] [15:8]).
Adding EN signal on $memory\mem[199]$7498 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[199] [23:16]).
Adding EN signal on $memory\mem[199]$7498 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[199] [31:24]).
Adding EN signal on $memory\mem[198]$7496 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[198] [7:0]).
Adding EN signal on $memory\mem[198]$7496 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[198] [15:8]).
Adding EN signal on $memory\mem[198]$7496 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[198] [23:16]).
Adding EN signal on $memory\mem[198]$7496 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[198] [31:24]).
Adding EN signal on $memory\mem[197]$7494 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[197] [7:0]).
Adding EN signal on $memory\mem[197]$7494 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[197] [15:8]).
Adding EN signal on $memory\mem[197]$7494 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[197] [23:16]).
Adding EN signal on $memory\mem[197]$7494 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[197] [31:24]).
Adding EN signal on $memory\mem[196]$7492 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[196] [7:0]).
Adding EN signal on $memory\mem[196]$7492 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[196] [15:8]).
Adding EN signal on $memory\mem[196]$7492 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[196] [23:16]).
Adding EN signal on $memory\mem[196]$7492 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[196] [31:24]).
Adding EN signal on $memory\mem[195]$7490 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[195] [7:0]).
Adding EN signal on $memory\mem[195]$7490 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[195] [15:8]).
Adding EN signal on $memory\mem[195]$7490 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[195] [23:16]).
Adding EN signal on $memory\mem[195]$7490 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[195] [31:24]).
Adding EN signal on $memory\mem[194]$7488 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[194] [7:0]).
Adding EN signal on $memory\mem[194]$7488 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[194] [15:8]).
Adding EN signal on $memory\mem[194]$7488 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[194] [23:16]).
Adding EN signal on $memory\mem[194]$7488 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[194] [31:24]).
Adding EN signal on $memory\mem[193]$7486 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[193] [7:0]).
Adding EN signal on $memory\mem[193]$7486 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[193] [15:8]).
Adding EN signal on $memory\mem[193]$7486 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[193] [23:16]).
Adding EN signal on $memory\mem[193]$7486 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[193] [31:24]).
Adding EN signal on $memory\mem[192]$7484 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[192] [7:0]).
Adding EN signal on $memory\mem[192]$7484 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[192] [15:8]).
Adding EN signal on $memory\mem[192]$7484 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[192] [23:16]).
Adding EN signal on $memory\mem[192]$7484 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[192] [31:24]).
Adding EN signal on $memory\mem[191]$7482 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[191] [7:0]).
Adding EN signal on $memory\mem[191]$7482 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[191] [15:8]).
Adding EN signal on $memory\mem[191]$7482 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[191] [23:16]).
Adding EN signal on $memory\mem[191]$7482 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[191] [31:24]).
Adding EN signal on $memory\mem[190]$7480 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[190] [7:0]).
Adding EN signal on $memory\mem[190]$7480 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[190] [15:8]).
Adding EN signal on $memory\mem[190]$7480 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[190] [23:16]).
Adding EN signal on $memory\mem[190]$7480 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[190] [31:24]).
Adding EN signal on $memory\mem[18]$7136 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[18] [31:24]).
Adding EN signal on $memory\mem[18]$7136 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[18] [23:16]).
Adding EN signal on $memory\mem[18]$7136 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[18] [15:8]).
Adding EN signal on $memory\mem[18]$7136 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[18] [7:0]).
Adding EN signal on $memory\mem[189]$7478 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[189] [7:0]).
Adding EN signal on $memory\mem[189]$7478 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[189] [15:8]).
Adding EN signal on $memory\mem[189]$7478 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[189] [23:16]).
Adding EN signal on $memory\mem[189]$7478 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[189] [31:24]).
Adding EN signal on $memory\mem[188]$7476 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[188] [7:0]).
Adding EN signal on $memory\mem[188]$7476 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[188] [15:8]).
Adding EN signal on $memory\mem[188]$7476 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[188] [23:16]).
Adding EN signal on $memory\mem[188]$7476 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[188] [31:24]).
Adding EN signal on $memory\mem[187]$7474 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[187] [7:0]).
Adding EN signal on $memory\mem[187]$7474 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[187] [15:8]).
Adding EN signal on $memory\mem[187]$7474 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[187] [23:16]).
Adding EN signal on $memory\mem[187]$7474 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[187] [31:24]).
Adding EN signal on $memory\mem[186]$7472 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[186] [7:0]).
Adding EN signal on $memory\mem[186]$7472 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[186] [15:8]).
Adding EN signal on $memory\mem[186]$7472 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[186] [23:16]).
Adding EN signal on $memory\mem[186]$7472 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[186] [31:24]).
Adding EN signal on $memory\mem[185]$7470 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[185] [7:0]).
Adding EN signal on $memory\mem[185]$7470 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[185] [15:8]).
Adding EN signal on $memory\mem[185]$7470 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[185] [23:16]).
Adding EN signal on $memory\mem[185]$7470 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[185] [31:24]).
Adding EN signal on $memory\mem[184]$7468 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[184] [7:0]).
Adding EN signal on $memory\mem[184]$7468 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[184] [15:8]).
Adding EN signal on $memory\mem[184]$7468 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[184] [23:16]).
Adding EN signal on $memory\mem[184]$7468 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[184] [31:24]).
Adding EN signal on $memory\mem[183]$7466 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[183] [7:0]).
Adding EN signal on $memory\mem[183]$7466 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[183] [15:8]).
Adding EN signal on $memory\mem[183]$7466 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[183] [23:16]).
Adding EN signal on $memory\mem[183]$7466 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[183] [31:24]).
Adding EN signal on $memory\mem[182]$7464 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[182] [7:0]).
Adding EN signal on $memory\mem[182]$7464 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[182] [15:8]).
Adding EN signal on $memory\mem[182]$7464 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[182] [23:16]).
Adding EN signal on $memory\mem[182]$7464 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[182] [31:24]).
Adding EN signal on $memory\mem[181]$7462 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[181] [7:0]).
Adding EN signal on $memory\mem[181]$7462 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[181] [15:8]).
Adding EN signal on $memory\mem[181]$7462 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[181] [23:16]).
Adding EN signal on $memory\mem[181]$7462 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[181] [31:24]).
Adding EN signal on $memory\mem[180]$7460 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[180] [7:0]).
Adding EN signal on $memory\mem[180]$7460 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[180] [15:8]).
Adding EN signal on $memory\mem[180]$7460 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[180] [23:16]).
Adding EN signal on $memory\mem[180]$7460 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[180] [31:24]).
Adding EN signal on $memory\mem[17]$7134 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[17] [31:24]).
Adding EN signal on $memory\mem[17]$7134 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[17] [23:16]).
Adding EN signal on $memory\mem[17]$7134 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[17] [15:8]).
Adding EN signal on $memory\mem[17]$7134 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[17] [7:0]).
Adding EN signal on $memory\mem[179]$7458 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[179] [7:0]).
Adding EN signal on $memory\mem[179]$7458 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[179] [15:8]).
Adding EN signal on $memory\mem[179]$7458 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[179] [23:16]).
Adding EN signal on $memory\mem[179]$7458 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[179] [31:24]).
Adding EN signal on $memory\mem[178]$7456 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[178] [7:0]).
Adding EN signal on $memory\mem[178]$7456 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[178] [15:8]).
Adding EN signal on $memory\mem[178]$7456 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[178] [23:16]).
Adding EN signal on $memory\mem[178]$7456 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[178] [31:24]).
Adding EN signal on $memory\mem[177]$7454 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[177] [7:0]).
Adding EN signal on $memory\mem[177]$7454 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[177] [15:8]).
Adding EN signal on $memory\mem[177]$7454 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[177] [23:16]).
Adding EN signal on $memory\mem[177]$7454 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[177] [31:24]).
Adding EN signal on $memory\mem[176]$7452 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[176] [7:0]).
Adding EN signal on $memory\mem[176]$7452 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[176] [15:8]).
Adding EN signal on $memory\mem[176]$7452 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[176] [23:16]).
Adding EN signal on $memory\mem[176]$7452 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[176] [31:24]).
Adding EN signal on $memory\mem[175]$7450 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[175] [7:0]).
Adding EN signal on $memory\mem[175]$7450 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[175] [15:8]).
Adding EN signal on $memory\mem[175]$7450 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[175] [23:16]).
Adding EN signal on $memory\mem[175]$7450 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[175] [31:24]).
Adding EN signal on $memory\mem[174]$7448 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[174] [7:0]).
Adding EN signal on $memory\mem[174]$7448 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[174] [15:8]).
Adding EN signal on $memory\mem[174]$7448 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[174] [23:16]).
Adding EN signal on $memory\mem[174]$7448 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[174] [31:24]).
Adding EN signal on $memory\mem[173]$7446 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[173] [7:0]).
Adding EN signal on $memory\mem[173]$7446 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[173] [15:8]).
Adding EN signal on $memory\mem[173]$7446 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[173] [23:16]).
Adding EN signal on $memory\mem[173]$7446 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[173] [31:24]).
Adding EN signal on $memory\mem[172]$7444 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[172] [7:0]).
Adding EN signal on $memory\mem[172]$7444 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[172] [15:8]).
Adding EN signal on $memory\mem[172]$7444 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[172] [23:16]).
Adding EN signal on $memory\mem[172]$7444 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[172] [31:24]).
Adding EN signal on $memory\mem[171]$7442 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[171] [7:0]).
Adding EN signal on $memory\mem[171]$7442 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[171] [15:8]).
Adding EN signal on $memory\mem[171]$7442 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[171] [23:16]).
Adding EN signal on $memory\mem[171]$7442 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[171] [31:24]).
Adding EN signal on $memory\mem[170]$7440 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[170] [7:0]).
Adding EN signal on $memory\mem[170]$7440 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[170] [15:8]).
Adding EN signal on $memory\mem[170]$7440 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[170] [23:16]).
Adding EN signal on $memory\mem[170]$7440 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[170] [31:24]).
Adding EN signal on $memory\mem[16]$7132 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[16] [31:24]).
Adding EN signal on $memory\mem[16]$7132 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[16] [23:16]).
Adding EN signal on $memory\mem[16]$7132 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[16] [15:8]).
Adding EN signal on $memory\mem[16]$7132 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[16] [7:0]).
Adding EN signal on $memory\mem[169]$7438 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[169] [7:0]).
Adding EN signal on $memory\mem[169]$7438 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[169] [15:8]).
Adding EN signal on $memory\mem[169]$7438 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[169] [23:16]).
Adding EN signal on $memory\mem[169]$7438 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[169] [31:24]).
Adding EN signal on $memory\mem[168]$7436 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[168] [7:0]).
Adding EN signal on $memory\mem[168]$7436 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[168] [15:8]).
Adding EN signal on $memory\mem[168]$7436 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[168] [23:16]).
Adding EN signal on $memory\mem[168]$7436 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[168] [31:24]).
Adding EN signal on $memory\mem[167]$7434 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[167] [7:0]).
Adding EN signal on $memory\mem[167]$7434 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[167] [15:8]).
Adding EN signal on $memory\mem[167]$7434 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[167] [23:16]).
Adding EN signal on $memory\mem[167]$7434 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[167] [31:24]).
Adding EN signal on $memory\mem[166]$7432 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[166] [7:0]).
Adding EN signal on $memory\mem[166]$7432 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[166] [15:8]).
Adding EN signal on $memory\mem[166]$7432 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[166] [23:16]).
Adding EN signal on $memory\mem[166]$7432 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[166] [31:24]).
Adding EN signal on $memory\mem[165]$7430 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[165] [7:0]).
Adding EN signal on $memory\mem[165]$7430 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[165] [15:8]).
Adding EN signal on $memory\mem[165]$7430 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[165] [23:16]).
Adding EN signal on $memory\mem[165]$7430 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[165] [31:24]).
Adding EN signal on $memory\mem[164]$7428 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[164] [7:0]).
Adding EN signal on $memory\mem[164]$7428 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[164] [15:8]).
Adding EN signal on $memory\mem[164]$7428 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[164] [23:16]).
Adding EN signal on $memory\mem[164]$7428 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[164] [31:24]).
Adding EN signal on $memory\mem[163]$7426 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[163] [7:0]).
Adding EN signal on $memory\mem[163]$7426 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[163] [15:8]).
Adding EN signal on $memory\mem[163]$7426 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[163] [23:16]).
Adding EN signal on $memory\mem[163]$7426 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[163] [31:24]).
Adding EN signal on $memory\mem[162]$7424 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[162] [7:0]).
Adding EN signal on $memory\mem[162]$7424 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[162] [15:8]).
Adding EN signal on $memory\mem[162]$7424 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[162] [23:16]).
Adding EN signal on $memory\mem[162]$7424 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[162] [31:24]).
Adding EN signal on $memory\mem[161]$7422 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[161] [7:0]).
Adding EN signal on $memory\mem[161]$7422 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[161] [15:8]).
Adding EN signal on $memory\mem[161]$7422 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[161] [23:16]).
Adding EN signal on $memory\mem[161]$7422 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[161] [31:24]).
Adding EN signal on $memory\mem[160]$7420 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[160] [7:0]).
Adding EN signal on $memory\mem[160]$7420 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[160] [15:8]).
Adding EN signal on $memory\mem[160]$7420 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[160] [23:16]).
Adding EN signal on $memory\mem[160]$7420 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[160] [31:24]).
Adding EN signal on $memory\mem[15]$7130 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[15] [31:24]).
Adding EN signal on $memory\mem[15]$7130 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[15] [23:16]).
Adding EN signal on $memory\mem[15]$7130 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[15] [15:8]).
Adding EN signal on $memory\mem[15]$7130 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[15] [7:0]).
Adding EN signal on $memory\mem[159]$7418 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[159] [7:0]).
Adding EN signal on $memory\mem[159]$7418 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[159] [15:8]).
Adding EN signal on $memory\mem[159]$7418 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[159] [23:16]).
Adding EN signal on $memory\mem[159]$7418 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[159] [31:24]).
Adding EN signal on $memory\mem[158]$7416 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[158] [7:0]).
Adding EN signal on $memory\mem[158]$7416 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[158] [15:8]).
Adding EN signal on $memory\mem[158]$7416 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[158] [23:16]).
Adding EN signal on $memory\mem[158]$7416 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[158] [31:24]).
Adding EN signal on $memory\mem[157]$7414 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[157] [7:0]).
Adding EN signal on $memory\mem[157]$7414 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[157] [15:8]).
Adding EN signal on $memory\mem[157]$7414 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[157] [23:16]).
Adding EN signal on $memory\mem[157]$7414 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[157] [31:24]).
Adding EN signal on $memory\mem[156]$7412 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[156] [7:0]).
Adding EN signal on $memory\mem[156]$7412 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[156] [15:8]).
Adding EN signal on $memory\mem[156]$7412 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[156] [23:16]).
Adding EN signal on $memory\mem[156]$7412 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[156] [31:24]).
Adding EN signal on $memory\mem[155]$7410 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[155] [7:0]).
Adding EN signal on $memory\mem[155]$7410 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[155] [15:8]).
Adding EN signal on $memory\mem[155]$7410 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[155] [23:16]).
Adding EN signal on $memory\mem[155]$7410 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[155] [31:24]).
Adding EN signal on $memory\mem[154]$7408 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[154] [7:0]).
Adding EN signal on $memory\mem[154]$7408 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[154] [15:8]).
Adding EN signal on $memory\mem[154]$7408 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[154] [23:16]).
Adding EN signal on $memory\mem[154]$7408 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[154] [31:24]).
Adding EN signal on $memory\mem[153]$7406 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[153] [7:0]).
Adding EN signal on $memory\mem[153]$7406 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[153] [15:8]).
Adding EN signal on $memory\mem[153]$7406 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[153] [23:16]).
Adding EN signal on $memory\mem[153]$7406 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[153] [31:24]).
Adding EN signal on $memory\mem[152]$7404 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[152] [7:0]).
Adding EN signal on $memory\mem[152]$7404 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[152] [15:8]).
Adding EN signal on $memory\mem[152]$7404 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[152] [23:16]).
Adding EN signal on $memory\mem[152]$7404 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[152] [31:24]).
Adding EN signal on $memory\mem[151]$7402 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[151] [7:0]).
Adding EN signal on $memory\mem[151]$7402 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[151] [15:8]).
Adding EN signal on $memory\mem[151]$7402 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[151] [23:16]).
Adding EN signal on $memory\mem[151]$7402 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[151] [31:24]).
Adding EN signal on $memory\mem[150]$7400 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[150] [7:0]).
Adding EN signal on $memory\mem[150]$7400 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[150] [15:8]).
Adding EN signal on $memory\mem[150]$7400 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[150] [23:16]).
Adding EN signal on $memory\mem[150]$7400 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[150] [31:24]).
Adding EN signal on $memory\mem[14]$7128 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[14] [31:24]).
Adding EN signal on $memory\mem[14]$7128 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[14] [23:16]).
Adding EN signal on $memory\mem[14]$7128 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[14] [15:8]).
Adding EN signal on $memory\mem[14]$7128 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[14] [7:0]).
Adding EN signal on $memory\mem[149]$7398 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[149] [7:0]).
Adding EN signal on $memory\mem[149]$7398 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[149] [15:8]).
Adding EN signal on $memory\mem[149]$7398 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[149] [23:16]).
Adding EN signal on $memory\mem[149]$7398 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[149] [31:24]).
Adding EN signal on $memory\mem[148]$7396 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[148] [7:0]).
Adding EN signal on $memory\mem[148]$7396 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[148] [15:8]).
Adding EN signal on $memory\mem[148]$7396 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[148] [23:16]).
Adding EN signal on $memory\mem[148]$7396 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[148] [31:24]).
Adding EN signal on $memory\mem[147]$7394 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[147] [7:0]).
Adding EN signal on $memory\mem[147]$7394 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[147] [15:8]).
Adding EN signal on $memory\mem[147]$7394 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[147] [23:16]).
Adding EN signal on $memory\mem[147]$7394 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[147] [31:24]).
Adding EN signal on $memory\mem[146]$7392 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[146] [7:0]).
Adding EN signal on $memory\mem[146]$7392 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[146] [15:8]).
Adding EN signal on $memory\mem[146]$7392 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[146] [23:16]).
Adding EN signal on $memory\mem[146]$7392 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[146] [31:24]).
Adding EN signal on $memory\mem[145]$7390 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[145] [7:0]).
Adding EN signal on $memory\mem[145]$7390 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[145] [15:8]).
Adding EN signal on $memory\mem[145]$7390 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[145] [23:16]).
Adding EN signal on $memory\mem[145]$7390 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[145] [31:24]).
Adding EN signal on $memory\mem[144]$7388 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[144] [7:0]).
Adding EN signal on $memory\mem[144]$7388 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[144] [15:8]).
Adding EN signal on $memory\mem[144]$7388 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[144] [23:16]).
Adding EN signal on $memory\mem[144]$7388 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[144] [31:24]).
Adding EN signal on $memory\mem[143]$7386 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[143] [7:0]).
Adding EN signal on $memory\mem[143]$7386 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[143] [15:8]).
Adding EN signal on $memory\mem[143]$7386 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[143] [23:16]).
Adding EN signal on $memory\mem[143]$7386 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[143] [31:24]).
Adding EN signal on $memory\mem[142]$7384 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[142] [7:0]).
Adding EN signal on $memory\mem[142]$7384 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[142] [15:8]).
Adding EN signal on $memory\mem[142]$7384 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[142] [23:16]).
Adding EN signal on $memory\mem[142]$7384 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[142] [31:24]).
Adding EN signal on $memory\mem[141]$7382 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[141] [7:0]).
Adding EN signal on $memory\mem[141]$7382 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[141] [15:8]).
Adding EN signal on $memory\mem[141]$7382 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[141] [23:16]).
Adding EN signal on $memory\mem[141]$7382 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[141] [31:24]).
Adding EN signal on $memory\mem[140]$7380 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[140] [7:0]).
Adding EN signal on $memory\mem[140]$7380 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[140] [15:8]).
Adding EN signal on $memory\mem[140]$7380 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[140] [23:16]).
Adding EN signal on $memory\mem[140]$7380 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[140] [31:24]).
Adding EN signal on $memory\mem[13]$7126 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[13] [31:24]).
Adding EN signal on $memory\mem[13]$7126 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[13] [23:16]).
Adding EN signal on $memory\mem[13]$7126 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[13] [15:8]).
Adding EN signal on $memory\mem[13]$7126 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[13] [7:0]).
Adding EN signal on $memory\mem[139]$7378 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[139] [7:0]).
Adding EN signal on $memory\mem[139]$7378 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[139] [15:8]).
Adding EN signal on $memory\mem[139]$7378 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[139] [23:16]).
Adding EN signal on $memory\mem[139]$7378 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[139] [31:24]).
Adding EN signal on $memory\mem[138]$7376 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[138] [7:0]).
Adding EN signal on $memory\mem[138]$7376 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[138] [15:8]).
Adding EN signal on $memory\mem[138]$7376 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[138] [23:16]).
Adding EN signal on $memory\mem[138]$7376 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[138] [31:24]).
Adding EN signal on $memory\mem[137]$7374 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[137] [7:0]).
Adding EN signal on $memory\mem[137]$7374 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[137] [15:8]).
Adding EN signal on $memory\mem[137]$7374 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[137] [23:16]).
Adding EN signal on $memory\mem[137]$7374 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[137] [31:24]).
Adding EN signal on $memory\mem[136]$7372 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[136] [7:0]).
Adding EN signal on $memory\mem[136]$7372 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[136] [15:8]).
Adding EN signal on $memory\mem[136]$7372 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[136] [23:16]).
Adding EN signal on $memory\mem[136]$7372 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[136] [31:24]).
Adding EN signal on $memory\mem[135]$7370 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[135] [7:0]).
Adding EN signal on $memory\mem[135]$7370 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[135] [15:8]).
Adding EN signal on $memory\mem[135]$7370 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[135] [23:16]).
Adding EN signal on $memory\mem[135]$7370 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[135] [31:24]).
Adding EN signal on $memory\mem[134]$7368 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[134] [7:0]).
Adding EN signal on $memory\mem[134]$7368 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[134] [15:8]).
Adding EN signal on $memory\mem[134]$7368 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[134] [23:16]).
Adding EN signal on $memory\mem[134]$7368 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[134] [31:24]).
Adding EN signal on $memory\mem[133]$7366 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[133] [7:0]).
Adding EN signal on $memory\mem[133]$7366 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[133] [15:8]).
Adding EN signal on $memory\mem[133]$7366 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[133] [23:16]).
Adding EN signal on $memory\mem[133]$7366 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[133] [31:24]).
Adding EN signal on $memory\mem[132]$7364 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[132] [7:0]).
Adding EN signal on $memory\mem[132]$7364 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[132] [15:8]).
Adding EN signal on $memory\mem[132]$7364 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[132] [23:16]).
Adding EN signal on $memory\mem[132]$7364 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[132] [31:24]).
Adding EN signal on $memory\mem[131]$7362 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[131] [7:0]).
Adding EN signal on $memory\mem[131]$7362 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[131] [15:8]).
Adding EN signal on $memory\mem[131]$7362 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[131] [23:16]).
Adding EN signal on $memory\mem[131]$7362 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[131] [31:24]).
Adding EN signal on $memory\mem[130]$7360 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[130] [7:0]).
Adding EN signal on $memory\mem[130]$7360 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[130] [15:8]).
Adding EN signal on $memory\mem[130]$7360 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[130] [23:16]).
Adding EN signal on $memory\mem[130]$7360 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[130] [31:24]).
Adding EN signal on $memory\mem[12]$7124 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[12] [31:24]).
Adding EN signal on $memory\mem[12]$7124 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[12] [23:16]).
Adding EN signal on $memory\mem[12]$7124 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[12] [15:8]).
Adding EN signal on $memory\mem[12]$7124 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[12] [7:0]).
Adding EN signal on $memory\mem[129]$7358 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[129] [7:0]).
Adding EN signal on $memory\mem[129]$7358 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[129] [15:8]).
Adding EN signal on $memory\mem[129]$7358 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[129] [23:16]).
Adding EN signal on $memory\mem[129]$7358 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[129] [31:24]).
Adding EN signal on $memory\mem[128]$7356 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[128] [7:0]).
Adding EN signal on $memory\mem[128]$7356 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[128] [15:8]).
Adding EN signal on $memory\mem[128]$7356 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[128] [23:16]).
Adding EN signal on $memory\mem[128]$7356 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[128] [31:24]).
Adding EN signal on $memory\mem[127]$7354 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[127] [7:0]).
Adding EN signal on $memory\mem[127]$7354 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[127] [15:8]).
Adding EN signal on $memory\mem[127]$7354 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[127] [23:16]).
Adding EN signal on $memory\mem[127]$7354 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[127] [31:24]).
Adding EN signal on $memory\mem[126]$7352 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[126] [7:0]).
Adding EN signal on $memory\mem[126]$7352 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[126] [15:8]).
Adding EN signal on $memory\mem[126]$7352 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[126] [23:16]).
Adding EN signal on $memory\mem[126]$7352 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[126] [31:24]).
Adding EN signal on $memory\mem[125]$7350 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[125] [7:0]).
Adding EN signal on $memory\mem[125]$7350 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[125] [15:8]).
Adding EN signal on $memory\mem[125]$7350 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[125] [23:16]).
Adding EN signal on $memory\mem[125]$7350 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[125] [31:24]).
Adding EN signal on $memory\mem[124]$7348 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[124] [7:0]).
Adding EN signal on $memory\mem[124]$7348 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[124] [15:8]).
Adding EN signal on $memory\mem[124]$7348 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[124] [23:16]).
Adding EN signal on $memory\mem[124]$7348 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[124] [31:24]).
Adding EN signal on $memory\mem[123]$7346 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[123] [7:0]).
Adding EN signal on $memory\mem[123]$7346 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[123] [15:8]).
Adding EN signal on $memory\mem[123]$7346 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[123] [23:16]).
Adding EN signal on $memory\mem[123]$7346 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[123] [31:24]).
Adding EN signal on $memory\mem[122]$7344 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[122] [7:0]).
Adding EN signal on $memory\mem[122]$7344 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[122] [15:8]).
Adding EN signal on $memory\mem[122]$7344 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[122] [23:16]).
Adding EN signal on $memory\mem[122]$7344 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[122] [31:24]).
Adding EN signal on $memory\mem[121]$7342 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[121] [7:0]).
Adding EN signal on $memory\mem[121]$7342 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[121] [15:8]).
Adding EN signal on $memory\mem[121]$7342 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[121] [23:16]).
Adding EN signal on $memory\mem[121]$7342 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[121] [31:24]).
Adding EN signal on $memory\mem[120]$7340 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[120] [15:8]).
Adding EN signal on $memory\mem[120]$7340 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[120] [23:16]).
Adding EN signal on $memory\mem[120]$7340 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[120] [7:0]).
Adding EN signal on $memory\mem[120]$7340 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[120] [31:24]).
Adding EN signal on $memory\mem[11]$7122 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[11] [31:24]).
Adding EN signal on $memory\mem[11]$7122 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[11] [23:16]).
Adding EN signal on $memory\mem[11]$7122 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[11] [15:8]).
Adding EN signal on $memory\mem[11]$7122 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[11] [7:0]).
Adding EN signal on $memory\mem[119]$7338 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[119] [15:8]).
Adding EN signal on $memory\mem[119]$7338 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[119] [31:24]).
Adding EN signal on $memory\mem[119]$7338 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[119] [23:16]).
Adding EN signal on $memory\mem[119]$7338 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[119] [7:0]).
Adding EN signal on $memory\mem[118]$7336 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[118] [7:0]).
Adding EN signal on $memory\mem[118]$7336 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[118] [15:8]).
Adding EN signal on $memory\mem[118]$7336 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[118] [23:16]).
Adding EN signal on $memory\mem[118]$7336 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[118] [31:24]).
Adding EN signal on $memory\mem[117]$7334 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[117] [31:24]).
Adding EN signal on $memory\mem[117]$7334 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[117] [23:16]).
Adding EN signal on $memory\mem[117]$7334 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[117] [7:0]).
Adding EN signal on $memory\mem[117]$7334 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[117] [15:8]).
Adding EN signal on $memory\mem[116]$7332 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[116] [31:24]).
Adding EN signal on $memory\mem[116]$7332 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[116] [23:16]).
Adding EN signal on $memory\mem[116]$7332 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[116] [15:8]).
Adding EN signal on $memory\mem[116]$7332 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[116] [7:0]).
Adding EN signal on $memory\mem[115]$7330 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[115] [31:24]).
Adding EN signal on $memory\mem[115]$7330 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[115] [23:16]).
Adding EN signal on $memory\mem[115]$7330 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[115] [15:8]).
Adding EN signal on $memory\mem[115]$7330 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[115] [7:0]).
Adding EN signal on $memory\mem[114]$7328 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[114] [31:24]).
Adding EN signal on $memory\mem[114]$7328 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[114] [23:16]).
Adding EN signal on $memory\mem[114]$7328 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[114] [15:8]).
Adding EN signal on $memory\mem[114]$7328 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[114] [7:0]).
Adding EN signal on $memory\mem[113]$7326 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[113] [31:24]).
Adding EN signal on $memory\mem[113]$7326 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[113] [23:16]).
Adding EN signal on $memory\mem[113]$7326 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[113] [15:8]).
Adding EN signal on $memory\mem[113]$7326 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[113] [7:0]).
Adding EN signal on $memory\mem[112]$7324 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[112] [31:24]).
Adding EN signal on $memory\mem[112]$7324 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[112] [23:16]).
Adding EN signal on $memory\mem[112]$7324 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[112] [15:8]).
Adding EN signal on $memory\mem[112]$7324 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[112] [7:0]).
Adding EN signal on $memory\mem[111]$7322 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[111] [31:24]).
Adding EN signal on $memory\mem[111]$7322 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[111] [23:16]).
Adding EN signal on $memory\mem[111]$7322 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[111] [15:8]).
Adding EN signal on $memory\mem[111]$7322 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[111] [7:0]).
Adding EN signal on $memory\mem[110]$7320 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[110] [31:24]).
Adding EN signal on $memory\mem[110]$7320 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[110] [23:16]).
Adding EN signal on $memory\mem[110]$7320 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[110] [15:8]).
Adding EN signal on $memory\mem[110]$7320 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[110] [7:0]).
Adding EN signal on $memory\mem[10]$7120 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[10] [31:24]).
Adding EN signal on $memory\mem[10]$7120 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[10] [23:16]).
Adding EN signal on $memory\mem[10]$7120 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[10] [15:8]).
Adding EN signal on $memory\mem[10]$7120 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[10] [7:0]).
Adding EN signal on $memory\mem[109]$7318 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[109] [31:24]).
Adding EN signal on $memory\mem[109]$7318 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[109] [23:16]).
Adding EN signal on $memory\mem[109]$7318 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[109] [15:8]).
Adding EN signal on $memory\mem[109]$7318 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[109] [7:0]).
Adding EN signal on $memory\mem[108]$7316 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[108] [31:24]).
Adding EN signal on $memory\mem[108]$7316 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[108] [23:16]).
Adding EN signal on $memory\mem[108]$7316 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[108] [15:8]).
Adding EN signal on $memory\mem[108]$7316 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[108] [7:0]).
Adding EN signal on $memory\mem[107]$7314 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[107] [31:24]).
Adding EN signal on $memory\mem[107]$7314 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[107] [23:16]).
Adding EN signal on $memory\mem[107]$7314 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[107] [15:8]).
Adding EN signal on $memory\mem[107]$7314 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[107] [7:0]).
Adding EN signal on $memory\mem[106]$7312 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[106] [23:16]).
Adding EN signal on $memory\mem[106]$7312 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[106] [15:8]).
Adding EN signal on $memory\mem[106]$7312 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[106] [7:0]).
Adding EN signal on $memory\mem[106]$7312 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[106] [31:24]).
Adding EN signal on $memory\mem[105]$7310 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[105] [7:0]).
Adding EN signal on $memory\mem[105]$7310 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[105] [31:24]).
Adding EN signal on $memory\mem[105]$7310 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[105] [23:16]).
Adding EN signal on $memory\mem[105]$7310 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[105] [15:8]).
Adding EN signal on $memory\mem[104]$7308 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[104] [31:24]).
Adding EN signal on $memory\mem[104]$7308 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[104] [23:16]).
Adding EN signal on $memory\mem[104]$7308 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[104] [15:8]).
Adding EN signal on $memory\mem[104]$7308 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[104] [7:0]).
Adding EN signal on $memory\mem[103]$7306 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[103] [31:24]).
Adding EN signal on $memory\mem[103]$7306 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[103] [23:16]).
Adding EN signal on $memory\mem[103]$7306 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[103] [15:8]).
Adding EN signal on $memory\mem[103]$7306 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[103] [7:0]).
Adding EN signal on $memory\mem[102]$7304 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[102] [7:0]).
Adding EN signal on $memory\mem[102]$7304 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[102] [15:8]).
Adding EN signal on $memory\mem[102]$7304 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[102] [23:16]).
Adding EN signal on $memory\mem[102]$7304 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[102] [31:24]).
Adding EN signal on $memory\mem[101]$7302 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[101] [7:0]).
Adding EN signal on $memory\mem[101]$7302 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[101] [15:8]).
Adding EN signal on $memory\mem[101]$7302 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[101] [23:16]).
Adding EN signal on $memory\mem[101]$7302 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[101] [31:24]).
Adding EN signal on $memory\mem[100]$7300 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[100] [7:0]).
Adding EN signal on $memory\mem[100]$7300 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[100] [15:8]).
Adding EN signal on $memory\mem[100]$7300 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[100] [23:16]).
Adding EN signal on $memory\mem[100]$7300 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[100] [31:24]).
Adding EN signal on $memory\mem[0]$7100 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [31:24], Q = \mem[0] [31:24]).
Adding EN signal on $memory\mem[0]$7100 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [23:16], Q = \mem[0] [23:16]).
Adding EN signal on $memory\mem[0]$7100 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [15:8], Q = \mem[0] [15:8]).
Adding EN signal on $memory\mem[0]$7100 ($dff) from module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 (D = \wdata [7:0], Q = \mem[0] [7:0]).
Adding EN signal on $memory\regs[9]$13131 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[9]).
Adding EN signal on $memory\regs[8]$13129 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[8]).
Adding EN signal on $memory\regs[7]$13127 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[7]).
Adding EN signal on $memory\regs[6]$13125 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[6]).
Adding EN signal on $memory\regs[5]$13123 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[5]).
Adding EN signal on $memory\regs[4]$13121 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[4]).
Adding EN signal on $memory\regs[3]$13119 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[3]).
Adding EN signal on $memory\regs[31]$13175 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[31]).
Adding EN signal on $memory\regs[30]$13173 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[30]).
Adding EN signal on $memory\regs[2]$13117 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[2]).
Adding EN signal on $memory\regs[29]$13171 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[29]).
Adding EN signal on $memory\regs[28]$13169 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[28]).
Adding EN signal on $memory\regs[27]$13167 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[27]).
Adding EN signal on $memory\regs[26]$13165 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[26]).
Adding EN signal on $memory\regs[25]$13163 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[25]).
Adding EN signal on $memory\regs[24]$13161 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[24]).
Adding EN signal on $memory\regs[23]$13159 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[23]).
Adding EN signal on $memory\regs[22]$13157 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[22]).
Adding EN signal on $memory\regs[21]$13155 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[21]).
Adding EN signal on $memory\regs[20]$13153 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[20]).
Adding EN signal on $memory\regs[1]$13115 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[1]).
Adding EN signal on $memory\regs[19]$13151 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[19]).
Adding EN signal on $memory\regs[18]$13149 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[18]).
Adding EN signal on $memory\regs[17]$13147 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[17]).
Adding EN signal on $memory\regs[16]$13145 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[16]).
Adding EN signal on $memory\regs[15]$13143 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[15]).
Adding EN signal on $memory\regs[14]$13141 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[14]).
Adding EN signal on $memory\regs[13]$13139 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[13]).
Adding EN signal on $memory\regs[12]$13137 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[12]).
Adding EN signal on $memory\regs[11]$13135 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[11]).
Adding EN signal on $memory\regs[10]$13133 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[10]).
Adding EN signal on $memory\regs[0]$13113 ($dff) from module alphasoc_regs (D = \wdata, Q = \regs[0]).
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$6744 ($sdffe) from module spimemio.
Adding SRST signal on $auto$ff.cc:266:slice$6822 ($dffe) from module spimemio_xfer (D = \din_data [0], Q = \obuffer [0], rval = 1'0).

7.19.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..
Removed 1056 unused cells and 1060 unused wires.
<suppressed ~1059 debug messages>

7.19.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
Optimizing module spimemio_xfer.

7.19.18. Rerunning OPT passes. (Maybe there is more to do..)

7.19.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc_regs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \simpleuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \spimemio_xfer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~131 debug messages>

7.19.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
  Optimizing cells in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \alphasoc_regs.
  Optimizing cells in module \simpleuart.
  Optimizing cells in module \spimemio.
  Optimizing cells in module \spimemio_xfer.
Performed a total of 0 changes.

7.19.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 0 cells.

7.19.22. Executing OPT_SHARE pass.

7.19.23. Executing OPT_DFF pass (perform DFF optimizations).

7.19.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..

7.19.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
Optimizing module spimemio_xfer.

7.19.26. Finished OPT passes. (There is nothing left to do.)

7.20. Executing TECHMAP pass (map to technology primitives).

7.20.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$b756e651b7db7aeb455331d9a2df073db93fcc2e\_90_pmux for cells of type $pmux.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using template $paramod$ba698a254f9a5947e85cbe7beae6b161eefc5386\_90_alu for cells of type $alu.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
Using template $paramod$fedb90247e1daaa8b0af86a595f377181f141d27\_90_pmux for cells of type $pmux.
Using template $paramod$d7387fdb214042e5ef2d69a3f74948694b4bb65e\_90_pmux for cells of type $pmux.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using template $paramod$16349e5f556ea87a576d7d9941c668f31b6ef10b\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010111 for cells of type $lcu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$ebf89ea36a793f0f77858f212141d47c833068ad\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using template $paramod$a4cd5864316cd4ed9c6832759038dc317198ba73\_90_alu for cells of type $alu.
Using template $paramod$38e8498ccdc425801fe5312e427e3cf0d9089c58\_90_alu for cells of type $alu.
Using template $paramod$a54505a20ae3d90601910914642f49e8f9eb7e29\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$cc80a4e89b0341cb117f5d28b0e7244620640141\_90_alu for cells of type $alu.
Using template $paramod$d901baf1fb63991ac0a40d2e3f4807d372bb57a2\_90_alu for cells of type $alu.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_90_alu for cells of type $alu.
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_90_alu for cells of type $alu.
Using template $paramod$c04af8dbf0e5d1d69bbccb2c7bd8a93fc9ef54dc\_90_alu for cells of type $alu.
Using template $paramod$2653f68ddb8eab7b1907b4a20767b72a824a7a36\_90_alu for cells of type $alu.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$335cfd09f1afa8139c4aafcbbe5f361887b79c5e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$455891ae50d34e43581a517459d55825f76fa58e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$cc1e387d9d5ac1d3f6e6bed180038d9c0ac48d0c\_90_pmux for cells of type $pmux.
Using template $paramod$b098bc6f249c0ac91c4d6e19d54b23c285914115\_90_pmux for cells of type $pmux.
Using template $paramod$2407ada40cc3dda6c6015be2b49b748cddb5a800\_90_pmux for cells of type $pmux.
Using template $paramod$c96def1cdcef2eee3c62e5dfb7ba2dd09c9f74dd\_90_pmux for cells of type $pmux.
Using template $paramod$20d3ee62d72123142eb855d7ddafd835e31ba009\_90_pmux for cells of type $pmux.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using template $paramod$59b03ae2620a41577de8da5f5c97b2919e82362b\_90_pmux for cells of type $pmux.
Using template $paramod$24fb226dd75c9d3f6955ec2ad61d794776778cf6\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$70d30c21ff772b34d0d1da2801fbd781dc3c70e4\_90_pmux for cells of type $pmux.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$32e7c4d6f92ff4337599ece53082d2e88a82a9f2\_90_pmux for cells of type $pmux.
Using template $paramod$03eba0cdd46566f6651a3011e0b5671fa6b5e494\_90_alu for cells of type $alu.
Using template $paramod$f3115659d5e2977ebd2cb01ff3557fc5f6187689\_90_pmux for cells of type $pmux.
Using template $paramod$ed0bb9616228df1e6c226f91f8133e751815f1b1\_90_pmux for cells of type $pmux.
Using template $paramod$c15e84c77f007506123baf6c4be45847f0e33a3b\_90_pmux for cells of type $pmux.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
No more expansions possible.
<suppressed ~11715 debug messages>

7.21. Executing OPT pass (performing simple optimizations).

7.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
<suppressed ~3566 debug messages>
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
<suppressed ~460 debug messages>
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
<suppressed ~613 debug messages>
Optimizing module spimemio.
<suppressed ~258 debug messages>
Optimizing module spimemio_xfer.
<suppressed ~123 debug messages>

7.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
<suppressed ~5559 debug messages>
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
<suppressed ~507 debug messages>
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
<suppressed ~339 debug messages>
Finding identical cells in module `\spimemio'.
<suppressed ~144 debug messages>
Finding identical cells in module `\spimemio_xfer'.
<suppressed ~156 debug messages>
Removed a total of 2235 cells.

7.21.3. Executing OPT_DFF pass (perform DFF optimizations).

7.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..
Removed 837 unused cells and 6538 unused wires.
<suppressed ~842 debug messages>

7.21.5. Finished fast OPT passes.

7.22. Executing ABC pass (technology mapping using ABC).

7.22.1. Extracting gate netlist of module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore' to `<abc-temp-dir>/input.blif'..
Extracted 8178 gates and 8949 wires to a netlist network with 768 inputs and 778 outputs.

7.22.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.1.2. Re-integrating ABC results.
ABC RESULTS:             ORNOT cells:      221
ABC RESULTS:              XNOR cells:      117
ABC RESULTS:               NOT cells:      303
ABC RESULTS:               MUX cells:     1621
ABC RESULTS:               NOR cells:      385
ABC RESULTS:                OR cells:     1610
ABC RESULTS:              NAND cells:      404
ABC RESULTS:            ANDNOT cells:     2235
ABC RESULTS:               AND cells:      556
ABC RESULTS:               XOR cells:      454
ABC RESULTS:        internal signals:     7403
ABC RESULTS:           input signals:      768
ABC RESULTS:          output signals:      778
Removing temp directory.

7.22.2. Extracting gate netlist of module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000' to `<abc-temp-dir>/input.blif'..
Extracted 9496 gates and 17700 wires to a netlist network with 8204 inputs and 1056 outputs.

7.22.2.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.2.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        7
ABC RESULTS:               MUX cells:     8160
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:              NAND cells:        4
ABC RESULTS:                OR cells:      292
ABC RESULTS:            ANDNOT cells:     1024
ABC RESULTS:        internal signals:     8440
ABC RESULTS:           input signals:     8204
ABC RESULTS:          output signals:     1056
Removing temp directory.

7.22.3. Extracting gate netlist of module `\alphasoc' to `<abc-temp-dir>/input.blif'..
Extracted 356 gates and 590 wires to a netlist network with 233 inputs and 50 outputs.

7.22.3.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:               NOR cells:        5
ABC RESULTS:                OR cells:       61
ABC RESULTS:               MUX cells:      160
ABC RESULTS:               NOT cells:        6
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:            ANDNOT cells:       55
ABC RESULTS:        internal signals:      307
ABC RESULTS:           input signals:      233
ABC RESULTS:          output signals:       50
Removing temp directory.

7.22.4. Extracting gate netlist of module `\alphasoc_regs' to `<abc-temp-dir>/input.blif'..
Extracted 2069 gates and 3109 wires to a netlist network with 1040 inputs and 96 outputs.

7.22.4.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.4.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:     1984
ABC RESULTS:               NOT cells:        9
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              NAND cells:        2
ABC RESULTS:                OR cells:       42
ABC RESULTS:            ANDNOT cells:       32
ABC RESULTS:        internal signals:     1973
ABC RESULTS:           input signals:     1040
ABC RESULTS:          output signals:       96
Removing temp directory.

7.22.5. Extracting gate netlist of module `\simpleuart' to `<abc-temp-dir>/input.blif'..
Extracted 975 gates and 1115 wires to a netlist network with 138 inputs and 101 outputs.

7.22.5.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.5.2. Re-integrating ABC results.
ABC RESULTS:               NOR cells:       15
ABC RESULTS:             ORNOT cells:       89
ABC RESULTS:              XNOR cells:       50
ABC RESULTS:               MUX cells:       42
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:      120
ABC RESULTS:              NAND cells:       53
ABC RESULTS:            ANDNOT cells:      380
ABC RESULTS:               AND cells:       24
ABC RESULTS:               XOR cells:      109
ABC RESULTS:        internal signals:      876
ABC RESULTS:           input signals:      138
ABC RESULTS:          output signals:      101
Removing temp directory.

7.22.6. Extracting gate netlist of module `\spimemio' to `<abc-temp-dir>/input.blif'..
Extracted 499 gates and 613 wires to a netlist network with 111 inputs and 80 outputs.

7.22.6.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.6.2. Re-integrating ABC results.
ABC RESULTS:               XOR cells:       34
ABC RESULTS:              XNOR cells:       33
ABC RESULTS:               NOT cells:       39
ABC RESULTS:             ORNOT cells:       21
ABC RESULTS:               MUX cells:       45
ABC RESULTS:              NAND cells:       16
ABC RESULTS:               NOR cells:       15
ABC RESULTS:                OR cells:      157
ABC RESULTS:               AND cells:       24
ABC RESULTS:            ANDNOT cells:      106
ABC RESULTS:        internal signals:      422
ABC RESULTS:           input signals:      111
ABC RESULTS:          output signals:       80
Removing temp directory.

7.22.7. Extracting gate netlist of module `\spimemio_xfer' to `<abc-temp-dir>/input.blif'..
Extracted 274 gates and 324 wires to a netlist network with 47 inputs and 43 outputs.

7.22.7.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.7.2. Re-integrating ABC results.
ABC RESULTS:               XOR cells:       13
ABC RESULTS:               AND cells:       19
ABC RESULTS:             ORNOT cells:        9
ABC RESULTS:               NOR cells:        9
ABC RESULTS:               NOT cells:       17
ABC RESULTS:              NAND cells:       11
ABC RESULTS:               MUX cells:       44
ABC RESULTS:                OR cells:       57
ABC RESULTS:            ANDNOT cells:       72
ABC RESULTS:        internal signals:      234
ABC RESULTS:           input signals:       47
ABC RESULTS:          output signals:       43
Removing temp directory.

7.23. Executing OPT pass (performing simple optimizations).

7.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
<suppressed ~406 debug messages>
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
<suppressed ~4064 debug messages>
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
<suppressed ~960 debug messages>
Optimizing module simpleuart.
Optimizing module spimemio.
<suppressed ~37 debug messages>
Optimizing module spimemio_xfer.
<suppressed ~9 debug messages>

7.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
<suppressed ~93 debug messages>
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
<suppressed ~3 debug messages>
Finding identical cells in module `\spimemio'.
<suppressed ~3 debug messages>
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 33 cells.

7.23.3. Executing OPT_DFF pass (perform DFF optimizations).

7.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..
Removed 23 unused cells and 16615 unused wires.
<suppressed ~54 debug messages>

7.23.5. Finished fast OPT passes.

7.24. Executing HIERARCHY pass (managing design hierarchy).

7.24.1. Analyzing design hierarchy..
Top module:  \alphasoc
Used module:     $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore
Used module:         \alphasoc_regs
Used module:     \spimemio
Used module:         \spimemio_xfer
Used module:     $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000
Used module:     \simpleuart

7.24.2. Analyzing design hierarchy..
Top module:  \alphasoc
Used module:     $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore
Used module:         \alphasoc_regs
Used module:     \spimemio
Used module:         \spimemio_xfer
Used module:     $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000
Used module:     \simpleuart
Removed 0 unused modules.

7.25. Printing statistics.

=== $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore ===

   Number of wires:               7517
   Number of wire bits:           9247
   Number of public wires:         151
   Number of public wire bits:    1377
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               8603
     $_ANDNOT_                    2230
     $_AND_                        556
     $_DFFE_PN_                     11
     $_DFFE_PP_                    242
     $_DFF_P_                      107
     $_MUX_                       1617
     $_NAND_                       404
     $_NOR_                        366
     $_NOT_                        297
     $_ORNOT_                      218
     $_OR_                        1610
     $_SDFFCE_PP0P_                  4
     $_SDFFE_PN0P_                 193
     $_SDFFE_PN1P_                  36
     $_SDFFE_PP0P_                   3
     $_SDFFE_PP1P_                   3
     $_SDFF_PN0_                   131
     $_SDFF_PN1_                     1
     $_SDFF_PP0_                     2
     $_XNOR_                       117
     $_XOR_                        454
     alphasoc_regs                   1

=== $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000 ===

   Number of wires:               9718
   Number of wire bits:          17771
   Number of public wires:         261
   Number of public wire bits:    8283
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              17712
     $_ANDNOT_                    1024
     $_DFFE_PP_                   8192
     $_DFF_P_                       32
     $_MUX_                       8160
     $_NAND_                         4
     $_ORNOT_                        8
     $_OR_                         292

=== alphasoc ===

   Number of wires:                305
   Number of wire bits:            659
   Number of public wires:          45
   Number of public wire bits:     399
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                299
     $_ANDNOT_                      55
     $_AND_                          1
     $_DFF_P_                        1
     $_MUX_                        160
     $_NOR_                          5
     $_NOT_                          6
     $_ORNOT_                        6
     $_OR_                          61
     $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore      1
     $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000      1
     simpleuart                      1
     spimemio                        1

=== alphasoc_regs ===

   Number of wires:               2041
   Number of wire bits:           3141
   Number of public wires:          40
   Number of public wire bits:    1140
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3089
     $_ANDNOT_                      32
     $_DFFE_PP_                   1024
     $_MUX_                       1984
     $_NAND_                         2
     $_NOT_                          1
     $_ORNOT_                        4
     $_OR_                          42

=== simpleuart ===

   Number of wires:                833
   Number of wire bits:           1177
   Number of public wires:          22
   Number of public wire bits:     270
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1016
     $_ANDNOT_                     380
     $_AND_                         24
     $_MUX_                         42
     $_NAND_                        53
     $_NOR_                         14
     $_NOT_                          4
     $_ORNOT_                       89
     $_OR_                         120
     $_SDFFE_PN0P_                  55
     $_SDFFE_PN1P_                   2
     $_SDFFE_PP1P_                   9
     $_SDFF_PN0_                    33
     $_SDFF_PP0_                    32
     $_XNOR_                        50
     $_XOR_                        109

=== spimemio ===

   Number of wires:                532
   Number of wire bits:            747
   Number of public wires:          67
   Number of public wire bits:     273
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                623
     $_ANDNOT_                     106
     $_AND_                         24
     $_DFFE_PP_                     88
     $_DFF_N_                        4
     $_DFF_P_                       13
     $_MUX_                         45
     $_NAND_                        16
     $_NOR_                         14
     $_NOT_                         37
     $_ORNOT_                       21
     $_OR_                         157
     $_SDFFCE_PP0P_                  2
     $_SDFFE_PN0P_                  19
     $_SDFFE_PN1P_                   2
     $_SDFFE_PP0P_                   2
     $_SDFF_PN0_                     3
     $_SDFF_PN1_                     1
     $_SDFF_PP0_                     1
     $_XNOR_                        33
     $_XOR_                         34
     spimemio_xfer                   1

=== spimemio_xfer ===

   Number of wires:                275
   Number of wire bits:            338
   Number of public wires:          43
   Number of public wire bits:      96
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                292
     $_ANDNOT_                      72
     $_AND_                         19
     $_DFFE_PP_                     15
     $_DFF_P_                        5
     $_MUX_                         44
     $_NAND_                        11
     $_NOR_                          9
     $_NOT_                         17
     $_ORNOT_                        9
     $_OR_                          57
     $_SDFFCE_PN0P_                  1
     $_SDFFE_PN0P_                  13
     $_SDFFE_PN1P_                   1
     $_SDFFE_PP0P_                   4
     $_SDFF_PN1_                     2
     $_XOR_                         13

=== design hierarchy ===

   alphasoc                          1
     $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore      1
       alphasoc_regs                 1
     $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000      1
     simpleuart                      1
     spimemio                        1
       spimemio_xfer                 1

   Number of wires:              21221
   Number of wire bits:          33080
   Number of public wires:         629
   Number of public wire bits:   11838
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              31628
     $_ANDNOT_                    3899
     $_AND_                        624
     $_DFFE_PN_                     11
     $_DFFE_PP_                   9561
     $_DFF_N_                        4
     $_DFF_P_                      158
     $_MUX_                      12052
     $_NAND_                       490
     $_NOR_                        408
     $_NOT_                        362
     $_ORNOT_                      355
     $_OR_                        2339
     $_SDFFCE_PN0P_                  1
     $_SDFFCE_PP0P_                  6
     $_SDFFE_PN0P_                 280
     $_SDFFE_PN1P_                  41
     $_SDFFE_PP0P_                   9
     $_SDFFE_PP1P_                  12
     $_SDFF_PN0_                   167
     $_SDFF_PN1_                     4
     $_SDFF_PP0_                    35
     $_XNOR_                       200
     $_XOR_                        610

7.26. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore...
Checking module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000...
Checking module alphasoc...
Checking module alphasoc_regs...
Checking module simpleuart...
Checking module spimemio...
Checking module spimemio_xfer...
Found and reported 0 problems.

yosys> dfflibmap -liberty ./lib/sky130_fd_sc_hd__tt_025C_1v80.lib 

8. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
  cell sky130_fd_sc_hd__dfxtp_1 (noninv, pins=3, area=20.02) is a direct match for cell type $_DFF_P_.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
  cell sky130_fd_sc_hd__dfrtn_1 (noninv, pins=4, area=25.02) is a direct match for cell type $_DFF_NN0_.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
  cell sky130_fd_sc_hd__dfrtp_1 (noninv, pins=4, area=25.02) is a direct match for cell type $_DFF_PN0_.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
  cell sky130_fd_sc_hd__dfbbn_1 (noninv, pins=6, area=32.53) is a direct match for cell type $_DFFSR_NNN_.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
  cell sky130_fd_sc_hd__dfbbp_1 (noninv, pins=6, area=32.53) is a direct match for cell type $_DFFSR_PNN_.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    \sky130_fd_sc_hd__dfrtn_1 _DFF_NN0_ (.CLK_N( C), .D( D), .Q( Q), .RESET_B( R));
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_1 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_1 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    \sky130_fd_sc_hd__dfbbp_1 _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

8.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore':
  mapped 733 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_1 cells.
Mapping DFF cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000':
  mapped 8224 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_1 cells.
Mapping DFF cells in module `\alphasoc':
  mapped 1 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_1 cells.
Mapping DFF cells in module `\alphasoc_regs':
  mapped 1024 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_1 cells.
Mapping DFF cells in module `\simpleuart':
  mapped 131 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_1 cells.
Mapping DFF cells in module `\spimemio':
  mapped 135 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_1 cells.
Mapping DFF cells in module `\spimemio_xfer':
  mapped 41 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_1 cells.

yosys> opt

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
Optimizing module spimemio_xfer.

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
<suppressed ~9 debug messages>
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 3 cells.

9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alphasoc_regs..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \simpleuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \spimemio_xfer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
  Optimizing cells in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \alphasoc_regs.
  Optimizing cells in module \simpleuart.
  Optimizing cells in module \spimemio.
  Optimizing cells in module \spimemio_xfer.
Performed a total of 0 changes.

9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 0 cells.

9.6. Executing OPT_DFF pass (perform DFF optimizations).

9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
Optimizing module spimemio_xfer.

9.9. Rerunning OPT passes. (Maybe there is more to do..)

9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alphasoc_regs..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \simpleuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \spimemio..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \spimemio_xfer..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
  Optimizing cells in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \alphasoc_regs.
  Optimizing cells in module \simpleuart.
  Optimizing cells in module \spimemio.
  Optimizing cells in module \spimemio_xfer.
Performed a total of 0 changes.

9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore'.
Finding identical cells in module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\alphasoc_regs'.
Finding identical cells in module `\simpleuart'.
Finding identical cells in module `\spimemio'.
Finding identical cells in module `\spimemio_xfer'.
Removed a total of 0 cells.

9.13. Executing OPT_DFF pass (perform DFF optimizations).

9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore..
Finding unused cells or wires in module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \alphasoc_regs..
Finding unused cells or wires in module \simpleuart..
Finding unused cells or wires in module \spimemio..
Finding unused cells or wires in module \spimemio_xfer..

9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Optimizing module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Optimizing module alphasoc.
Optimizing module alphasoc_regs.
Optimizing module simpleuart.
Optimizing module spimemio.
Optimizing module spimemio_xfer.

9.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -liberty ./lib/sky130_fd_sc_hd__tt_025C_1v80.lib -script +strash;scorr;ifraig;retime;{D};strash;dch,-f;map,-M,1,{D}
10. Executing ABC pass (technology mapping using ABC).

10.1. Extracting gate netlist of module `$paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore' to `<abc-temp-dir>/input.blif'..
Extracted 8734 gates and 9599 wires to a netlist network with 863 inputs and 826 outputs.

10.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.11 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.17 sec
ABC: Memory =   19.84 MB. Time =     0.17 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2111o_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o2bb2ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o211a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2111a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xor3_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__xnor3_4 cells:       24
ABC RESULTS:   sky130_fd_sc_hd__mux2i_1 cells:       29
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__lpflow_inputiso0p_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a311o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:       39
ABC RESULTS:   sky130_fd_sc_hd__nor3b_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o32ai_1 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__xnor2_1 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__a32oi_1 cells:       37
ABC RESULTS:   sky130_fd_sc_hd__nor4b_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:       80
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:       30
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__o21a_1 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__o311ai_0 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__a32o_1 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__o221ai_1 cells:       37
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__o31ai_1 cells:       39
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_1 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__a41oi_1 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_0 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__a221oi_1 cells:       38
ABC RESULTS:   sky130_fd_sc_hd__a21boi_0 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a311oi_1 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__nand3b_1 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__a211oi_1 cells:       69
ABC RESULTS:   sky130_fd_sc_hd__o211ai_1 cells:       59
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:      245
ABC RESULTS:   sky130_fd_sc_hd__a31oi_1 cells:       66
ABC RESULTS:   sky130_fd_sc_hd__o41ai_1 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__o21bai_1 cells:       26
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:      953
ABC RESULTS:   sky130_fd_sc_hd__a22oi_1 cells:      123
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:      348
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:      180
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:      113
ABC RESULTS:   sky130_fd_sc_hd__nor4_1 cells:       60
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:      889
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:     1295
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:      720
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:     1127
ABC RESULTS:        internal signals:     7910
ABC RESULTS:           input signals:      863
ABC RESULTS:          output signals:      826
Removing temp directory.

10.2. Extracting gate netlist of module `$paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000' to `<abc-temp-dir>/input.blif'..
Extracted 17680 gates and 25916 wires to a netlist network with 8236 inputs and 8224 outputs.

10.2.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.11 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.18 sec
ABC: Memory =   19.84 MB. Time =     0.18 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.2.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_1 cells:      288
ABC RESULTS:   sky130_fd_sc_hd__nand3b_1 cells:      896
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:     2432
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:      345
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:     5512
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:     7326
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:     2656
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:     6304
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:     5536
ABC RESULTS:        internal signals:     9456
ABC RESULTS:           input signals:     8236
ABC RESULTS:          output signals:     8224
Removing temp directory.

10.3. Extracting gate netlist of module `\alphasoc' to `<abc-temp-dir>/input.blif'..
Extracted 294 gates and 527 wires to a netlist network with 233 inputs and 50 outputs.

10.3.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.11 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.18 sec
ABC: Memory =   19.84 MB. Time =     0.18 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.3.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:      103
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:       37
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:       32
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:       47
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:       32
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:      132
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:       62
ABC RESULTS:        internal signals:      244
ABC RESULTS:           input signals:      233
ABC RESULTS:          output signals:       50
Removing temp directory.

10.4. Extracting gate netlist of module `\alphasoc_regs' to `<abc-temp-dir>/input.blif'..
Extracted 3089 gates and 4161 wires to a netlist network with 1072 inputs and 1088 outputs.

10.4.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.11 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.18 sec
ABC: Memory =   19.84 MB. Time =     0.18 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.4.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__mux2i_1 cells:       64
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:       64
ABC RESULTS:   sky130_fd_sc_hd__o211ai_1 cells:       64
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:      242
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:      389
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:     1088
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:     2440
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:      670
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:     1280
ABC RESULTS:        internal signals:     2001
ABC RESULTS:           input signals:     1072
ABC RESULTS:          output signals:     1088
Removing temp directory.

10.5. Extracting gate netlist of module `\simpleuart' to `<abc-temp-dir>/input.blif'..
Extracted 1082 gates and 1263 wires to a netlist network with 179 inputs and 141 outputs.

10.5.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.11 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.17 sec
ABC: Memory =   19.84 MB. Time =     0.17 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.5.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor4b_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__maj3_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a221oi_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a211oi_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o31ai_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__a21boi_0 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__xnor2_1 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__nand3b_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o221ai_1 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:       23
ABC RESULTS:   sky130_fd_sc_hd__o21bai_1 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a22oi_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__lpflow_inputiso0p_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31oi_1 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__nor3b_1 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__nor4_1 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:      193
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:       59
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:       23
ABC RESULTS:   sky130_fd_sc_hd__o41ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:       47
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:      129
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:      221
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:       94
ABC RESULTS:        internal signals:      943
ABC RESULTS:           input signals:      179
ABC RESULTS:          output signals:      141
Removing temp directory.

10.6. Extracting gate netlist of module `\spimemio' to `<abc-temp-dir>/input.blif'..
Extracted 631 gates and 839 wires to a netlist network with 206 inputs and 145 outputs.

10.6.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.12 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.18 sec
ABC: Memory =   19.84 MB. Time =     0.18 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.6.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o211a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21bai_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__xnor3_4 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__nand3b_1 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__nor3b_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a31oi_1 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o32ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_0 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a41oi_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o31ai_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a32oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o221ai_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o41ai_1 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__nor4_1 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__a211oi_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:      104
ABC RESULTS:   sky130_fd_sc_hd__a22oi_1 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__o211ai_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:       33
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:      120
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:      212
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:       73
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:       91
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:       43
ABC RESULTS:        internal signals:      488
ABC RESULTS:           input signals:      206
ABC RESULTS:          output signals:      145
Removing temp directory.

10.7. Extracting gate netlist of module `\spimemio_xfer' to `<abc-temp-dir>/input.blif'..
Extracted 306 gates and 367 wires to a netlist network with 59 inputs and 45 outputs.

10.7.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.12 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.19 sec
ABC: Memory =   19.84 MB. Time =     0.19 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.7.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21bai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a211oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a311oi_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o221ai_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a221oi_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nand3b_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o21a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_0 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o311ai_0 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o211a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__a22oi_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o211ai_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:       36
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:       32
ABC RESULTS:   sky130_fd_sc_hd__nor4_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21boi_0 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:       24
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:       65
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:       17
ABC RESULTS:        internal signals:      263
ABC RESULTS:           input signals:       59
ABC RESULTS:          output signals:       45
Removing temp directory.

yosys> flatten

11. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod$ace73f19b2f3c3bf73f75f1c44d47153a15de822\alphacore.
Deleting now unused module $paramod\alphasoc_mem\WORDS=s32'00000000000000000000000100000000.
Deleting now unused module alphasoc_regs.
Deleting now unused module simpleuart.
Deleting now unused module spimemio.
Deleting now unused module spimemio_xfer.
<suppressed ~6 debug messages>

yosys> setundef -zero

12. Executing SETUNDEF pass (replace undef values with defined constants).

yosys> clean -purge

Removed 151 unused cells and 42500 unused wires.

yosys> rename -enumerate

yosys> stat

13. Printing statistics.

=== alphasoc ===

   Number of wires:              46908
   Number of wire bits:          57149
   Number of public wires:       46908
   Number of public wire bits:   57149
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              57000
     sky130_fd_sc_hd__a2111o_1       1
     sky130_fd_sc_hd__a2111oi_0     18
     sky130_fd_sc_hd__a211o_2        2
     sky130_fd_sc_hd__a211oi_1      78
     sky130_fd_sc_hd__a21boi_0      19
     sky130_fd_sc_hd__a21o_2         5
     sky130_fd_sc_hd__a21oi_1     7727
     sky130_fd_sc_hd__a221o_2        1
     sky130_fd_sc_hd__a221oi_1      43
     sky130_fd_sc_hd__a22o_2         2
     sky130_fd_sc_hd__a22oi_1      138
     sky130_fd_sc_hd__a2bb2oi_1      1
     sky130_fd_sc_hd__a311o_2        1
     sky130_fd_sc_hd__a311oi_1       7
     sky130_fd_sc_hd__a31o_2        31
     sky130_fd_sc_hd__a31oi_1       91
     sky130_fd_sc_hd__a32o_1        12
     sky130_fd_sc_hd__a32oi_1       38
     sky130_fd_sc_hd__a41o_2         1
     sky130_fd_sc_hd__a41oi_1       20
     sky130_fd_sc_hd__and2_2        10
     sky130_fd_sc_hd__and2b_2        2
     sky130_fd_sc_hd__and3_2         9
     sky130_fd_sc_hd__and3b_2        2
     sky130_fd_sc_hd__clkinv_1    1854
     sky130_fd_sc_hd__dfxtp_1    10256
     sky130_fd_sc_hd__lpflow_inputiso0p_1      3
     sky130_fd_sc_hd__maj3_1         1
     sky130_fd_sc_hd__mux2_2        39
     sky130_fd_sc_hd__mux2i_1       93
     sky130_fd_sc_hd__nand2_1    11659
     sky130_fd_sc_hd__nand3_1     6360
     sky130_fd_sc_hd__nand3b_1     919
     sky130_fd_sc_hd__nand4_1     2716
     sky130_fd_sc_hd__nor2_1      8472
     sky130_fd_sc_hd__nor3_1       279
     sky130_fd_sc_hd__nor3b_1       14
     sky130_fd_sc_hd__nor4_1        90
     sky130_fd_sc_hd__nor4b_1        4
     sky130_fd_sc_hd__o2111a_1       1
     sky130_fd_sc_hd__o2111ai_1    314
     sky130_fd_sc_hd__o211a_1        3
     sky130_fd_sc_hd__o211ai_1     131
     sky130_fd_sc_hd__o21a_1        23
     sky130_fd_sc_hd__o21ai_0     4791
     sky130_fd_sc_hd__o21ba_2        1
     sky130_fd_sc_hd__o21bai_1      35
     sky130_fd_sc_hd__o221a_2        1
     sky130_fd_sc_hd__o221ai_1      50
     sky130_fd_sc_hd__o22ai_1      289
     sky130_fd_sc_hd__o2bb2ai_1      1
     sky130_fd_sc_hd__o311ai_0       9
     sky130_fd_sc_hd__o31ai_1       49
     sky130_fd_sc_hd__o32ai_1        8
     sky130_fd_sc_hd__o41ai_1       17
     sky130_fd_sc_hd__or2_2         41
     sky130_fd_sc_hd__or2b_2        64
     sky130_fd_sc_hd__or3_2          2
     sky130_fd_sc_hd__or3b_2         1
     sky130_fd_sc_hd__or4_2          7
     sky130_fd_sc_hd__xnor2_1       21
     sky130_fd_sc_hd__xnor3_4       31
     sky130_fd_sc_hd__xor2_1        91
     sky130_fd_sc_hd__xor3_4         1

yosys> write_verilog -noattr ../output/synth/alphasoc.synth.v
14. Executing Verilog backend.

14.1. Executing BMUXMAP pass.

14.2. Executing DEMUXMAP pass.
Dumping module `\alphasoc'.

