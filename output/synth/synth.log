 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.30+48 (git sha1 14d50a176d5, gcc 8.3.1 -fPIC -Os)


yosys> read_verilog ./module/alphasoc.v
1. Executing Verilog-2005 frontend: ./module/alphasoc.v
Parsing Verilog input from `./module/alphasoc.v' to AST representation.
Generating RTLIL representation for module `\alphasoc'.
Successfully finished Verilog frontend.

yosys> read_verilog -I./include ../output/compiled_tlv/alphacore.v

2. Executing Verilog-2005 frontend: ../output/compiled_tlv/alphacore.v
Parsing Verilog input from `../output/compiled_tlv/alphacore.v' to AST representation.
Generating RTLIL representation for module `\alphacore'.
Warning: Replacing memory \CPU_Xreg_value_a5 with list of registers. See ../output/compiled_tlv/alphacore_gen.v:696
Warning: Replacing memory \CPU_Xreg_value_a4 with list of registers. See ../output/compiled_tlv/alphacore_gen.v:695
Warning: Replacing memory \CPU_Dmem_value_a5 with list of registers. See ../output/compiled_tlv/alphacore_gen.v:686
Successfully finished Verilog frontend.

yosys> read_verilog -I./include ./module/clk_gate.v

3. Executing Verilog-2005 frontend: ./module/clk_gate.v
Parsing Verilog input from `./module/clk_gate.v' to AST representation.
Generating RTLIL representation for module `\clk_gate'.
Successfully finished Verilog frontend.

yosys> read_liberty -lib ./lib/avsdpll.lib

4. Executing Liberty frontend: ./lib/avsdpll.lib
Imported 1 cell types from liberty file.

yosys> read_liberty -lib ./lib/avsddac.lib

5. Executing Liberty frontend: ./lib/avsddac.lib
Imported 1 cell types from liberty file.

yosys> read_liberty -lib ./lib/sky130_fd_sc_hd__tt_025C_1v80.lib

6. Executing Liberty frontend: ./lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

yosys> synth -top alphasoc 

7. Executing SYNTH pass.

7.1. Executing HIERARCHY pass (managing design hierarchy).

7.1.1. Analyzing design hierarchy..
Top module:  \alphasoc
Used module:     \alphacore
Used module:         \clk_gate

7.1.2. Analyzing design hierarchy..
Top module:  \alphasoc
Used module:     \alphacore
Used module:         \clk_gate
Removed 0 unused modules.
Mapping positional arguments of cell alphacore.gen_clkP_CPU_rs2_valid_a2 (clk_gate).
Mapping positional arguments of cell alphacore.gen_clkP_CPU_rs1_valid_a2 (clk_gate).
Mapping positional arguments of cell alphacore.gen_clkP_CPU_rd_valid_a5 (clk_gate).
Mapping positional arguments of cell alphacore.gen_clkP_CPU_rd_valid_a4 (clk_gate).
Mapping positional arguments of cell alphacore.gen_clkP_CPU_rd_valid_a3 (clk_gate).
Mapping positional arguments of cell alphacore.gen_clkP_CPU_rd_valid_a2 (clk_gate).
Mapping positional arguments of cell alphacore.gen_clkP_CPU_dmem_rd_en_a5 (clk_gate).

7.2. Executing PROC pass (convert processes to netlists).

7.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$../output/compiled_tlv/alphacore_gen.v:0$661 in module alphacore.
Marked 1 switch rules as full_case in process $proc$../output/compiled_tlv/alphacore_gen.v:0$661 in module alphacore.
Removed 1 dead cases from process $proc$../output/compiled_tlv/alphacore_gen.v:0$658 in module alphacore.
Marked 1 switch rules as full_case in process $proc$../output/compiled_tlv/alphacore_gen.v:0$658 in module alphacore.
Removed 1 dead cases from process $proc$../output/compiled_tlv/alphacore_gen.v:0$655 in module alphacore.
Marked 1 switch rules as full_case in process $proc$../output/compiled_tlv/alphacore_gen.v:0$655 in module alphacore.
Marked 1 switch rules as full_case in process $proc$../output/compiled_tlv/alphacore_gen.v:0$652 in module alphacore.
Removed a total of 3 dead cases.

7.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 298 assignments to connections.

7.2.4. Executing PROC_INIT pass (extract init attributes).

7.2.5. Executing PROC_ARST pass (detect async resets in processes).

7.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~4 debug messages>

7.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$661'.
     1/1: $1$mem2reg_rd$\CPU_Dmem_value_a5$../output/compiled_tlv/alphacore.v:324$4_DATA[31:0]$663
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$658'.
     1/1: $1$mem2reg_rd$\CPU_Xreg_value_a4$../output/compiled_tlv/alphacore.v:306$3_DATA[31:0]$660
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$655'.
     1/1: $1$mem2reg_rd$\CPU_Xreg_value_a4$../output/compiled_tlv/alphacore.v:304$2_DATA[31:0]$657
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$652'.
     1/1: $1$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$654
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$394'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$393'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$392'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$391'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$390'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$389'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$388'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$387'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$386'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$385'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$384'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$383'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$382'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$381'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$380'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$379'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$378'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$377'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$376'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$375'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$374'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$373'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$372'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$371'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$370'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$369'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$368'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$367'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$366'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$365'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$364'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$363'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$362'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$361'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$360'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$359'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$358'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$357'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$356'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$355'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$354'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$353'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$352'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$351'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$350'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$349'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$348'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$347'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$346'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$345'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$344'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$343'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$342'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$341'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$340'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$339'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$338'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$337'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$336'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$335'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$334'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$333'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$332'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$331'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$330'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$329'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$328'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$327'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$326'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$325'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$324'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$323'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$322'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$321'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$320'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$319'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$318'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$317'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$316'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$315'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore.v:246$312'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:678$131'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:677$130'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:674$129'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:673$128'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:670$127'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:669$126'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:666$125'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:663$124'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:662$123'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:659$122'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:656$121'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:653$120'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:650$119'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:647$118'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:644$117'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:641$116'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:640$115'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:639$114'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:638$113'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:635$112'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:634$111'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:633$110'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:630$109'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:629$108'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:628$107'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:627$106'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:624$105'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:623$104'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:622$103'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:619$102'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:616$101'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:615$100'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:612$99'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:611$98'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:608$97'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:607$96'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:606$95'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:605$94'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:602$93'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:601$92'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:598$91'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:597$90'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:594$89'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:593$88'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:590$87'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:589$86'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:586$85'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:585$84'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:582$83'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:581$82'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:578$81'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:577$80'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:574$79'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:573$78'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:570$77'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:569$76'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:566$75'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:565$74'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:562$73'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:561$72'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:558$71'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:557$70'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:556$69'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:555$68'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:552$67'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:551$66'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:550$65'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:549$64'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:546$63'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:545$62'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:544$61'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:541$60'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:540$59'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:537$58'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:536$57'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:533$56'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:532$55'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:529$54'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:528$53'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:525$52'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:524$51'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:521$50'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:520$49'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:517$48'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:516$47'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:513$46'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:512$45'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:511$44'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:510$43'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:507$42'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:506$41'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:505$40'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:504$39'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:501$38'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:500$37'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:499$36'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:498$35'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:495$34'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:494$33'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:493$32'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:492$31'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:489$30'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:488$29'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:487$28'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:486$27'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:483$26'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:482$25'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:481$24'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:480$23'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:477$22'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:476$21'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:473$20'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:472$19'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:469$18'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:468$17'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:465$16'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:464$15'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:461$14'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:460$13'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:457$12'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:456$11'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:453$10'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:452$9'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:449$8'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:446$7'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:443$6'.
Creating decoders for process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:440$5'.

7.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\alphacore.$mem2reg_rd$\CPU_Dmem_value_a5$../output/compiled_tlv/alphacore.v:324$4_DATA' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$661'.
No latch inferred for signal `\alphacore.$mem2reg_rd$\CPU_Xreg_value_a4$../output/compiled_tlv/alphacore.v:306$3_DATA' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$658'.
No latch inferred for signal `\alphacore.$mem2reg_rd$\CPU_Xreg_value_a4$../output/compiled_tlv/alphacore.v:304$2_DATA' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$655'.
No latch inferred for signal `\alphacore.$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$652'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[0]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[1]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[2]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[3]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[4]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[5]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[6]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[7]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[8]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[9]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[10]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[11]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[12]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[13]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[14]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Dmem_value_a4[15]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[0]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[1]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[2]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[3]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[4]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[5]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[6]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[7]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[8]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[9]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[10]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[11]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[12]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[13]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[14]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[15]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[16]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[17]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Imem_instr_a1[18]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[0]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[1]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[2]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[3]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[4]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[5]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[6]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[7]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[8]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[9]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[10]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[11]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[12]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[13]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[14]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[15]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[16]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[17]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[18]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[19]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[20]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[21]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[22]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[23]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[24]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[25]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[26]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[27]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[28]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[29]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[30]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\CPU_Xreg_value_a3[31]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[0]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[1]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[2]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[3]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[4]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[5]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[6]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[7]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[8]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[9]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[10]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[11]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[12]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[13]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[14]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[15]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[16]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[17]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
No latch inferred for signal `\alphacore.\instrs[18]' from process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.

7.2.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[31]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$394'.
  created $dff cell `$procdff$768' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[31]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$393'.
  created $dff cell `$procdff$769' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[30]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$392'.
  created $dff cell `$procdff$770' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[30]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$391'.
  created $dff cell `$procdff$771' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[29]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$390'.
  created $dff cell `$procdff$772' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[29]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$389'.
  created $dff cell `$procdff$773' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[28]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$388'.
  created $dff cell `$procdff$774' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[28]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$387'.
  created $dff cell `$procdff$775' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[27]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$386'.
  created $dff cell `$procdff$776' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[27]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$385'.
  created $dff cell `$procdff$777' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[26]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$384'.
  created $dff cell `$procdff$778' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[26]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$383'.
  created $dff cell `$procdff$779' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[25]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$382'.
  created $dff cell `$procdff$780' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[25]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$381'.
  created $dff cell `$procdff$781' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[24]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$380'.
  created $dff cell `$procdff$782' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[24]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$379'.
  created $dff cell `$procdff$783' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[23]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$378'.
  created $dff cell `$procdff$784' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[23]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$377'.
  created $dff cell `$procdff$785' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[22]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$376'.
  created $dff cell `$procdff$786' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[22]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$375'.
  created $dff cell `$procdff$787' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[21]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$374'.
  created $dff cell `$procdff$788' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[21]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$373'.
  created $dff cell `$procdff$789' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[20]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$372'.
  created $dff cell `$procdff$790' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[20]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$371'.
  created $dff cell `$procdff$791' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[19]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$370'.
  created $dff cell `$procdff$792' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[19]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$369'.
  created $dff cell `$procdff$793' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[18]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$368'.
  created $dff cell `$procdff$794' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[18]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$367'.
  created $dff cell `$procdff$795' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[17]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$366'.
  created $dff cell `$procdff$796' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[17]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$365'.
  created $dff cell `$procdff$797' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[16]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$364'.
  created $dff cell `$procdff$798' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[16]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$363'.
  created $dff cell `$procdff$799' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[15]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$362'.
  created $dff cell `$procdff$800' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[15]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$361'.
  created $dff cell `$procdff$801' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[14]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$360'.
  created $dff cell `$procdff$802' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[14]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$359'.
  created $dff cell `$procdff$803' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[13]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$358'.
  created $dff cell `$procdff$804' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[13]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$357'.
  created $dff cell `$procdff$805' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[12]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$356'.
  created $dff cell `$procdff$806' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[12]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$355'.
  created $dff cell `$procdff$807' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[11]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$354'.
  created $dff cell `$procdff$808' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[11]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$353'.
  created $dff cell `$procdff$809' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[10]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$352'.
  created $dff cell `$procdff$810' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[10]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$351'.
  created $dff cell `$procdff$811' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[9]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$350'.
  created $dff cell `$procdff$812' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[9]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$349'.
  created $dff cell `$procdff$813' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[8]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$348'.
  created $dff cell `$procdff$814' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[8]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$347'.
  created $dff cell `$procdff$815' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[7]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$346'.
  created $dff cell `$procdff$816' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[7]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$345'.
  created $dff cell `$procdff$817' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[6]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$344'.
  created $dff cell `$procdff$818' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[6]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$343'.
  created $dff cell `$procdff$819' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[5]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$342'.
  created $dff cell `$procdff$820' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[5]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$341'.
  created $dff cell `$procdff$821' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[4]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$340'.
  created $dff cell `$procdff$822' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[4]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$339'.
  created $dff cell `$procdff$823' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[3]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$338'.
  created $dff cell `$procdff$824' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[3]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$337'.
  created $dff cell `$procdff$825' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[2]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$336'.
  created $dff cell `$procdff$826' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[2]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$335'.
  created $dff cell `$procdff$827' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[1]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$334'.
  created $dff cell `$procdff$828' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[1]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$333'.
  created $dff cell `$procdff$829' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a5[0]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$332'.
  created $dff cell `$procdff$830' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Xreg_value_a4[0]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$331'.
  created $dff cell `$procdff$831' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[15]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$330'.
  created $dff cell `$procdff$832' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[14]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$329'.
  created $dff cell `$procdff$833' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[13]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$328'.
  created $dff cell `$procdff$834' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[12]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$327'.
  created $dff cell `$procdff$835' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[11]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$326'.
  created $dff cell `$procdff$836' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[10]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$325'.
  created $dff cell `$procdff$837' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[9]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$324'.
  created $dff cell `$procdff$838' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[8]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$323'.
  created $dff cell `$procdff$839' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[7]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$322'.
  created $dff cell `$procdff$840' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[6]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$321'.
  created $dff cell `$procdff$841' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[5]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$320'.
  created $dff cell `$procdff$842' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[4]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$319'.
  created $dff cell `$procdff$843' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[3]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$318'.
  created $dff cell `$procdff$844' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[2]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$317'.
  created $dff cell `$procdff$845' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[1]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$316'.
  created $dff cell `$procdff$846' with positive edge clock.
Creating register for signal `\alphacore.\CPU_Dmem_value_a5[0]' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$315'.
  created $dff cell `$procdff$847' with positive edge clock.
Creating register for signal `\alphacore.\OUT' using process `\alphacore.$proc$../output/compiled_tlv/alphacore.v:246$312'.
  created $dff cell `$procdff$848' with positive edge clock.
Creating register for signal `\alphacore.\CPU_valid_taken_br_a5' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:678$131'.
  created $dff cell `$procdff$849' with positive edge clock.
Creating register for signal `\alphacore.\CPU_valid_taken_br_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:677$130'.
  created $dff cell `$procdff$850' with positive edge clock.
Creating register for signal `\alphacore.\CPU_valid_load_a5' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:674$129'.
  created $dff cell `$procdff$851' with positive edge clock.
Creating register for signal `\alphacore.\CPU_valid_load_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:673$128'.
  created $dff cell `$procdff$852' with positive edge clock.
Creating register for signal `\alphacore.\CPU_valid_jump_a5' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:670$127'.
  created $dff cell `$procdff$853' with positive edge clock.
Creating register for signal `\alphacore.\CPU_valid_jump_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:669$126'.
  created $dff cell `$procdff$854' with positive edge clock.
Creating register for signal `\alphacore.\CPU_valid_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:666$125'.
  created $dff cell `$procdff$855' with positive edge clock.
Creating register for signal `\alphacore.\CPU_src2_value_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:663$124'.
  created $dff cell `$procdff$856' with positive edge clock.
Creating register for signal `\alphacore.\CPU_src2_value_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:662$123'.
  created $dff cell `$procdff$857' with positive edge clock.
Creating register for signal `\alphacore.\CPU_src1_value_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:659$122'.
  created $dff cell `$procdff$858' with positive edge clock.
Creating register for signal `\alphacore.\CPU_rs2_valid_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:656$121'.
  created $dff cell `$procdff$859' with positive edge clock.
Creating register for signal `\alphacore.\CPU_rs2_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:653$120'.
  created $dff cell `$procdff$860' with positive edge clock.
Creating register for signal `\alphacore.\CPU_rs1_valid_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:650$119'.
  created $dff cell `$procdff$861' with positive edge clock.
Creating register for signal `\alphacore.\CPU_rs1_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:647$118'.
  created $dff cell `$procdff$862' with positive edge clock.
Creating register for signal `\alphacore.\CPU_result_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:644$117'.
  created $dff cell `$procdff$863' with positive edge clock.
Creating register for signal `\alphacore.\CPU_reset_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:641$116'.
  created $dff cell `$procdff$864' with positive edge clock.
Creating register for signal `\alphacore.\CPU_reset_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:640$115'.
  created $dff cell `$procdff$865' with positive edge clock.
Creating register for signal `\alphacore.\CPU_reset_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:639$114'.
  created $dff cell `$procdff$866' with positive edge clock.
Creating register for signal `\alphacore.\CPU_reset_a1' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:638$113'.
  created $dff cell `$procdff$867' with positive edge clock.
Creating register for signal `\alphacore.\CPU_rd_valid_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:635$112'.
  created $dff cell `$procdff$868' with positive edge clock.
Creating register for signal `\alphacore.\CPU_rd_valid_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:634$111'.
  created $dff cell `$procdff$869' with positive edge clock.
Creating register for signal `\alphacore.\CPU_rd_valid_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:633$110'.
  created $dff cell `$procdff$870' with positive edge clock.
Creating register for signal `\alphacore.\CPU_rd_a5' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:630$109'.
  created $dff cell `$procdff$871' with positive edge clock.
Creating register for signal `\alphacore.\CPU_rd_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:629$108'.
  created $dff cell `$procdff$872' with positive edge clock.
Creating register for signal `\alphacore.\CPU_rd_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:628$107'.
  created $dff cell `$procdff$873' with positive edge clock.
Creating register for signal `\alphacore.\CPU_rd_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:627$106'.
  created $dff cell `$procdff$874' with positive edge clock.
Creating register for signal `\alphacore.\CPU_pc_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:624$105'.
  created $dff cell `$procdff$875' with positive edge clock.
Creating register for signal `\alphacore.\CPU_pc_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:623$104'.
  created $dff cell `$procdff$876' with positive edge clock.
Creating register for signal `\alphacore.\CPU_pc_a1' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:622$103'.
  created $dff cell `$procdff$877' with positive edge clock.
Creating register for signal `\alphacore.\CPU_jalr_tgt_pc_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:619$102'.
  created $dff cell `$procdff$878' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_xori_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:616$101'.
  created $dff cell `$procdff$879' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_xori_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:615$100'.
  created $dff cell `$procdff$880' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_xor_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:612$99'.
  created $dff cell `$procdff$881' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_xor_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:611$98'.
  created $dff cell `$procdff$882' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sw_a5' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:608$97'.
  created $dff cell `$procdff$883' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sw_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:607$96'.
  created $dff cell `$procdff$884' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sw_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:606$95'.
  created $dff cell `$procdff$885' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sw_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:605$94'.
  created $dff cell `$procdff$886' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sub_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:602$93'.
  created $dff cell `$procdff$887' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sub_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:601$92'.
  created $dff cell `$procdff$888' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_srli_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:598$91'.
  created $dff cell `$procdff$889' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_srli_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:597$90'.
  created $dff cell `$procdff$890' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_srl_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:594$89'.
  created $dff cell `$procdff$891' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_srl_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:593$88'.
  created $dff cell `$procdff$892' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_srai_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:590$87'.
  created $dff cell `$procdff$893' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_srai_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:589$86'.
  created $dff cell `$procdff$894' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sra_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:586$85'.
  created $dff cell `$procdff$895' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sra_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:585$84'.
  created $dff cell `$procdff$896' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sltu_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:582$83'.
  created $dff cell `$procdff$897' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sltu_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:581$82'.
  created $dff cell `$procdff$898' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sltiu_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:578$81'.
  created $dff cell `$procdff$899' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sltiu_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:577$80'.
  created $dff cell `$procdff$900' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_slti_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:574$79'.
  created $dff cell `$procdff$901' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_slti_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:573$78'.
  created $dff cell `$procdff$902' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_slt_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:570$77'.
  created $dff cell `$procdff$903' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_slt_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:569$76'.
  created $dff cell `$procdff$904' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_slli_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:566$75'.
  created $dff cell `$procdff$905' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_slli_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:565$74'.
  created $dff cell `$procdff$906' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sll_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:562$73'.
  created $dff cell `$procdff$907' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sll_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:561$72'.
  created $dff cell `$procdff$908' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sh_a5' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:558$71'.
  created $dff cell `$procdff$909' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sh_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:557$70'.
  created $dff cell `$procdff$910' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sh_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:556$69'.
  created $dff cell `$procdff$911' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sh_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:555$68'.
  created $dff cell `$procdff$912' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sb_a5' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:552$67'.
  created $dff cell `$procdff$913' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sb_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:551$66'.
  created $dff cell `$procdff$914' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sb_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:550$65'.
  created $dff cell `$procdff$915' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_sb_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:549$64'.
  created $dff cell `$procdff$916' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_s_instr_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:546$63'.
  created $dff cell `$procdff$917' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_s_instr_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:545$62'.
  created $dff cell `$procdff$918' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_s_instr_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:544$61'.
  created $dff cell `$procdff$919' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_ori_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:541$60'.
  created $dff cell `$procdff$920' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_ori_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:540$59'.
  created $dff cell `$procdff$921' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_or_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:537$58'.
  created $dff cell `$procdff$922' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_or_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:536$57'.
  created $dff cell `$procdff$923' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_lui_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:533$56'.
  created $dff cell `$procdff$924' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_lui_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:532$55'.
  created $dff cell `$procdff$925' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_load_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:529$54'.
  created $dff cell `$procdff$926' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_load_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:528$53'.
  created $dff cell `$procdff$927' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_jump_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:525$52'.
  created $dff cell `$procdff$928' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_jump_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:524$51'.
  created $dff cell `$procdff$929' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_jalr_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:521$50'.
  created $dff cell `$procdff$930' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_jalr_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:520$49'.
  created $dff cell `$procdff$931' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_jal_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:517$48'.
  created $dff cell `$procdff$932' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_jal_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:516$47'.
  created $dff cell `$procdff$933' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bne_a5' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:513$46'.
  created $dff cell `$procdff$934' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bne_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:512$45'.
  created $dff cell `$procdff$935' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bne_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:511$44'.
  created $dff cell `$procdff$936' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bne_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:510$43'.
  created $dff cell `$procdff$937' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bltu_a5' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:507$42'.
  created $dff cell `$procdff$938' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bltu_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:506$41'.
  created $dff cell `$procdff$939' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bltu_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:505$40'.
  created $dff cell `$procdff$940' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bltu_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:504$39'.
  created $dff cell `$procdff$941' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_blt_a5' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:501$38'.
  created $dff cell `$procdff$942' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_blt_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:500$37'.
  created $dff cell `$procdff$943' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_blt_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:499$36'.
  created $dff cell `$procdff$944' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_blt_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:498$35'.
  created $dff cell `$procdff$945' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bgeu_a5' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:495$34'.
  created $dff cell `$procdff$946' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bgeu_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:494$33'.
  created $dff cell `$procdff$947' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bgeu_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:493$32'.
  created $dff cell `$procdff$948' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bgeu_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:492$31'.
  created $dff cell `$procdff$949' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bge_a5' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:489$30'.
  created $dff cell `$procdff$950' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bge_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:488$29'.
  created $dff cell `$procdff$951' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bge_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:487$28'.
  created $dff cell `$procdff$952' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_bge_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:486$27'.
  created $dff cell `$procdff$953' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_beq_a5' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:483$26'.
  created $dff cell `$procdff$954' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_beq_a4' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:482$25'.
  created $dff cell `$procdff$955' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_beq_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:481$24'.
  created $dff cell `$procdff$956' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_beq_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:480$23'.
  created $dff cell `$procdff$957' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_auipc_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:477$22'.
  created $dff cell `$procdff$958' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_auipc_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:476$21'.
  created $dff cell `$procdff$959' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_andi_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:473$20'.
  created $dff cell `$procdff$960' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_andi_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:472$19'.
  created $dff cell `$procdff$961' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_and_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:469$18'.
  created $dff cell `$procdff$962' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_and_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:468$17'.
  created $dff cell `$procdff$963' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_addi_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:465$16'.
  created $dff cell `$procdff$964' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_addi_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:464$15'.
  created $dff cell `$procdff$965' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_add_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:461$14'.
  created $dff cell `$procdff$966' with positive edge clock.
Creating register for signal `\alphacore.\CPU_is_add_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:460$13'.
  created $dff cell `$procdff$967' with positive edge clock.
Creating register for signal `\alphacore.\CPU_inc_pc_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:457$12'.
  created $dff cell `$procdff$968' with positive edge clock.
Creating register for signal `\alphacore.\CPU_inc_pc_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:456$11'.
  created $dff cell `$procdff$969' with positive edge clock.
Creating register for signal `\alphacore.\CPU_imm_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:453$10'.
  created $dff cell `$procdff$970' with positive edge clock.
Creating register for signal `\alphacore.\CPU_imm_a2' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:452$9'.
  created $dff cell `$procdff$971' with positive edge clock.
Creating register for signal `\alphacore.\CPU_imem_rd_en_a1' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:449$8'.
  created $dff cell `$procdff$972' with positive edge clock.
Creating register for signal `\alphacore.\CPU_imem_rd_addr_a1' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:446$7'.
  created $dff cell `$procdff$973' with positive edge clock.
Creating register for signal `\alphacore.\CPU_dmem_rd_data_a5' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:443$6'.
  created $dff cell `$procdff$974' with positive edge clock.
Creating register for signal `\alphacore.\CPU_br_tgt_pc_a3' using process `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:440$5'.
  created $dff cell `$procdff$975' with positive edge clock.

7.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

7.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$661'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$661'.
Found and cleaned up 1 empty switch in `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$658'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$658'.
Found and cleaned up 1 empty switch in `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$655'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$655'.
Found and cleaned up 1 empty switch in `\alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$652'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$652'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:0$555'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$394'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$393'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$392'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$391'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$390'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$389'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$388'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$387'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$386'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$385'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$384'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$383'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$382'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$381'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$380'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$379'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$378'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$377'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$376'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$375'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$374'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$373'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$372'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$371'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$370'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$369'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$368'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$367'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$366'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$365'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$364'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$363'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$362'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$361'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$360'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$359'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$358'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$357'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$356'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$355'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$354'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$353'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$352'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$351'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$350'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$349'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$348'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$347'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$346'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$345'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$344'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$343'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$342'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$341'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$340'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$339'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$338'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$337'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$336'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$335'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$334'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$333'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:696$332'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:695$331'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$330'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$329'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$328'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$327'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$326'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$325'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$324'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$323'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$322'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$321'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$320'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$319'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$318'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$317'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$316'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:686$315'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore.v:246$312'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:678$131'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:677$130'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:674$129'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:673$128'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:670$127'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:669$126'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:666$125'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:663$124'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:662$123'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:659$122'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:656$121'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:653$120'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:650$119'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:647$118'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:644$117'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:641$116'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:640$115'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:639$114'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:638$113'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:635$112'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:634$111'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:633$110'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:630$109'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:629$108'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:628$107'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:627$106'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:624$105'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:623$104'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:622$103'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:619$102'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:616$101'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:615$100'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:612$99'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:611$98'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:608$97'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:607$96'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:606$95'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:605$94'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:602$93'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:601$92'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:598$91'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:597$90'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:594$89'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:593$88'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:590$87'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:589$86'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:586$85'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:585$84'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:582$83'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:581$82'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:578$81'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:577$80'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:574$79'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:573$78'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:570$77'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:569$76'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:566$75'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:565$74'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:562$73'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:561$72'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:558$71'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:557$70'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:556$69'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:555$68'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:552$67'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:551$66'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:550$65'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:549$64'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:546$63'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:545$62'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:544$61'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:541$60'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:540$59'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:537$58'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:536$57'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:533$56'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:532$55'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:529$54'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:528$53'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:525$52'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:524$51'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:521$50'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:520$49'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:517$48'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:516$47'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:513$46'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:512$45'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:511$44'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:510$43'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:507$42'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:506$41'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:505$40'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:504$39'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:501$38'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:500$37'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:499$36'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:498$35'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:495$34'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:494$33'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:493$32'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:492$31'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:489$30'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:488$29'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:487$28'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:486$27'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:483$26'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:482$25'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:481$24'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:480$23'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:477$22'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:476$21'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:473$20'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:472$19'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:469$18'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:468$17'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:465$16'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:464$15'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:461$14'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:460$13'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:457$12'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:456$11'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:453$10'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:452$9'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:449$8'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:446$7'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:443$6'.
Removing empty process `alphacore.$proc$../output/compiled_tlv/alphacore_gen.v:440$5'.
Cleaned up 4 empty switches.

7.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_gate.
Optimizing module alphacore.
<suppressed ~43 debug messages>
Optimizing module alphasoc.

7.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module clk_gate.
Optimizing module alphacore.
Optimizing module alphasoc.

7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \clk_gate..
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Removed 65 unused cells and 543 unused wires.
<suppressed ~131 debug messages>

7.5. Executing CHECK pass (checking for obvious problems).
Checking module alphacore...
Checking module alphasoc...
Checking module clk_gate...
Found and reported 0 problems.

7.6. Executing OPT pass (performing simple optimizations).

7.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

7.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
<suppressed ~261 debug messages>
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 87 cells.

7.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clk_gate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~58 debug messages>

7.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphacore.
    New ctrl vector for $pmux cell $procmux$748: { $procmux$767_CMP $procmux$766_CMP $procmux$764_CMP $procmux$760_CMP $procmux$756_CMP $auto$opt_reduce.cc:134:opt_pmux$981 $procmux$752_CMP $auto$opt_reduce.cc:134:opt_pmux$979 $auto$opt_reduce.cc:134:opt_pmux$977 $procmux$749_CMP }
  Optimizing cells in module \alphacore.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \clk_gate.
Performed a total of 1 changes.

7.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

7.6.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 5 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 6 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 7 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 8 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 9 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 10 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 11 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 12 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 13 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 14 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 15 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 16 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 17 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 18 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 19 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 20 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 21 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 22 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 23 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 24 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 25 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 26 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 27 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 28 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 29 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 30 on $procdff$973 ($dff) from module alphacore.
Setting constant 0-bit at position 31 on $procdff$973 ($dff) from module alphacore.

7.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..
Removed 0 unused cells and 91 unused wires.
<suppressed ~5 debug messages>

7.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

7.6.9. Rerunning OPT passes. (Maybe there is more to do..)

7.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clk_gate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~58 debug messages>

7.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphacore.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \clk_gate.
Performed a total of 0 changes.

7.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

7.6.13. Executing OPT_DFF pass (perform DFF optimizations).

7.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..

7.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

7.6.16. Finished OPT passes. (There is nothing left to do.)

7.7. Executing FSM pass (extract and optimize FSM).

7.7.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking alphacore.CPU_imm_a2 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking alphacore.CPU_rd_a2 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking alphacore.CPU_rs1_a2 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking alphacore.CPU_rs2_a2 as FSM state register:
    Users of register don't seem to benefit from recoding.

7.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).

7.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).

7.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..

7.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).

7.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

7.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

7.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

7.8. Executing OPT pass (performing simple optimizations).

7.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

7.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

7.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clk_gate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~58 debug messages>

7.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphacore.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \clk_gate.
Performed a total of 0 changes.

7.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

7.8.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$877 ($dff) from module alphacore (D = { $ternary$../output/compiled_tlv/alphacore.v:54$137_Y [31:7] $ternary$../output/compiled_tlv/alphacore.v:54$137_Y [1:0] }, Q = { \CPU_pc_a1 [31:7] \CPU_pc_a1 [1:0] }, rval = 27'000000000000000000000000000).
Adding SRST signal on $procdff$847 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$620_Y, Q = \CPU_Dmem_value_a5[0], rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$985 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[0]).
Adding SRST signal on $procdff$846 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$622_Y, Q = \CPU_Dmem_value_a5[1], rval = 1).
Adding EN signal on $auto$ff.cc:266:slice$987 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[1]).
Adding SRST signal on $procdff$845 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$624_Y, Q = \CPU_Dmem_value_a5[2], rval = 2).
Adding EN signal on $auto$ff.cc:266:slice$989 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[2]).
Adding SRST signal on $procdff$844 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$626_Y, Q = \CPU_Dmem_value_a5[3], rval = 3).
Adding EN signal on $auto$ff.cc:266:slice$991 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[3]).
Adding SRST signal on $procdff$843 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$628_Y, Q = \CPU_Dmem_value_a5[4], rval = 4).
Adding EN signal on $auto$ff.cc:266:slice$993 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[4]).
Adding SRST signal on $procdff$842 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$630_Y, Q = \CPU_Dmem_value_a5[5], rval = 5).
Adding EN signal on $auto$ff.cc:266:slice$995 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[5]).
Adding SRST signal on $procdff$841 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$632_Y, Q = \CPU_Dmem_value_a5[6], rval = 6).
Adding EN signal on $auto$ff.cc:266:slice$997 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[6]).
Adding SRST signal on $procdff$840 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$634_Y, Q = \CPU_Dmem_value_a5[7], rval = 7).
Adding EN signal on $auto$ff.cc:266:slice$999 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[7]).
Adding SRST signal on $procdff$839 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$636_Y, Q = \CPU_Dmem_value_a5[8], rval = 8).
Adding EN signal on $auto$ff.cc:266:slice$1001 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[8]).
Adding SRST signal on $procdff$838 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$638_Y, Q = \CPU_Dmem_value_a5[9], rval = 9).
Adding EN signal on $auto$ff.cc:266:slice$1003 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[9]).
Adding SRST signal on $procdff$837 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$640_Y, Q = \CPU_Dmem_value_a5[10], rval = 10).
Adding EN signal on $auto$ff.cc:266:slice$1005 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[10]).
Adding SRST signal on $procdff$836 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$642_Y, Q = \CPU_Dmem_value_a5[11], rval = 11).
Adding EN signal on $auto$ff.cc:266:slice$1007 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[11]).
Adding SRST signal on $procdff$835 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$644_Y, Q = \CPU_Dmem_value_a5[12], rval = 12).
Adding EN signal on $auto$ff.cc:266:slice$1009 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[12]).
Adding SRST signal on $procdff$834 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$646_Y, Q = \CPU_Dmem_value_a5[13], rval = 13).
Adding EN signal on $auto$ff.cc:266:slice$1011 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[13]).
Adding SRST signal on $procdff$833 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$648_Y, Q = \CPU_Dmem_value_a5[14], rval = 14).
Adding EN signal on $auto$ff.cc:266:slice$1013 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[14]).
Adding SRST signal on $procdff$832 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:319$650_Y, Q = \CPU_Dmem_value_a5[15], rval = 15).
Adding EN signal on $auto$ff.cc:266:slice$1015 ($sdff) from module alphacore (D = \CPU_src2_value_a4, Q = \CPU_Dmem_value_a5[15]).
Adding SRST signal on $procdff$831 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$556_Y, Q = \CPU_Xreg_value_a4[0], rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$1017 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[0]).
Adding SRST signal on $procdff$829 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$558_Y, Q = \CPU_Xreg_value_a4[1], rval = 1).
Adding EN signal on $auto$ff.cc:266:slice$1019 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[1]).
Adding SRST signal on $procdff$827 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$560_Y, Q = \CPU_Xreg_value_a4[2], rval = 2).
Adding EN signal on $auto$ff.cc:266:slice$1021 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[2]).
Adding SRST signal on $procdff$825 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$562_Y, Q = \CPU_Xreg_value_a4[3], rval = 3).
Adding EN signal on $auto$ff.cc:266:slice$1023 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[3]).
Adding SRST signal on $procdff$823 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$564_Y, Q = \CPU_Xreg_value_a4[4], rval = 4).
Adding EN signal on $auto$ff.cc:266:slice$1025 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[4]).
Adding SRST signal on $procdff$821 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$566_Y, Q = \CPU_Xreg_value_a4[5], rval = 5).
Adding EN signal on $auto$ff.cc:266:slice$1027 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[5]).
Adding SRST signal on $procdff$819 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$568_Y, Q = \CPU_Xreg_value_a4[6], rval = 6).
Adding EN signal on $auto$ff.cc:266:slice$1029 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[6]).
Adding SRST signal on $procdff$817 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$570_Y, Q = \CPU_Xreg_value_a4[7], rval = 7).
Adding EN signal on $auto$ff.cc:266:slice$1031 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[7]).
Adding SRST signal on $procdff$815 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$572_Y, Q = \CPU_Xreg_value_a4[8], rval = 8).
Adding EN signal on $auto$ff.cc:266:slice$1033 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[8]).
Adding SRST signal on $procdff$813 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$574_Y, Q = \CPU_Xreg_value_a4[9], rval = 9).
Adding EN signal on $auto$ff.cc:266:slice$1035 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[9]).
Adding SRST signal on $procdff$811 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$576_Y, Q = \CPU_Xreg_value_a4[10], rval = 10).
Adding EN signal on $auto$ff.cc:266:slice$1037 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[10]).
Adding SRST signal on $procdff$809 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$578_Y, Q = \CPU_Xreg_value_a4[11], rval = 11).
Adding EN signal on $auto$ff.cc:266:slice$1039 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[11]).
Adding SRST signal on $procdff$807 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$580_Y, Q = \CPU_Xreg_value_a4[12], rval = 12).
Adding EN signal on $auto$ff.cc:266:slice$1041 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[12]).
Adding SRST signal on $procdff$805 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$582_Y, Q = \CPU_Xreg_value_a4[13], rval = 13).
Adding EN signal on $auto$ff.cc:266:slice$1043 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[13]).
Adding SRST signal on $procdff$803 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$584_Y, Q = \CPU_Xreg_value_a4[14], rval = 14).
Adding EN signal on $auto$ff.cc:266:slice$1045 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[14]).
Adding SRST signal on $procdff$801 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$586_Y, Q = \CPU_Xreg_value_a4[15], rval = 15).
Adding EN signal on $auto$ff.cc:266:slice$1047 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[15]).
Adding SRST signal on $procdff$799 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$588_Y, Q = \CPU_Xreg_value_a4[16], rval = 16).
Adding EN signal on $auto$ff.cc:266:slice$1049 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[16]).
Adding SRST signal on $procdff$797 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$590_Y, Q = \CPU_Xreg_value_a4[17], rval = 17).
Adding EN signal on $auto$ff.cc:266:slice$1051 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[17]).
Adding SRST signal on $procdff$795 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$592_Y, Q = \CPU_Xreg_value_a4[18], rval = 18).
Adding EN signal on $auto$ff.cc:266:slice$1053 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[18]).
Adding SRST signal on $procdff$793 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$594_Y, Q = \CPU_Xreg_value_a4[19], rval = 19).
Adding EN signal on $auto$ff.cc:266:slice$1055 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[19]).
Adding SRST signal on $procdff$791 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$596_Y, Q = \CPU_Xreg_value_a4[20], rval = 20).
Adding EN signal on $auto$ff.cc:266:slice$1057 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[20]).
Adding SRST signal on $procdff$789 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$598_Y, Q = \CPU_Xreg_value_a4[21], rval = 21).
Adding EN signal on $auto$ff.cc:266:slice$1059 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[21]).
Adding SRST signal on $procdff$787 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$600_Y, Q = \CPU_Xreg_value_a4[22], rval = 22).
Adding EN signal on $auto$ff.cc:266:slice$1061 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[22]).
Adding SRST signal on $procdff$785 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$602_Y, Q = \CPU_Xreg_value_a4[23], rval = 23).
Adding EN signal on $auto$ff.cc:266:slice$1063 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[23]).
Adding SRST signal on $procdff$783 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$604_Y, Q = \CPU_Xreg_value_a4[24], rval = 24).
Adding EN signal on $auto$ff.cc:266:slice$1065 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[24]).
Adding SRST signal on $procdff$781 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$606_Y, Q = \CPU_Xreg_value_a4[25], rval = 25).
Adding EN signal on $auto$ff.cc:266:slice$1067 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[25]).
Adding SRST signal on $procdff$779 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$608_Y, Q = \CPU_Xreg_value_a4[26], rval = 26).
Adding EN signal on $auto$ff.cc:266:slice$1069 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[26]).
Adding SRST signal on $procdff$777 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$610_Y, Q = \CPU_Xreg_value_a4[27], rval = 27).
Adding EN signal on $auto$ff.cc:266:slice$1071 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[27]).
Adding SRST signal on $procdff$775 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$612_Y, Q = \CPU_Xreg_value_a4[28], rval = 28).
Adding EN signal on $auto$ff.cc:266:slice$1073 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[28]).
Adding SRST signal on $procdff$773 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$614_Y, Q = \CPU_Xreg_value_a4[29], rval = 29).
Adding EN signal on $auto$ff.cc:266:slice$1075 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[29]).
Adding SRST signal on $procdff$771 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$616_Y, Q = \CPU_Xreg_value_a4[30], rval = 30).
Adding EN signal on $auto$ff.cc:266:slice$1077 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[30]).
Adding SRST signal on $procdff$769 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:299$618_Y, Q = \CPU_Xreg_value_a4[31], rval = 31).
Adding EN signal on $auto$ff.cc:266:slice$1079 ($sdff) from module alphacore (D = \CPU_rf_wr_data_a3, Q = \CPU_Xreg_value_a4[31]).

7.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..
Removed 96 unused cells and 96 unused wires.
<suppressed ~145 debug messages>

7.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

7.8.9. Rerunning OPT passes. (Maybe there is more to do..)

7.8.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clk_gate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

7.8.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphacore.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \clk_gate.
Performed a total of 0 changes.

7.8.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
<suppressed ~3 debug messages>
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 1 cells.

7.8.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$982 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:54$137_Y [6:2], Q = \CPU_imem_rd_addr_a1 [4:0], rval = 5'00000).

7.8.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

7.8.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

7.8.16. Rerunning OPT passes. (Maybe there is more to do..)

7.8.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clk_gate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

7.8.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphacore.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \clk_gate.
Performed a total of 0 changes.

7.8.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

7.8.20. Executing OPT_DFF pass (perform DFF optimizations).

7.8.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..

7.8.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

7.8.23. Finished OPT passes. (There is nothing left to do.)

7.9. Executing WREDUCE pass (reducing word size of cells).
Removed top 29 bits (of 32) from port B of cell alphacore.$add$../output/compiled_tlv/alphacore.v:64$140 ($add).
Removed top 4 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:67$142 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:68$144 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:69$146 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:71$150 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:73$153 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:74$155 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:76$158 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:78$161 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:79$162 ($eq).
Removed top 3 bits (of 10) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:110$181 ($eq).
Removed top 2 bits (of 10) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:111$182 ($eq).
Removed top 5 bits (of 11) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:118$187 ($eq).
Removed top 5 bits (of 10) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:119$188 ($eq).
Removed top 1 bits (of 11) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:120$189 ($eq).
Removed top 1 bits (of 11) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:122$191 ($eq).
Removed top 1 bits (of 11) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:124$193 ($eq).
Removed top 1 bits (of 10) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:127$196 ($eq).
Removed top 1 bits (of 10) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:128$197 ($eq).
Removed top 3 bits (of 11) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:129$198 ($eq).
Removed top 1 bits (of 11) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:130$199 ($eq).
Removed top 3 bits (of 11) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:132$201 ($eq).
Removed top 2 bits (of 11) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:133$202 ($eq).
Removed top 2 bits (of 11) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:134$203 ($eq).
Removed top 1 bits (of 11) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:135$204 ($eq).
Removed top 5 bits (of 7) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:139$206 ($eq).
Removed top 1 bits (of 7) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:147$210 ($eq).
Removed top 2 bits (of 7) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:148$211 ($eq).
Removed top 3 bits (of 10) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:150$213 ($eq).
Removed top 31 bits (of 64) from port Y of cell alphacore.$add$../output/compiled_tlv/alphacore.v:180$225 ($add).
Removed top 31 bits (of 64) from port Y of cell alphacore.$add$../output/compiled_tlv/alphacore.v:181$226 ($add).
Removed top 32 bits (of 64) from port Y of cell alphacore.$or$../output/compiled_tlv/alphacore.v:182$227 ($or).
Removed top 32 bits (of 64) from port Y of cell alphacore.$or$../output/compiled_tlv/alphacore.v:183$228 ($or).
Removed top 32 bits (of 64) from port Y of cell alphacore.$xor$../output/compiled_tlv/alphacore.v:184$229 ($xor).
Removed top 32 bits (of 64) from port Y of cell alphacore.$xor$../output/compiled_tlv/alphacore.v:185$230 ($xor).
Removed top 32 bits (of 64) from port Y of cell alphacore.$and$../output/compiled_tlv/alphacore.v:186$231 ($and).
Removed top 32 bits (of 64) from port Y of cell alphacore.$and$../output/compiled_tlv/alphacore.v:187$232 ($and).
Removed top 31 bits (of 64) from port Y of cell alphacore.$sub$../output/compiled_tlv/alphacore.v:188$233 ($sub).
Removed top 63 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:189$236 ($mux).
Removed top 63 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:195$243 ($mux).
Removed top 31 bits (of 64) from port Y of cell alphacore.$add$../output/compiled_tlv/alphacore.v:200$246 ($add).
Removed top 29 bits (of 32) from port B of cell alphacore.$add$../output/compiled_tlv/alphacore.v:201$247 ($add).
Removed top 31 bits (of 64) from port Y of cell alphacore.$add$../output/compiled_tlv/alphacore.v:201$247 ($add).
Removed top 31 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:203$252 ($mux).
Removed top 31 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:202$253 ($mux).
Removed top 31 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:201$254 ($mux).
Removed top 31 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:200$255 ($mux).
Removed top 31 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:199$256 ($mux).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:180$277 ($mux).
Removed top 27 bits (of 32) from port A of cell alphacore.$lt$../output/compiled_tlv/alphacore.v:286$313 ($lt).
Removed top 27 bits (of 32) from port B of cell alphacore.$lt$../output/compiled_tlv/alphacore.v:286$313 ($lt).
Removed top 4 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:297$401 ($eq).
Removed top 3 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:297$405 ($eq).
Removed top 3 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:297$409 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:297$413 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:297$417 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:297$421 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:297$425 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:297$429 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:297$433 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:297$437 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:297$441 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:297$445 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:297$449 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:297$453 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:297$457 ($eq).
Removed top 3 bits (of 4) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:317$525 ($eq).
Removed top 2 bits (of 4) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:317$527 ($eq).
Removed top 2 bits (of 4) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:317$529 ($eq).
Removed top 1 bits (of 4) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:317$531 ($eq).
Removed top 1 bits (of 4) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:317$533 ($eq).
Removed top 1 bits (of 4) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:317$535 ($eq).
Removed top 1 bits (of 4) from port B of cell alphacore.$eq$../output/compiled_tlv/alphacore.v:317$537 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$698_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$699_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$700_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$701_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$702_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$703_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$704_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$705_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$procmux$706_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$procmux$707_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$procmux$708_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$procmux$709_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell alphacore.$procmux$710_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell alphacore.$procmux$711_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell alphacore.$procmux$712_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$731_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$732_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$733_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$734_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$735_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$736_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$737_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$738_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$procmux$739_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$procmux$740_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$procmux$741_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$procmux$742_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell alphacore.$procmux$743_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell alphacore.$procmux$744_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell alphacore.$procmux$745_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$752_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$753_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$754_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$755_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$756_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$757_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$758_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell alphacore.$procmux$759_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$procmux$760_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$procmux$761_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$procmux$762_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell alphacore.$procmux$763_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell alphacore.$procmux$764_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell alphacore.$procmux$765_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell alphacore.$procmux$766_CMP0 ($eq).
Removed top 22 bits (of 32) from FF cell alphacore.$procdff$796 ($dff).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:181$276 ($mux).
Removed top 1 bits (of 33) from port Y of cell alphacore.$add$../output/compiled_tlv/alphacore.v:181$226 ($add).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:182$275 ($mux).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:183$274 ($mux).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:184$273 ($mux).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:185$272 ($mux).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:186$271 ($mux).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:187$270 ($mux).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:188$269 ($mux).
Removed top 1 bits (of 33) from port Y of cell alphacore.$sub$../output/compiled_tlv/alphacore.v:188$233 ($sub).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:189$268 ($mux).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:190$267 ($mux).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:191$265 ($mux).
Removed top 32 bits (of 64) from port Y of cell alphacore.$shl$../output/compiled_tlv/alphacore.v:191$237 ($shl).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:192$264 ($mux).
Removed top 32 bits (of 64) from port Y of cell alphacore.$shr$../output/compiled_tlv/alphacore.v:192$238 ($shr).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:193$263 ($mux).
Removed top 32 bits (of 64) from port Y of cell alphacore.$shr$../output/compiled_tlv/alphacore.v:193$239 ($shr).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:194$262 ($mux).
Removed top 32 bits (of 64) from port Y of cell alphacore.$shl$../output/compiled_tlv/alphacore.v:194$240 ($shl).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:195$261 ($mux).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:196$260 ($mux).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:197$258 ($mux).
Removed top 32 bits (of 64) from port Y of cell alphacore.$shr$../output/compiled_tlv/alphacore.v:197$244 ($shr).
Removed top 32 bits (of 64) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:198$257 ($mux).
Removed top 32 bits (of 64) from port Y of cell alphacore.$shr$../output/compiled_tlv/alphacore.v:198$245 ($shr).
Removed top 1 bits (of 33) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:199$256 ($mux).
Removed top 1 bits (of 33) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:200$255 ($mux).
Removed top 1 bits (of 33) from port Y of cell alphacore.$add$../output/compiled_tlv/alphacore.v:200$246 ($add).
Removed top 1 bits (of 33) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:201$254 ($mux).
Removed top 1 bits (of 33) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:202$253 ($mux).
Removed top 1 bits (of 33) from port Y of cell alphacore.$add$../output/compiled_tlv/alphacore.v:201$247 ($add).
Removed top 1 bits (of 33) from mux cell alphacore.$ternary$../output/compiled_tlv/alphacore.v:203$252 ($mux).
Removed top 1 bits (of 33) from port Y of cell alphacore.$add$../output/compiled_tlv/alphacore.v:180$225 ($add).
Removed top 32 bits (of 64) from wire alphacore.$add$../output/compiled_tlv/alphacore.v:180$225_Y.
Removed top 32 bits (of 64) from wire alphacore.$add$../output/compiled_tlv/alphacore.v:181$226_Y.
Removed top 32 bits (of 64) from wire alphacore.$add$../output/compiled_tlv/alphacore.v:200$246_Y.
Removed top 32 bits (of 64) from wire alphacore.$and$../output/compiled_tlv/alphacore.v:186$231_Y.
Removed top 32 bits (of 64) from wire alphacore.$and$../output/compiled_tlv/alphacore.v:187$232_Y.
Removed top 32 bits (of 64) from wire alphacore.$or$../output/compiled_tlv/alphacore.v:182$227_Y.
Removed top 7 bits (of 32) from wire alphacore.$ternary$../output/compiled_tlv/alphacore.v:83$168_Y.
Removed top 22 bits (of 32) from wire alphacore.CPU_Xreg_value_a5[17].
Removed top 27 bits (of 32) from wire alphacore.CPU_imem_rd_addr_a1.

7.10. Executing PEEPOPT pass (run peephole optimizers).

7.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

7.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module alphacore:
  creating $macc model for $add$../output/compiled_tlv/alphacore.v:165$215 ($add).
  creating $macc model for $add$../output/compiled_tlv/alphacore.v:168$216 ($add).
  creating $macc model for $add$../output/compiled_tlv/alphacore.v:180$225 ($add).
  creating $macc model for $add$../output/compiled_tlv/alphacore.v:181$226 ($add).
  creating $macc model for $add$../output/compiled_tlv/alphacore.v:200$246 ($add).
  creating $macc model for $add$../output/compiled_tlv/alphacore.v:201$247 ($add).
  creating $macc model for $add$../output/compiled_tlv/alphacore.v:64$140 ($add).
  creating $macc model for $sub$../output/compiled_tlv/alphacore.v:188$233 ($sub).
  creating $alu model for $macc $sub$../output/compiled_tlv/alphacore.v:188$233.
  creating $alu model for $macc $add$../output/compiled_tlv/alphacore.v:64$140.
  creating $alu model for $macc $add$../output/compiled_tlv/alphacore.v:201$247.
  creating $alu model for $macc $add$../output/compiled_tlv/alphacore.v:200$246.
  creating $alu model for $macc $add$../output/compiled_tlv/alphacore.v:181$226.
  creating $alu model for $macc $add$../output/compiled_tlv/alphacore.v:180$225.
  creating $alu model for $macc $add$../output/compiled_tlv/alphacore.v:168$216.
  creating $alu model for $macc $add$../output/compiled_tlv/alphacore.v:165$215.
  creating $alu model for $ge$../output/compiled_tlv/alphacore.v:216$291 ($ge): merged with $sub$../output/compiled_tlv/alphacore.v:188$233.
  creating $alu model for $lt$../output/compiled_tlv/alphacore.v:177$223 ($lt): merged with $sub$../output/compiled_tlv/alphacore.v:188$233.
  creating $alu model for $lt$../output/compiled_tlv/alphacore.v:178$224 ($lt): new $alu
  creating $alu model for $lt$../output/compiled_tlv/alphacore.v:286$313 ($lt): new $alu
  creating $alu model for $eq$../output/compiled_tlv/alphacore.v:213$286 ($eq): merged with $sub$../output/compiled_tlv/alphacore.v:188$233.
  creating $alu model for $ne$../output/compiled_tlv/alphacore.v:214$287 ($ne): merged with $sub$../output/compiled_tlv/alphacore.v:188$233.
  creating $alu cell for $lt$../output/compiled_tlv/alphacore.v:286$313: $auto$alumacc.cc:485:replace_alu$1093
  creating $alu cell for $add$../output/compiled_tlv/alphacore.v:165$215: $auto$alumacc.cc:485:replace_alu$1104
  creating $alu cell for $add$../output/compiled_tlv/alphacore.v:168$216: $auto$alumacc.cc:485:replace_alu$1107
  creating $alu cell for $lt$../output/compiled_tlv/alphacore.v:178$224: $auto$alumacc.cc:485:replace_alu$1110
  creating $alu cell for $add$../output/compiled_tlv/alphacore.v:180$225: $auto$alumacc.cc:485:replace_alu$1115
  creating $alu cell for $add$../output/compiled_tlv/alphacore.v:200$246: $auto$alumacc.cc:485:replace_alu$1118
  creating $alu cell for $add$../output/compiled_tlv/alphacore.v:201$247: $auto$alumacc.cc:485:replace_alu$1121
  creating $alu cell for $add$../output/compiled_tlv/alphacore.v:64$140: $auto$alumacc.cc:485:replace_alu$1124
  creating $alu cell for $add$../output/compiled_tlv/alphacore.v:181$226: $auto$alumacc.cc:485:replace_alu$1127
  creating $alu cell for $sub$../output/compiled_tlv/alphacore.v:188$233, $ge$../output/compiled_tlv/alphacore.v:216$291, $lt$../output/compiled_tlv/alphacore.v:177$223, $eq$../output/compiled_tlv/alphacore.v:213$286, $ne$../output/compiled_tlv/alphacore.v:214$287: $auto$alumacc.cc:485:replace_alu$1130
  created 10 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module alphasoc:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module clk_gate:
  created 0 $alu and 0 $macc cells.

7.13. Executing SHARE pass (SAT-based resource sharing).
Found 6 cells in module alphacore that may be considered for resource sharing.
  Analyzing resource sharing options for $shr$../output/compiled_tlv/alphacore.v:198$245 ($shr):
    Found 1 activation_patterns using ctrl signal { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srl_a3 \CPU_is_srai_a3 \CPU_is_sra_a3 \CPU_is_sltu_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slt_a3 \CPU_is_slli_a3 \CPU_is_sll_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 }.
    Found 3 candidates: $shr$../output/compiled_tlv/alphacore.v:197$244 $shr$../output/compiled_tlv/alphacore.v:193$239 $shr$../output/compiled_tlv/alphacore.v:192$238
    Analyzing resource sharing with $shr$../output/compiled_tlv/alphacore.v:197$244 ($shr):
      Found 1 activation_patterns using ctrl signal { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srl_a3 \CPU_is_srai_a3 \CPU_is_sltu_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slt_a3 \CPU_is_slli_a3 \CPU_is_sll_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 }.
      Activation pattern for cell $shr$../output/compiled_tlv/alphacore.v:198$245: { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srl_a3 \CPU_is_srai_a3 \CPU_is_sra_a3 \CPU_is_sltu_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slt_a3 \CPU_is_slli_a3 \CPU_is_sll_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 } = 19'0000001000000000000
      Activation pattern for cell $shr$../output/compiled_tlv/alphacore.v:197$244: { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srl_a3 \CPU_is_srai_a3 \CPU_is_sltu_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slt_a3 \CPU_is_slli_a3 \CPU_is_sll_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 } = 18'000010000000000000
      Size of SAT problem: 0 cells, 100 variables, 291 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $shr$../output/compiled_tlv/alphacore.v:197$244: $auto$share.cc:977:make_cell_activation_logic$1145
      New cell: $auto$share.cc:667:make_supercell$1152 ($shr)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$1152 ($shr):
    Found 2 activation_patterns using ctrl signal { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srl_a3 \CPU_is_srai_a3 \CPU_is_sra_a3 \CPU_is_sltu_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slt_a3 \CPU_is_slli_a3 \CPU_is_sll_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 }.
    Found 2 candidates: $shr$../output/compiled_tlv/alphacore.v:193$239 $shr$../output/compiled_tlv/alphacore.v:192$238
    Analyzing resource sharing with $shr$../output/compiled_tlv/alphacore.v:193$239 ($shr):
      Found 1 activation_patterns using ctrl signal { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srai_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slli_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 }.
      Activation pattern for cell $auto$share.cc:667:make_supercell$1152: { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srl_a3 \CPU_is_srai_a3 \CPU_is_sra_a3 \CPU_is_sltu_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slt_a3 \CPU_is_slli_a3 \CPU_is_sll_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 } = 19'0000001000000000000
      Activation pattern for cell $auto$share.cc:667:make_supercell$1152: { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srl_a3 \CPU_is_srai_a3 \CPU_is_sltu_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slt_a3 \CPU_is_slli_a3 \CPU_is_sll_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 } = 18'000010000000000000
      Activation pattern for cell $shr$../output/compiled_tlv/alphacore.v:193$239: { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srai_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slli_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 } = 14'00001000000000
      Size of SAT problem: 0 cells, 103 variables, 328 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $shr$../output/compiled_tlv/alphacore.v:193$239: $auto$share.cc:977:make_cell_activation_logic$1155
      New cell: $auto$share.cc:667:make_supercell$1162 ($shr)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$1162 ($shr):
    Found 3 activation_patterns using ctrl signal { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srl_a3 \CPU_is_srai_a3 \CPU_is_sra_a3 \CPU_is_sltu_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slt_a3 \CPU_is_slli_a3 \CPU_is_sll_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 }.
    Found 1 candidates: $shr$../output/compiled_tlv/alphacore.v:192$238
    Analyzing resource sharing with $shr$../output/compiled_tlv/alphacore.v:192$238 ($shr):
      Found 1 activation_patterns using ctrl signal { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slli_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 }.
      Activation pattern for cell $auto$share.cc:667:make_supercell$1162: { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srl_a3 \CPU_is_srai_a3 \CPU_is_sra_a3 \CPU_is_sltu_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slt_a3 \CPU_is_slli_a3 \CPU_is_sll_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 } = 19'0000001000000000000
      Activation pattern for cell $auto$share.cc:667:make_supercell$1162: { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srl_a3 \CPU_is_srai_a3 \CPU_is_sltu_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slt_a3 \CPU_is_slli_a3 \CPU_is_sll_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 } = 18'000010000000000000
      Activation pattern for cell $auto$share.cc:667:make_supercell$1162: { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srai_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slli_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 } = 14'00001000000000
      Activation pattern for cell $shr$../output/compiled_tlv/alphacore.v:192$238: { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slli_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 } = 13'0001000000000
      Size of SAT problem: 0 cells, 95 variables, 329 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $shr$../output/compiled_tlv/alphacore.v:192$238: $auto$share.cc:977:make_cell_activation_logic$1165
      New cell: $auto$share.cc:667:make_supercell$1172 ($shr)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$1172 ($shr):
    Found 4 activation_patterns using ctrl signal { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srl_a3 \CPU_is_srai_a3 \CPU_is_sra_a3 \CPU_is_sltu_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slt_a3 \CPU_is_slli_a3 \CPU_is_sll_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 }.
    No candidates found.
  Analyzing resource sharing options for $shl$../output/compiled_tlv/alphacore.v:194$240 ($shl):
    Found 1 activation_patterns using ctrl signal { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srai_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slli_a3 \CPU_is_sll_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 }.
    Found 1 candidates: $shl$../output/compiled_tlv/alphacore.v:191$237
    Analyzing resource sharing with $shl$../output/compiled_tlv/alphacore.v:191$237 ($shl):
      Found 1 activation_patterns using ctrl signal { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slli_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 }.
      Activation pattern for cell $shl$../output/compiled_tlv/alphacore.v:194$240: { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srai_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slli_a3 \CPU_is_sll_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 } = 15'000000001000000
      Activation pattern for cell $shl$../output/compiled_tlv/alphacore.v:191$237: { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slli_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 } = 12'000001000000
      Size of SAT problem: 0 cells, 78 variables, 223 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $shl$../output/compiled_tlv/alphacore.v:191$237: $auto$share.cc:977:make_cell_activation_logic$1175
      New cell: $auto$share.cc:667:make_supercell$1182 ($shl)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$1182 ($shl):
    Found 2 activation_patterns using ctrl signal { \CPU_is_xori_a3 \CPU_is_xor_a3 \CPU_is_sub_a3 \CPU_is_srli_a3 \CPU_is_srai_a3 \CPU_is_sltiu_a3 \CPU_is_slti_a3 \CPU_is_slli_a3 \CPU_is_sll_a3 \CPU_is_ori_a3 \CPU_is_or_a3 \CPU_is_andi_a3 \CPU_is_and_a3 \CPU_is_addi_a3 \CPU_is_add_a3 }.
    No candidates found.
Removing 8 cells in module alphacore:
  Removing cell $shl$../output/compiled_tlv/alphacore.v:191$237 ($shl).
  Removing cell $shl$../output/compiled_tlv/alphacore.v:194$240 ($shl).
  Removing cell $shr$../output/compiled_tlv/alphacore.v:192$238 ($shr).
  Removing cell $auto$share.cc:667:make_supercell$1162 ($shr).
  Removing cell $shr$../output/compiled_tlv/alphacore.v:193$239 ($shr).
  Removing cell $auto$share.cc:667:make_supercell$1152 ($shr).
  Removing cell $shr$../output/compiled_tlv/alphacore.v:197$244 ($shr).
  Removing cell $shr$../output/compiled_tlv/alphacore.v:198$245 ($shr).

7.14. Executing OPT pass (performing simple optimizations).

7.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
<suppressed ~2 debug messages>
Optimizing module alphasoc.
Optimizing module clk_gate.

7.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
<suppressed ~12 debug messages>
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 4 cells.

7.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clk_gate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

7.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphacore.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \clk_gate.
Performed a total of 0 changes.

7.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

7.14.6. Executing OPT_DFF pass (perform DFF optimizations).

7.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..
Removed 1 unused cells and 16 unused wires.
<suppressed ~6 debug messages>

7.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

7.14.9. Rerunning OPT passes. (Maybe there is more to do..)

7.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clk_gate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

7.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphacore.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \clk_gate.
Performed a total of 0 changes.

7.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

7.14.13. Executing OPT_DFF pass (perform DFF optimizations).

7.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..

7.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

7.14.16. Finished OPT passes. (There is nothing left to do.)

7.15. Executing MEMORY pass.

7.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

7.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

7.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

7.15.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

7.15.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

7.15.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..

7.15.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.15.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

7.15.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..

7.15.10. Executing MEMORY_COLLECT pass (generating $mem cells).

7.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..

7.17. Executing OPT pass (performing simple optimizations).

7.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
<suppressed ~40 debug messages>
Optimizing module alphasoc.
Optimizing module clk_gate.

7.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

7.17.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$983 ($sdff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:54$137_Y [1:0], Q = \CPU_pc_a1 [1:0]).

7.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..
Removed 6 unused cells and 7 unused wires.
<suppressed ~7 debug messages>

7.17.5. Rerunning OPT passes. (Removed registers in this run.)

7.17.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
<suppressed ~1 debug messages>
Optimizing module alphasoc.
Optimizing module clk_gate.

7.17.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

7.17.8. Executing OPT_DFF pass (perform DFF optimizations).

7.17.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..

7.17.10. Finished fast OPT passes.

7.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

7.19. Executing OPT pass (performing simple optimizations).

7.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

7.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

7.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clk_gate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

7.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphacore.
    Consolidated identical input bits for $mux cell $auto$share.cc:660:make_supercell$1149:
      Old ports: A={ \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 }, B={ 32'00000000000000000000000000000000 \CPU_src1_value_a3 }, Y=$auto$share.cc:657:make_supercell$1147
      New ports: A=\CPU_src1_value_a3 [31], B=1'0, Y=$auto$share.cc:657:make_supercell$1147 [32]
      New connections: { $auto$share.cc:657:make_supercell$1147 [63:33] $auto$share.cc:657:make_supercell$1147 [31:0] } = { $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] $auto$share.cc:657:make_supercell$1147 [32] \CPU_src1_value_a3 }
    Consolidated identical input bits for $mux cell $auto$share.cc:661:make_supercell$1150:
      Old ports: A={ 1'0 \CPU_src2_value_a3 [4:0] }, B=\CPU_src2_value_a3 [5:0], Y=$auto$share.cc:658:make_supercell$1148
      New ports: A=1'0, B=\CPU_src2_value_a3 [5], Y=$auto$share.cc:658:make_supercell$1148 [5]
      New connections: $auto$share.cc:658:make_supercell$1148 [4:0] = \CPU_src2_value_a3 [4:0]
    Consolidated identical input bits for $pmux cell $procmux$748:
      Old ports: A=305418935, B=288'000011111111010100000101000100110000000110001110000111100001001100000000100011100001111000010011000000001000111001011110000100110000000010100010111111100011001100000001100011100101111000010011000000011100010000000100001100110000000010000101000101010001001100000000100000000010100000100011, Y=$0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653
      New ports: A=20'00001101001010010111, B=180'111111010000001010100110001110001111001000100011100011110010001000111010111100100010100011111111011001100011101011110010011100010000001001100010000100001010101000100000000101000100, Y={ $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [26] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [24:17] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [15:8] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [5:4] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [2] }
      New connections: { $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [31:27] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [25] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [16] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [7:6] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [3] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [1:0] } = { 3'000 $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [2] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [26] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [20] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [8] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [2] 4'0011 }
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:86$165:
      Old ports: A=0, B={ \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [19:12] \CPU_instr_a1 [20] \CPU_instr_a1 [30:21] 1'0 }, Y=$ternary$../output/compiled_tlv/alphacore.v:86$165_Y
      New ports: A=20'00000000000000000000, B={ \CPU_instr_a1 [31] \CPU_instr_a1 [19:12] \CPU_instr_a1 [20] \CPU_instr_a1 [30:21] }, Y=$ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20:1]
      New connections: { $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [31:21] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [0] } = { $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] 1'0 }
  Optimizing cells in module \alphacore.
    Consolidated identical input bits for $mux cell $auto$share.cc:660:make_supercell$1159:
      Old ports: A=$auto$share.cc:657:make_supercell$1147, B={ \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 [31] \CPU_src1_value_a3 }, Y=$auto$share.cc:657:make_supercell$1157
      New ports: A=$auto$share.cc:657:make_supercell$1147 [32], B=\CPU_src1_value_a3 [31], Y=$auto$share.cc:657:make_supercell$1157 [32]
      New connections: { $auto$share.cc:657:make_supercell$1157 [63:33] $auto$share.cc:657:make_supercell$1157 [31:0] } = { $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] $auto$share.cc:657:make_supercell$1157 [32] \CPU_src1_value_a3 }
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:286$314:
      Old ports: A=$0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653, B=0, Y={ \CPU_instr_a1 [31:2] \CPU_imem_rd_data_a1 [1:0] }
      New ports: A={ $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [26] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [24:17] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [15:8] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [5:4] $0$mem2reg_rd$\CPU_Imem_instr_a1$../output/compiled_tlv/alphacore.v:286$1_DATA[31:0]$653 [2] 1'1 }, B=21'000000000000000000000, Y={ \CPU_instr_a1 [26] \CPU_instr_a1 [24:17] \CPU_instr_a1 [15:8] \CPU_instr_a1 [5:4] \CPU_instr_a1 [2] \CPU_imem_rd_data_a1 [0] }
      New connections: { \CPU_instr_a1 [31:27] \CPU_instr_a1 [25] \CPU_instr_a1 [16] \CPU_instr_a1 [7:6] \CPU_instr_a1 [3] \CPU_imem_rd_data_a1 [1] } = { 3'000 \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [8] \CPU_instr_a1 [2] 2'00 \CPU_imem_rd_data_a1 [0] }
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:85$166:
      Old ports: A=$ternary$../output/compiled_tlv/alphacore.v:86$165_Y, B={ \CPU_instr_a1 [31:12] 12'000000000000 }, Y=$ternary$../output/compiled_tlv/alphacore.v:85$166_Y
      New ports: A={ $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20:1] }, B={ \CPU_instr_a1 [31:12] 11'00000000000 }, Y=$ternary$../output/compiled_tlv/alphacore.v:85$166_Y [31:1]
      New connections: $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [0] = 1'0
  Optimizing cells in module \alphacore.
    Consolidated identical input bits for $mux cell $auto$share.cc:660:make_supercell$1169:
      Old ports: A=$auto$share.cc:657:make_supercell$1157, B={ 32'00000000000000000000000000000000 \CPU_src1_value_a3 }, Y=$auto$share.cc:657:make_supercell$1167
      New ports: A=$auto$share.cc:657:make_supercell$1157 [32], B=1'0, Y=$auto$share.cc:657:make_supercell$1167 [32]
      New connections: { $auto$share.cc:657:make_supercell$1167 [63:33] $auto$share.cc:657:make_supercell$1167 [31:0] } = { $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] $auto$share.cc:657:make_supercell$1167 [32] \CPU_src1_value_a3 }
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:84$167:
      Old ports: A=$ternary$../output/compiled_tlv/alphacore.v:85$166_Y, B={ \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [7] \CPU_instr_a1 [30:25] \CPU_instr_a1 [11:8] 1'0 }, Y=$ternary$../output/compiled_tlv/alphacore.v:84$167_Y
      New ports: A=$ternary$../output/compiled_tlv/alphacore.v:85$166_Y [31:1], B={ 20'00000000000000000000 \CPU_instr_a1 [2] 2'00 \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [11:8] }, Y=$ternary$../output/compiled_tlv/alphacore.v:84$167_Y [31:1]
      New connections: $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:85$166:
      Old ports: A={ $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20:1] }, B={ \CPU_instr_a1 [31:12] 11'00000000000 }, Y=$ternary$../output/compiled_tlv/alphacore.v:85$166_Y [31:1]
      New ports: A={ $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20:1] }, B={ 1'0 \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [24:17] \CPU_instr_a1 [8] \CPU_instr_a1 [15:12] 11'00000000000 }, Y={ $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [29:28] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [26] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [24:1] }
      New connections: { $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [31:30] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [27] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [25] } = { $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [29] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [29] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [26] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [20] }
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:86$165:
      Old ports: A=20'00000000000000000000, B={ \CPU_instr_a1 [31] \CPU_instr_a1 [19:12] \CPU_instr_a1 [20] \CPU_instr_a1 [30:21] }, Y=$ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20:1]
      New ports: A=15'000000000000000, B={ \CPU_instr_a1 [19:17] \CPU_instr_a1 [8] \CPU_instr_a1 [15:12] \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [24:21] }, Y={ $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [19:12] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [8] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [6:1] }
      New connections: { $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [11:9] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [7] } = { 1'0 $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [5] 2'00 $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [6] }
  Optimizing cells in module \alphacore.
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:84$167:
      Old ports: A=$ternary$../output/compiled_tlv/alphacore.v:85$166_Y [31:1], B={ 20'00000000000000000000 \CPU_instr_a1 [2] 2'00 \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [11:8] }, Y=$ternary$../output/compiled_tlv/alphacore.v:84$167_Y [31:1]
      New ports: A={ $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [29:28] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [26] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [24:1] }, B={ 16'0000000000000000 \CPU_instr_a1 [2] 2'00 \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [11:8] }, Y={ $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [29:28] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [26] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [24:1] }
      New connections: { $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [31:30] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [27] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [25] } = { $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [29] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [29] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [26] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [20] }
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:85$166:
      Old ports: A={ $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [20:1] }, B={ 1'0 \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [24:17] \CPU_instr_a1 [8] \CPU_instr_a1 [15:12] 11'00000000000 }, Y={ $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [29:28] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [26] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [24:1] }
      New ports: A={ 7'0000000 $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [19:12] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [8] $ternary$../output/compiled_tlv/alphacore.v:86$165_Y [6:1] }, B={ \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [24:17] \CPU_instr_a1 [8] \CPU_instr_a1 [15:12] 7'0000000 }, Y={ $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [28] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [26] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [24:12] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [8] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [6:1] }
      New connections: { $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [29] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [11:9] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [7] } = { 1'0 $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [5] 2'00 $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [6] }
  Optimizing cells in module \alphacore.
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:83$168:
      Old ports: A=$ternary$../output/compiled_tlv/alphacore.v:84$167_Y, B={ \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31:25] \CPU_instr_a1 [11:7] }, Y=$auto$wreduce.cc:455:run$1088
      New ports: A={ $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [29:28] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [26] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [24:1] 1'0 }, B={ 19'0000000000000000000 \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [11:8] \CPU_instr_a1 [2] }, Y={ $auto$wreduce.cc:455:run$1088 [29:28] $auto$wreduce.cc:455:run$1088 [26] $auto$wreduce.cc:455:run$1088 [24:0] }
      New connections: { $auto$wreduce.cc:455:run$1088 [31:30] $auto$wreduce.cc:455:run$1088 [27] $auto$wreduce.cc:455:run$1088 [25] } = { $auto$wreduce.cc:455:run$1088 [29] $auto$wreduce.cc:455:run$1088 [29] $auto$wreduce.cc:455:run$1088 [26] $auto$wreduce.cc:455:run$1088 [20] }
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:84$167:
      Old ports: A={ $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [29:28] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [26] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [24:1] }, B={ 16'0000000000000000 \CPU_instr_a1 [2] 2'00 \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [11:8] }, Y={ $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [29:28] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [26] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [24:1] }
      New ports: A={ $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [28] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [26] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [24:12] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [5] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [8] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [6:1] }, B={ 15'000000000000000 \CPU_instr_a1 [2] \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [11:8] }, Y={ $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [28] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [26] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [24:11] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [8] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [6:1] }
      New connections: { $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [29] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [10:9] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [7] } = { 3'000 $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [6] }
  Optimizing cells in module \alphacore.
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:82$169:
      Old ports: A=$auto$wreduce.cc:455:run$1088, B={ \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31] \CPU_instr_a1 [31:20] }, Y=\CPU_imm_a1
      New ports: A={ $auto$wreduce.cc:455:run$1088 [29:28] $auto$wreduce.cc:455:run$1088 [26] $auto$wreduce.cc:455:run$1088 [24:0] }, B={ 19'0000000000000000000 \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [24:20] }, Y={ \CPU_imm_a1 [29:28] \CPU_imm_a1 [26] \CPU_imm_a1 [24:0] }
      New connections: { \CPU_imm_a1 [31:30] \CPU_imm_a1 [27] \CPU_imm_a1 [25] } = { \CPU_imm_a1 [29] \CPU_imm_a1 [29] \CPU_imm_a1 [26] \CPU_imm_a1 [20] }
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:83$168:
      Old ports: A={ $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [29:28] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [26] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [24:1] 1'0 }, B={ 19'0000000000000000000 \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [11:8] \CPU_instr_a1 [2] }, Y={ $auto$wreduce.cc:455:run$1088 [29:28] $auto$wreduce.cc:455:run$1088 [26] $auto$wreduce.cc:455:run$1088 [24:0] }
      New ports: A={ $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [28] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [26] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [24:11] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [8] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [6:1] 1'0 }, B={ 16'0000000000000000 \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [11:8] \CPU_instr_a1 [2] }, Y={ $auto$wreduce.cc:455:run$1088 [28] $auto$wreduce.cc:455:run$1088 [26] $auto$wreduce.cc:455:run$1088 [24:11] $auto$wreduce.cc:455:run$1088 [8] $auto$wreduce.cc:455:run$1088 [6:0] }
      New connections: { $auto$wreduce.cc:455:run$1088 [29] $auto$wreduce.cc:455:run$1088 [10:9] $auto$wreduce.cc:455:run$1088 [7] } = { 3'000 $auto$wreduce.cc:455:run$1088 [6] }
  Optimizing cells in module \alphacore.
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:82$169:
      Old ports: A={ $auto$wreduce.cc:455:run$1088 [29:28] $auto$wreduce.cc:455:run$1088 [26] $auto$wreduce.cc:455:run$1088 [24:0] }, B={ 19'0000000000000000000 \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [24:20] }, Y={ \CPU_imm_a1 [29:28] \CPU_imm_a1 [26] \CPU_imm_a1 [24:0] }
      New ports: A={ $auto$wreduce.cc:455:run$1088 [28] $auto$wreduce.cc:455:run$1088 [26] $auto$wreduce.cc:455:run$1088 [24:11] $auto$wreduce.cc:455:run$1088 [8] $auto$wreduce.cc:455:run$1088 [6:0] }, B={ 16'0000000000000000 \CPU_instr_a1 [2] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [24:20] }, Y={ \CPU_imm_a1 [28] \CPU_imm_a1 [26] \CPU_imm_a1 [24:11] \CPU_imm_a1 [8] \CPU_imm_a1 [6:0] }
      New connections: { \CPU_imm_a1 [29] \CPU_imm_a1 [10:9] \CPU_imm_a1 [7] } = { 3'000 \CPU_imm_a1 [6] }
  Optimizing cells in module \alphacore.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \clk_gate.
Performed a total of 18 changes.

7.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

7.19.6. Executing OPT_SHARE pass.

7.19.7. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$971 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [19:12], Q = \CPU_imm_a2 [19:12], rval = 8'00000000).
Adding SRST signal on $procdff$971 ($dff) from module alphacore (D = { \CPU_instr_a1 [2] \CPU_instr_a1 [24:21] }, Q = { \CPU_imm_a2 [28] \CPU_imm_a2 [24:21] }, rval = 5'00000).
Adding SRST signal on $procdff$971 ($dff) from module alphacore (D = $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [11], Q = \CPU_imm_a2 [11], rval = 1'0).

7.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..

7.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
<suppressed ~49 debug messages>
Optimizing module alphasoc.
Optimizing module clk_gate.

7.19.10. Rerunning OPT passes. (Maybe there is more to do..)

7.19.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clk_gate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

7.19.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphacore.
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:85$166:
      Old ports: A=22'0000000000000000000000, B={ \CPU_instr_a1 [7] \CPU_instr_a1 [26] \CPU_instr_a1 [24:12] 7'0000000 }, Y={ $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [28:27] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [24:21] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [25] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [19:12] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [8:7] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [11] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [4:1] }
      New ports: A=15'000000000000000, B={ \CPU_instr_a1 [7] \CPU_instr_a1 [26] \CPU_instr_a1 [24:12] }, Y={ $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [28:27] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [24:21] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [25] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [19:12] }
      New connections: { $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [8:7] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [11] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [4:1] } = 7'0000000
  Optimizing cells in module \alphacore.
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:83$168:
      Old ports: A={ $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [28:27] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [24:21] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [25] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [19:11] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [8:7] $ternary$../output/compiled_tlv/alphacore.v:84$167_Y [5:1] 1'0 }, B={ 16'0000000000000000 \CPU_instr_a1 [7] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [11:9] \CPU_instr_a1 [16] \CPU_instr_a1 [7] }, Y={ $auto$wreduce.cc:455:run$1088 [28:27] $auto$wreduce.cc:455:run$1088 [24:21] $auto$wreduce.cc:455:run$1088 [25] $auto$wreduce.cc:455:run$1088 [19:11] $auto$wreduce.cc:455:run$1088 [8:7] $auto$wreduce.cc:455:run$1088 [5:0] }
      New ports: A={ $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [28:27] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [24:21] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [25] $ternary$../output/compiled_tlv/alphacore.v:85$166_Y [19:12] 7'0000000 }, B={ 15'000000000000000 \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [11:9] \CPU_instr_a1 [16] \CPU_instr_a1 [7] }, Y={ $auto$wreduce.cc:455:run$1088 [28:27] $auto$wreduce.cc:455:run$1088 [24:21] $auto$wreduce.cc:455:run$1088 [25] $auto$wreduce.cc:455:run$1088 [19:12] $auto$wreduce.cc:455:run$1088 [7] $auto$wreduce.cc:455:run$1088 [5:0] }
      New connections: { $auto$wreduce.cc:455:run$1088 [11] $auto$wreduce.cc:455:run$1088 [8] } = { 1'0 $auto$wreduce.cc:455:run$1088 [0] }
  Optimizing cells in module \alphacore.
    Consolidated identical input bits for $mux cell $ternary$../output/compiled_tlv/alphacore.v:82$169:
      Old ports: A={ $auto$wreduce.cc:455:run$1088 [28:27] $auto$wreduce.cc:455:run$1088 [24:21] $auto$wreduce.cc:455:run$1088 [25] $auto$wreduce.cc:455:run$1088 [19:11] $auto$wreduce.cc:455:run$1088 [8:7] $auto$wreduce.cc:455:run$1088 [5:0] }, B={ 16'0000000000000000 \CPU_instr_a1 [7] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [24:20] }, Y={ \CPU_imm_a1 [28:27] \CPU_imm_a1 [24:21] \CPU_imm_a1 [25] \CPU_imm_a1 [19:11] \CPU_imm_a1 [8:7] \CPU_imm_a1 [5:0] }
      New ports: A={ $auto$wreduce.cc:455:run$1088 [28:27] $auto$wreduce.cc:455:run$1088 [24:21] $auto$wreduce.cc:455:run$1088 [25] $auto$wreduce.cc:455:run$1088 [19:12] $auto$wreduce.cc:455:run$1088 [0] $auto$wreduce.cc:455:run$1088 [7] $auto$wreduce.cc:455:run$1088 [5:0] }, B={ 15'000000000000000 \CPU_instr_a1 [7] \CPU_instr_a1 [26] \CPU_instr_a1 [20] \CPU_instr_a1 [24:20] }, Y={ \CPU_imm_a1 [28:27] \CPU_imm_a1 [24:21] \CPU_imm_a1 [25] \CPU_imm_a1 [19:12] \CPU_imm_a1 [8:7] \CPU_imm_a1 [5:0] }
      New connections: \CPU_imm_a1 [11] = 1'0
  Optimizing cells in module \alphacore.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \clk_gate.
Performed a total of 3 changes.

7.19.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
<suppressed ~72 debug messages>
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 24 cells.

7.19.14. Executing OPT_SHARE pass.

7.19.15. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$1204 ($dff) from module alphacore.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$1204 ($dff) from module alphacore.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$1204 ($dff) from module alphacore.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$1204 ($dff) from module alphacore.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$1204 ($dff) from module alphacore.
Setting constant 0-bit at position 0 on $procdff$888 ($dff) from module alphacore.

7.19.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

7.19.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
<suppressed ~4 debug messages>
Optimizing module alphasoc.
Optimizing module clk_gate.

7.19.18. Rerunning OPT passes. (Maybe there is more to do..)

7.19.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$../output/compiled_tlv/alphacore.v:193$263.
    dead port 1/2 on $mux $ternary$../output/compiled_tlv/alphacore.v:198$257.
    dead port 1/2 on $mux $ternary$../output/compiled_tlv/alphacore.v:201$254.
    dead port 1/2 on $mux $ternary$../output/compiled_tlv/alphacore.v:202$253.
    dead port 1/2 on $mux $ternary$../output/compiled_tlv/alphacore.v:214$300.
    dead port 1/2 on $mux $ternary$../output/compiled_tlv/alphacore.v:215$299.
    dead port 1/2 on $mux $ternary$../output/compiled_tlv/alphacore.v:216$298.
    dead port 1/2 on $mux $ternary$../output/compiled_tlv/alphacore.v:217$297.
    dead port 1/2 on $mux $ternary$../output/compiled_tlv/alphacore.v:57$134.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clk_gate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 9 multiplexer ports.
<suppressed ~14 debug messages>

7.19.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphacore.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \clk_gate.
Performed a total of 0 changes.

7.19.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

7.19.22. Executing OPT_SHARE pass.

7.19.23. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1201 ($sdff) from module alphacore.
Setting constant 0-bit at position 0 on $procdff$887 ($dff) from module alphacore.
Setting constant 0-bit at position 9 on $procdff$970 ($dff) from module alphacore.
Setting constant 0-bit at position 10 on $procdff$970 ($dff) from module alphacore.
Setting constant 0-bit at position 29 on $procdff$970 ($dff) from module alphacore.
Setting constant 0-bit at position 30 on $procdff$970 ($dff) from module alphacore.
Setting constant 0-bit at position 31 on $procdff$970 ($dff) from module alphacore.

7.19.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..
Removed 7 unused cells and 23 unused wires.
<suppressed ~10 debug messages>

7.19.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
<suppressed ~29 debug messages>
Optimizing module alphasoc.
Optimizing module clk_gate.

7.19.26. Rerunning OPT passes. (Maybe there is more to do..)

7.19.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $ternary$../output/compiled_tlv/alphacore.v:189$236: \CPU_src1_value_a3 [31] -> 1'1
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clk_gate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

7.19.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphacore.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \clk_gate.
Performed a total of 0 changes.

7.19.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
<suppressed ~6 debug messages>
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 2 cells.

7.19.30. Executing OPT_SHARE pass.

7.19.31. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$1206 ($dff) from module alphacore.
Setting constant 0-bit at position 0 on $procdff$850 ($dff) from module alphacore.

7.19.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..
Removed 7 unused cells and 21 unused wires.
<suppressed ~10 debug messages>

7.19.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
<suppressed ~21 debug messages>
Optimizing module alphasoc.
Optimizing module clk_gate.

7.19.34. Rerunning OPT passes. (Maybe there is more to do..)

7.19.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clk_gate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

7.19.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphacore.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \clk_gate.
Performed a total of 0 changes.

7.19.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

7.19.38. Executing OPT_SHARE pass.

7.19.39. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$849 ($dff) from module alphacore.

7.19.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

7.19.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
<suppressed ~2 debug messages>
Optimizing module alphasoc.
Optimizing module clk_gate.

7.19.42. Rerunning OPT passes. (Maybe there is more to do..)

7.19.43. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clk_gate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

7.19.44. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphacore.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \clk_gate.
Performed a total of 0 changes.

7.19.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

7.19.46. Executing OPT_SHARE pass.

7.19.47. Executing OPT_DFF pass (perform DFF optimizations).

7.19.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

7.19.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

7.19.50. Rerunning OPT passes. (Maybe there is more to do..)

7.19.51. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphacore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clk_gate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

7.19.52. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphacore.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \clk_gate.
Performed a total of 0 changes.

7.19.53. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

7.19.54. Executing OPT_SHARE pass.

7.19.55. Executing OPT_DFF pass (perform DFF optimizations).

7.19.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..

7.19.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

7.19.58. Finished OPT passes. (There is nothing left to do.)

7.20. Executing TECHMAP pass (map to technology primitives).

7.20.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$constmap:abf224c78e834c2ea63e9fb8c9a761072422e69b$paramod$68f168e58a83a45422011879ee1f7206dbcf7552\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:092011f7d4aee5efbb37c41f16125a055a79abd7$paramod$65b247ea06a847990f5821813abbc3df9880ca64\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$7f1d45a92d0221fa6c256845bf4513df30042923\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $not.
Using template $paramod$78e969f2586efcf3a5b0b0440bcca0db83d5cca2\_90_alu for cells of type $alu.
Using template $paramod$c83925f608704c3fa34790ddcfce9302bdcd7533\_90_pmux for cells of type $pmux.
Using template $paramod$c45300d0b528ed9fbe0308117b30bcb369afbaff\_90_pmux for cells of type $pmux.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~3450 debug messages>

7.21. Executing OPT pass (performing simple optimizations).

7.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
<suppressed ~1548 debug messages>
Optimizing module alphasoc.
Optimizing module clk_gate.

7.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
<suppressed ~2871 debug messages>
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 957 cells.

7.21.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$3078 ($_DFF_P_) from module alphacore (D = \CPU_instr_a1 [20], Q = \CPU_imm_a2 [25], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$3079 ($_DFF_P_) from module alphacore (D = \CPU_instr_a1 [26], Q = \CPU_imm_a2 [26], rval = 1'0).

7.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..
Removed 274 unused cells and 1842 unused wires.
<suppressed ~275 debug messages>

7.21.5. Rerunning OPT passes. (Removed registers in this run.)

7.21.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

7.21.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
<suppressed ~18 debug messages>
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 6 cells.

7.21.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$5580 ($_SDFF_PP0_) from module alphacore (D = \CPU_instr_a1 [19], Q = \CPU_imm_a2 [19], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5579 ($_SDFF_PP0_) from module alphacore (D = \CPU_instr_a1 [18], Q = \CPU_imm_a2 [18], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5578 ($_SDFF_PP0_) from module alphacore (D = \CPU_instr_a1 [17], Q = \CPU_imm_a2 [17], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5577 ($_SDFF_PP0_) from module alphacore (D = \CPU_instr_a1 [16], Q = \CPU_imm_a2 [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5576 ($_SDFF_PP0_) from module alphacore (D = \CPU_instr_a1 [15], Q = \CPU_imm_a2 [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5575 ($_SDFF_PP0_) from module alphacore (D = \CPU_instr_a1 [14], Q = \CPU_imm_a2 [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5574 ($_SDFF_PP0_) from module alphacore (D = \CPU_instr_a1 [13], Q = \CPU_imm_a2 [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5573 ($_SDFF_PP0_) from module alphacore (D = \CPU_instr_a1 [12], Q = \CPU_imm_a2 [12], rval = 1'0).

7.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..
Removed 8 unused cells and 15 unused wires.
<suppressed ~9 debug messages>

7.21.10. Rerunning OPT passes. (Removed registers in this run.)

7.21.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

7.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
<suppressed ~48 debug messages>
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 16 cells.

7.21.13. Executing OPT_DFF pass (perform DFF optimizations).

7.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

7.21.15. Finished fast OPT passes.

7.22. Executing ABC pass (technology mapping using ABC).

7.22.1. Extracting gate netlist of module `\alphacore' to `<abc-temp-dir>/input.blif'..
Extracted 7979 gates and 9777 wires to a netlist network with 1795 inputs and 294 outputs.

7.22.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.22.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      203
ABC RESULTS:              XNOR cells:       80
ABC RESULTS:              NAND cells:       71
ABC RESULTS:               XOR cells:      135
ABC RESULTS:               NOT cells:      182
ABC RESULTS:               MUX cells:     1026
ABC RESULTS:             ORNOT cells:      133
ABC RESULTS:            ANDNOT cells:     2900
ABC RESULTS:                OR cells:     2998
ABC RESULTS:               NOR cells:      117
ABC RESULTS:        internal signals:     7688
ABC RESULTS:           input signals:     1795
ABC RESULTS:          output signals:      294
Removing temp directory.

7.22.2. Extracting gate netlist of module `\alphasoc' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

7.22.3. Extracting gate netlist of module `\clk_gate' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

7.23. Executing OPT pass (performing simple optimizations).

7.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
<suppressed ~224 debug messages>
Optimizing module alphasoc.
Optimizing module clk_gate.

7.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
<suppressed ~18 debug messages>
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 6 cells.

7.23.3. Executing OPT_DFF pass (perform DFF optimizations).

7.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..
Removed 6 unused cells and 3393 unused wires.
<suppressed ~18 debug messages>

7.23.5. Finished fast OPT passes.

7.24. Executing HIERARCHY pass (managing design hierarchy).

7.24.1. Analyzing design hierarchy..
Top module:  \alphasoc
Used module:     \alphacore
Used module:         \clk_gate

7.24.2. Analyzing design hierarchy..
Top module:  \alphasoc
Used module:     \alphacore
Used module:         \clk_gate
Removed 0 unused modules.

7.25. Printing statistics.

=== alphacore ===

   Number of wires:               7884
   Number of wire bits:          11390
   Number of public wires:         311
   Number of public wire bits:    3817
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               9811
     $_ANDNOT_                    2897
     $_AND_                        203
     $_DFF_P_                      388
     $_MUX_                       1026
     $_NAND_                        70
     $_NOR_                        115
     $_NOT_                        176
     $_ORNOT_                      133
     $_OR_                        2998
     $_SDFFE_PP0P_                1426
     $_SDFFE_PP1P_                 112
     $_SDFF_PP0_                    45
     $_XNOR_                        80
     $_XOR_                        135
     clk_gate                        7

=== alphasoc ===

   Number of wires:                  9
   Number of wire bits:             18
   Number of public wires:           9
   Number of public wire bits:      18
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     alphacore                       1
     avsddac                         1
     avsdpll                         1

=== clk_gate ===

   Number of wires:                  5
   Number of wire bits:              5
   Number of public wires:           5
   Number of public wire bits:       5
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== design hierarchy ===

   alphasoc                          1
     alphacore                       1
       clk_gate                      7

   Number of wires:               7928
   Number of wire bits:          11443
   Number of public wires:         355
   Number of public wire bits:    3870
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               9806
     $_ANDNOT_                    2897
     $_AND_                        203
     $_DFF_P_                      388
     $_MUX_                       1026
     $_NAND_                        70
     $_NOR_                        115
     $_NOT_                        176
     $_ORNOT_                      133
     $_OR_                        2998
     $_SDFFE_PP0P_                1426
     $_SDFFE_PP1P_                 112
     $_SDFF_PP0_                    45
     $_XNOR_                        80
     $_XOR_                        135
     avsddac                         1
     avsdpll                         1

7.26. Executing CHECK pass (checking for obvious problems).
Checking module alphacore...
Checking module alphasoc...
Checking module clk_gate...
Found and reported 0 problems.

yosys> dfflibmap -liberty ./lib/sky130_fd_sc_hd__tt_025C_1v80.lib

8. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
  cell sky130_fd_sc_hd__dfxtp_1 (noninv, pins=3, area=20.02) is a direct match for cell type $_DFF_P_.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
  cell sky130_fd_sc_hd__dfrtn_1 (noninv, pins=4, area=25.02) is a direct match for cell type $_DFF_NN0_.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
  cell sky130_fd_sc_hd__dfrtp_1 (noninv, pins=4, area=25.02) is a direct match for cell type $_DFF_PN0_.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
  cell sky130_fd_sc_hd__dfbbn_1 (noninv, pins=6, area=32.53) is a direct match for cell type $_DFFSR_NNN_.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
  cell sky130_fd_sc_hd__dfbbp_1 (noninv, pins=6, area=32.53) is a direct match for cell type $_DFFSR_PNN_.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    \sky130_fd_sc_hd__dfrtn_1 _DFF_NN0_ (.CLK_N( C), .D( D), .Q( Q), .RESET_B( R));
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_1 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_1 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    \sky130_fd_sc_hd__dfbbp_1 _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

8.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\alphacore':
  mapped 1971 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_1 cells.
Mapping DFF cells in module `\alphasoc':
Mapping DFF cells in module `\clk_gate':


yosys> opt

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alphacore..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alphasoc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \clk_gate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alphacore.
  Optimizing cells in module \alphasoc.
  Optimizing cells in module \clk_gate.
Performed a total of 0 changes.

9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alphacore'.
Finding identical cells in module `\alphasoc'.
Finding identical cells in module `\clk_gate'.
Removed a total of 0 cells.

9.6. Executing OPT_DFF pass (perform DFF optimizations).

9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alphacore..
Finding unused cells or wires in module \alphasoc..
Finding unused cells or wires in module \clk_gate..

9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module alphacore.
Optimizing module alphasoc.
Optimizing module clk_gate.

9.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -liberty ./lib/sky130_fd_sc_hd__tt_025C_1v80.lib -script +strash;scorr;ifraig;retime;{D};strash;dch,-f;map,-M,1,{D}

10. Executing ABC pass (technology mapping using ABC).

10.1. Extracting gate netlist of module `\alphacore' to `<abc-temp-dir>/input.blif'..
Extracted 10954 gates and 12788 wires to a netlist network with 1832 inputs and 1759 outputs.

10.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib 
ABC: Parsing finished successfully.  Parsing time =     0.11 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/alphadelta1803/Desktop/projects/pes_riscv_processor/src/./lib/sky130_fd_sc_hd__tt_025C_1v80.lib" has 334 cells (94 skipped: 63 seq; 13 tri-state; 18 no func; 0 dont_use).  Time =     0.19 sec
ABC: Memory =   19.84 MB. Time =     0.19 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:       32
ABC RESULTS:   sky130_fd_sc_hd__a311oi_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o2bb2ai_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__xnor2_1 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o32ai_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__mux2i_1 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o31ai_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a32oi_1 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__nand3b_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__a21boi_0 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o21a_1 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__o311ai_0 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:       36
ABC RESULTS:   sky130_fd_sc_hd__o221ai_1 cells:       46
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_0 cells:       23
ABC RESULTS:   sky130_fd_sc_hd__a211oi_1 cells:       22
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_1 cells:       23
ABC RESULTS:   sky130_fd_sc_hd__a22oi_1 cells:      420
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:      582
ABC RESULTS:   sky130_fd_sc_hd__a221oi_1 cells:       68
ABC RESULTS:   sky130_fd_sc_hd__nor4_1 cells:      108
ABC RESULTS:   sky130_fd_sc_hd__a31oi_1 cells:       39
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:      179
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:      195
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:       77
ABC RESULTS:   sky130_fd_sc_hd__o21bai_1 cells:       34
ABC RESULTS:   sky130_fd_sc_hd__o211ai_1 cells:       84
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:      848
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:     1386
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:     3500
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:     1835
ABC RESULTS:          _const1_ cells:        1
ABC RESULTS:          _const0_ cells:       23
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:      794
ABC RESULTS:        internal signals:     9197
ABC RESULTS:           input signals:     1832
ABC RESULTS:          output signals:     1759
Removing temp directory.

10.2. Extracting gate netlist of module `\alphasoc' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

10.3. Extracting gate netlist of module `\clk_gate' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

yosys> flatten

11. Executing FLATTEN pass (flatten design).
Deleting now unused module alphacore.
Deleting now unused module clk_gate.
<suppressed ~8 debug messages>

yosys> setundef -zero

12. Executing SETUNDEF pass (replace undef values with defined constants).

yosys> clean -purge
Removed 1 unused cells and 12920 unused wires.

yosys> rename -enumerate

yosys> stat

13. Printing statistics.

=== alphasoc ===

   Number of wires:              10457
   Number of wire bits:          12558
   Number of public wires:       10457
   Number of public wire bits:   12558
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              12444
     avsddac                         1
     avsdpll                         1
     sky130_fd_sc_hd__a2111oi_0     23
     sky130_fd_sc_hd__a211o_2       32
     sky130_fd_sc_hd__a211oi_1      22
     sky130_fd_sc_hd__a21boi_0       7
     sky130_fd_sc_hd__a21o_2         3
     sky130_fd_sc_hd__a21oi_1     1835
     sky130_fd_sc_hd__a221oi_1      68
     sky130_fd_sc_hd__a22o_2         9
     sky130_fd_sc_hd__a22oi_1      420
     sky130_fd_sc_hd__a311oi_1       3
     sky130_fd_sc_hd__a31o_2         2
     sky130_fd_sc_hd__a31oi_1       39
     sky130_fd_sc_hd__a32oi_1        4
     sky130_fd_sc_hd__and2_2        11
     sky130_fd_sc_hd__and3_2         3
     sky130_fd_sc_hd__clkinv_1    1386
     sky130_fd_sc_hd__dfxtp_1     1970
     sky130_fd_sc_hd__mux2i_1       25
     sky130_fd_sc_hd__nand2_1     3500
     sky130_fd_sc_hd__nand3_1      195
     sky130_fd_sc_hd__nand3b_1       1
     sky130_fd_sc_hd__nand4_1      179
     sky130_fd_sc_hd__nor2_1       794
     sky130_fd_sc_hd__nor3_1        77
     sky130_fd_sc_hd__nor4_1       108
     sky130_fd_sc_hd__o2111ai_1     23
     sky130_fd_sc_hd__o211ai_1      84
     sky130_fd_sc_hd__o21a_1        17
     sky130_fd_sc_hd__o21ai_0      848
     sky130_fd_sc_hd__o21bai_1      34
     sky130_fd_sc_hd__o221a_2        3
     sky130_fd_sc_hd__o221ai_1      46
     sky130_fd_sc_hd__o22ai_1      582
     sky130_fd_sc_hd__o2bb2ai_1      2
     sky130_fd_sc_hd__o311ai_0       7
     sky130_fd_sc_hd__o31ai_1        5
     sky130_fd_sc_hd__o32ai_1        2
     sky130_fd_sc_hd__or2_2         19
     sky130_fd_sc_hd__or4_2          9
     sky130_fd_sc_hd__xnor2_1        9
     sky130_fd_sc_hd__xor2_1        36


yosys> write_verilog -noattr ../output/synth/alphasoc.synth.v
14. Executing Verilog backend.

14.1. Executing BMUXMAP pass.

14.2. Executing DEMUXMAP pass.
Dumping module `\alphasoc'.

